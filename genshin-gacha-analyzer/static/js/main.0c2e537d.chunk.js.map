{"version":3,"sources":["context/GlobalContext.ts","pages/LoadPage.tsx","const.ts","components/CanvasDataGrid.tsx","components/WorkSheet.tsx","pages/ShowPage/ShowData/index.tsx","pages/ShowPage/Timeline/getDateInfo.ts","pages/ShowPage/Timeline/CollapseWorkSheet.tsx","pages/ShowPage/Timeline/index.tsx","resource/achievement_achieved.png","resource/achievement_show.png","components/AchievementCard.tsx","pages/ShowPage/Achievements/achievements.ts","pages/ShowPage/Achievements/index.tsx","pages/ShowPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalContext","React","createContext","workbook","updateWorkbook","Dragger","Upload","LoadPage","onLoad","useState","loading","setLoading","errorMessage","setErrorMessage","useContext","handleUpload","useCallback","file","name","endsWith","reader","FileReader","onload","e","data","Uint8Array","target","result","XLSX","read","type","onerror","readAsArrayBuffer","css","className","href","message","showIcon","banner","accept","multiple","beforeUpload","showUploadList","tip","InboxOutlined","SHOW_DATA_ALL_KEY","SCHEMA","width","hidden","SCHEMA_ALL","concat","title","CanvasDataGrid","schema","attributes","onCreate","props","divEl","useRef","gridRef","useEffect","current","grid","canvasDataGrid","parentNode","style","scrollBarBoxWidth","scrollBarWidth","dispose","ref","editable","allowColumnResize","allowRowResize","orderBy","WorkSheet","handleCreate","node","window","filters","number","value","filterFor","oldStringSorter","sorters","string","columnName","direction","sortTime","sortCount","l","r","info","addEventListener","star","row","ctx","fillStyle","height","margin","TabPane","Tabs","ShowData","onGetData","tabs","activeKey","setActiveKey","handleChange","key","onChange","size","centered","map","tab","format","date","mouth","getMonth","day","getDate","getFullYear","Panel","Collapse","CollapseWorkSheet","isCollapsed","setCollapsed","handleCreateGrid","orderDirection","getData","endIndex","allData","dayStart","Date","dayEnd","startIndex","findIndex","i","length","slice","header","echarts","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","DataZoomComponent","CanvasRenderer","BarChart","Timeline","echartsWrapper","myChartRef","hideZeroDay","setHideZeroDay","currentday","setCurrentDay","useMemo","memoize","isHideZeroDay","countByDay","getDay","Array","isArray","dateList","begin","end","arr","str_b","split","str_e","date_b","setUTCFullYear","date_e","unixDb","getTime","unixDe","j","push","parseInt","getDateInfo","addToList","existFiveStar","count","itemStyle","color","len","时间","星级","calculateData","myChart","options","tooltip","trigger","position","pt","left","text","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","boundaryGap","yAxis","start","series","setOption","on","params","handleChangeSwitch","checked","AchievementCard","achievedTime","isAchieved","backgroundColor","src","AchievedPng","ShowPng","undefined","replaceAll","defaultFormatter","formatTime","str","achievements","all","maxBy","Object","keys","cur","items","item","保底内","名称","minBy","_day","values","today","point","percent","filter","resultStr","cache","forEach","formatByName","join","Number","toFixed","waitTime","v","index","maxWaitTime","max","t","indexOf","fromTime","endTime","Math","floor","gacha","gacha10Count","reduce","acc","gacha1Count","maxGacha","character","sortedData","sort","b","a","maxNum","names","Achievements","allAchievements","weapon","10","1","walk","类别","currentDay","temp","func","Content","Layout","Sider","ShowPage","sheetNames","SheetNames","getJson","create","总次数","sheet","Sheets","utils","sheet_to_json","pool","activeMenu","setActiveMenu","handleMenuChange","renderContent","theme","mode","defaultSelectedKeys","onSelect","Item","App","WrappedApp","setWorkbook","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c2e537d.chunk.js","sourcesContent":["import React from 'react';\nimport { WorkBook } from 'xlsx/types';\n\ntype GlobalContextType = {\n  workbook: WorkBook | null;\n  updateWorkbook: (workbook: WorkBook) => void;\n};\n\nconst GlobalContext = React.createContext<GlobalContextType>({\n  workbook: null,\n  updateWorkbook: (() => {}) as any,\n});\n\nexport default GlobalContext;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, useCallback, useContext, useState } from 'react';\nimport { Button, Upload, Alert, Spin } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { RcFile } from 'antd/lib/upload';\nimport XLSX from 'xlsx';\nimport GlobalContext from 'context/GlobalContext';\n\nconst { Dragger } = Upload;\ntype LoadPageProps = {\n  onLoad?: () => void;\n};\n\nexport const LoadPage: FC<LoadPageProps> = function ({ onLoad }) {\n  const [loading, setLoading] = useState<Boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<String | null>(null);\n  const { updateWorkbook } = useContext(GlobalContext);\n  const handleUpload = useCallback((file: RcFile) => {\n    if (!file.name.endsWith('.xlsx')) {\n      setErrorMessage('文件类型错误，请重新上传');\n      return false;\n    }\n    setLoading(true);\n    const reader = new FileReader();\n    reader.onload = function (e: ProgressEvent<FileReader>) {\n      const data = new Uint8Array((e.target as FileReader).result as any);\n      const workbook = XLSX.read(data, { type: 'array' });\n      updateWorkbook(workbook);\n    };\n    reader.onerror = function (e: ProgressEvent<FileReader>) {\n      setErrorMessage('解析文件失败');\n      setLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n    return false;\n  }, []);\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <div\n        className='ant-alert-info'\n        css={css`\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          border: none;\n          margin: 20px 0;\n        `}\n      >\n        <a href='https://ngabbs.com/read.php?tid=25004616' target='_blank'>\n          <Alert\n            message={\n              <div>\n                不知道如何获取文件？\n                <Button type='link'>请点击这里</Button>\n              </div>\n            }\n            type='info'\n            showIcon\n            banner\n          />\n        </a>\n      </div>\n      <Dragger\n        name='file'\n        accept='.xlsx'\n        multiple={false}\n        beforeUpload={handleUpload}\n        showUploadList={false}\n        css={css`\n          min-width: 600px;\n          padding: 40px;\n        `}\n      >\n        {errorMessage && <Alert message={errorMessage} type='error' />}\n        <p className='ant-upload-drag-icon'>\n          {loading ? <Spin tip='上传中...' /> : <InboxOutlined />}\n        </p>\n        <p className='ant-upload-text'>点击选择或者拖动文件来上传</p>\n      </Dragger>\n      <Alert\n        css={css`\n          margin: 20px 0;\n          width: 600px;\n        `}\n        message={\n          <div>\n            此网站是静态网站，你的文件不会被上传到网站后台，具体代码请查看\n            <Button\n              type='link'\n              href='https://github.com/voderl/genshin-gacha-analyzer'\n              target='_blank'\n            >\n              github链接\n            </Button>\n          </div>\n        }\n        type='warning'\n        showIcon\n      />\n    </div>\n  );\n};\n","export const SHOW_DATA_ALL_KEY = '总览';\n\nexport const SCHEMA = [\n  { name: '时间', type: 'string', width: 180 },\n  { name: '编号', type: 'number', hidden: true, width: 120 },\n  { name: '名称', type: 'string', width: 130 },\n  { name: '类别', type: 'string', width: 50 },\n  { name: '星级', type: 'number', width: 50 },\n  { name: '总次数', type: 'number', hidden: true, width: 100 },\n  { name: '保底内', type: 'number', width: 80 },\n];\nexport const SCHEMA_ALL = (SCHEMA as any).concat({\n  name: 'pool',\n  title: '池子名称',\n  type: 'string',\n  width: 120,\n});\n","/** @jsxImportSource @emotion/react */\nimport React, { FC, useEffect, useRef } from 'react';\n// @ts-ignore\nimport canvasDataGrid from 'canvas-datagrid';\n\ntype CanvasDataGridProps = {\n  onCreate?: (grid: any) => void; // 获取最初的参数\n  attributes?: {\n    [key: string]: any;\n  };\n  data: Array<any> | undefined;\n  schema?: Array<any>;\n};\nexport const CanvasDataGrid: FC<\n  CanvasDataGridProps & React.HTMLAttributes<HTMLDivElement>\n> = function ({ data, schema, attributes, onCreate, ...props }) {\n  const divEl = useRef(null);\n  const gridRef = useRef(null);\n  // TODO: ADD go_to_top_button and bottom button\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).schema = schema;\n    }\n  }, [schema]);\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).data = data;\n    }\n  }, [data]);\n  useEffect(() => {\n    const grid = canvasDataGrid({\n      parentNode: divEl.current,\n      schema: schema,\n      data: data,\n      ...attributes,\n    });\n    grid.style.scrollBarBoxWidth = 10;\n    grid.style.scrollBarWidth = 13;\n    onCreate && onCreate(grid);\n    gridRef.current = grid;\n    return () => {\n      grid.dispose();\n    };\n  }, []);\n  return <div ref={divEl} {...props} />;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { CanvasDataGrid } from './CanvasDataGrid';\n\ntype WorkSheetProps = {\n  data: Array<any>;\n  schema: SchemaType;\n  onCreate?: (grid: any) => void;\n};\n\ntype SchemaType = Array<{\n  name?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  hidden?: boolean;\n  filter?: (e: any) => boolean;\n  formatter?: (e: any) => any;\n  defaultValue?: any;\n}>;\n\nconst attributes = {\n  editable: false,\n  allowColumnResize: false,\n  allowRowResize: false,\n  orderBy: '时间',\n};\nexport const WorkSheet: FC<WorkSheetProps> = function ({ data, schema, onCreate }) {\n  const handleCreate = useCallback((node: any) => {\n    (window as any).node = node;\n    // fix filter number:\n    node.filters.number = function (value: any, filterFor: any) {\n      if (!filterFor) {\n        return true;\n      }\n      return value == filterFor;\n    };\n    const oldStringSorter = node.sorters.string;\n    // sortBy 时间\n    node.sorters.string = function (columnName: string, direction: string) {\n      if (columnName === '时间') {\n        const sortTime = oldStringSorter(columnName, direction);\n        const sortCount = node.sorters.number('总次数', direction);\n        return (l: any, r: any) => {\n          const info = sortTime(l, r);\n          return info === 0 ? sortCount(l, r) : info;\n        };\n      } else return oldStringSorter(columnName, direction);\n    };\n    // render color:\n    node.addEventListener('rendertext', function (e: any) {\n      const star = e.row['星级'];\n      if (star === 4) {\n        e.ctx.fillStyle = '#A256E1';\n      } else if (star === 5) {\n        e.ctx.fillStyle = '#BD6932';\n      }\n    });\n    node.style.height = '100%';\n    node.style.margin = '0 auto';\n    onCreate && onCreate(node);\n  }, []);\n  return (\n    <CanvasDataGrid\n      css={css`\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow-y: hidden;\n        overflow-x: auto;\n        margin-bottom: 20px;\n        border-bottom: 2px dotted thistle;\n      `}\n      onCreate={handleCreate}\n      data={data}\n      schema={schema}\n      attributes={attributes}\n    />\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { Tabs } from 'antd';\nimport { SCHEMA, SCHEMA_ALL, SHOW_DATA_ALL_KEY } from 'const';\nimport { WorkSheet } from 'components/WorkSheet';\n\ntype ShowDataProps = {\n  onGetData: (key: string) => any;\n  tabs: Array<string>;\n};\nconst { TabPane } = Tabs;\n\nexport const ShowData: FC<ShowDataProps> = function ({ onGetData, tabs }) {\n  const [activeKey, setActiveKey] = useState(tabs[0]);\n  const handleChange = useCallback((key) => {\n    setActiveKey(key);\n  }, []);\n  return (\n    <div\n      css={css`\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n      `}\n    >\n      <Tabs\n        activeKey={activeKey}\n        onChange={handleChange}\n        size='large'\n        centered\n        css={css`\n          .ant-tabs-nav {\n            background: #fff;\n            height: 64px;\n          }\n        `}\n      >\n        {tabs.map((name: string) => (\n          <TabPane tab={name} key={name} />\n        ))}\n        <TabPane tab={SHOW_DATA_ALL_KEY} key={SHOW_DATA_ALL_KEY} />\n      </Tabs>\n      <WorkSheet\n        data={onGetData(activeKey)}\n        schema={activeKey === SHOW_DATA_ALL_KEY ? SCHEMA_ALL : SCHEMA}\n      />\n    </div>\n  );\n};\n","function format(date: Date) {\n  var mouth = date.getMonth() + 1 >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1);\n  var day = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate();\n  return date.getFullYear() + '-' + mouth + '-' + day; // 返回 “年-月-日”格式\n}\n\nexport function getDateInfo(begin: string, end: string) {\n  var arr = [];\n  var str_b = begin.split('-');\n  var str_e = end.split('-');\n  var date_b = new Date();\n  // @ts-ignore\n  date_b.setUTCFullYear(str_b[0], str_b[1] - 1, str_b[2]);\n  var date_e = new Date();\n  // @ts-ignore\n  date_e.setUTCFullYear(str_e[0], str_e[1] - 1, str_e[2]);\n  var unixDb = date_b.getTime();\n  var unixDe = date_e.getTime();\n  for (var j = unixDb; j <= unixDe; ) {\n    arr.push(format(new Date(parseInt(j as any))));\n    j = j + 24 * 60 * 60 * 1000;\n  }\n  return arr;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n// @ts-ignore\nimport { Collapse } from 'antd';\nimport { WorkSheet } from 'components/WorkSheet';\nimport { SCHEMA_ALL, SHOW_DATA_ALL_KEY } from 'const';\nimport { Data } from 'types';\n\nconst { Panel } = Collapse;\n\ntype CollapseWorkSheetProps = {\n  day: string;\n  onGetData: (key: string) => any;\n};\nexport const CollapseWorkSheet: FC<CollapseWorkSheetProps> = function ({ day, onGetData }) {\n  const [isCollapsed, setCollapsed] = useState(true);\n  const handleCreateGrid = useCallback((grid) => {\n    grid.orderBy = '星级';\n    grid.orderDirection = 'desc'; /// descending order;\n  }, []);\n  const getData = useCallback((day) => {\n    const allData: Data = onGetData(SHOW_DATA_ALL_KEY);\n    const dayStart = +new Date(`${day} 00:00:00`);\n    const dayEnd = dayStart + 3600 * 24 * 1000;\n    const startIndex = allData.findIndex((data) => data.date >= dayStart);\n    let endIndex;\n    for (let i = startIndex; i < allData.length; i++) {\n      if (allData[i].date >= dayEnd) {\n        endIndex = i;\n        break;\n      }\n    }\n    return allData.slice(startIndex, endIndex);\n  }, []);\n  const handleChange = useCallback((key: any) => {\n    if (key.length === 1) setCollapsed(false);\n    else setCollapsed(true);\n  }, []);\n  return (\n    <Collapse\n      activeKey={isCollapsed ? '' : '1'}\n      onChange={handleChange}\n      css={css`\n        margin-top: 12px;\n        .ant-collapse-content-box {\n          background: #f0f2f5;\n        }\n      `}\n    >\n      <Panel header={'点击展开 ' + day + ' 数据'} key='1'>\n        <div\n          css={css`\n            width: 100%;\n            height: 500px;\n          `}\n        >\n          {!isCollapsed && (\n            <WorkSheet data={getData(day)} schema={SCHEMA_ALL} onCreate={handleCreateGrid} />\n          )}\n        </div>\n      </Panel>\n    </Collapse>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n} from 'echarts/components';\nimport { BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ECharts } from 'echarts/core';\nimport { Data } from 'types';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { Alert, Switch } from 'antd';\nimport memoize from 'lodash/memoize';\nimport { getDateInfo } from './getDateInfo';\nimport { CollapseWorkSheet } from './CollapseWorkSheet';\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n  CanvasRenderer,\n  BarChart,\n]);\ntype TimelineProps = {\n  onGetData: (key: string) => Data;\n};\nfunction calculateData(data: Data) {\n  const countByDay: Array<any> = [];\n  function addToList(current: { count: number; day: string; existFiveStar: boolean }) {\n    if (current.existFiveStar) {\n      countByDay.push({\n        value: [current.day, current.count],\n        itemStyle: {\n          color: '#BD6932',\n        },\n      });\n    } else countByDay.push([current.day, current.count]);\n  }\n  const format = (index: number) => data[index].时间.slice(0, 10);\n  const initCurrent = () => ({\n    count: 0,\n    day: '',\n    existFiveStar: false,\n  });\n  let current = initCurrent();\n  for (let i = 0, len = data.length; i < len; i++) {\n    const day = format(i);\n    if (current.day === day) {\n      current.count += 1;\n    } else {\n      current.count && addToList(current);\n      current = initCurrent();\n      current.count += 1;\n      current.day = day;\n    }\n    if (!current.existFiveStar && data[i].星级 === 5) current.existFiveStar = true;\n  }\n  current.count && addToList(current);\n  return countByDay;\n}\nexport const Timeline: FC<TimelineProps> = function ({ onGetData }) {\n  const echartsWrapper = useRef<HTMLDivElement>(null);\n  const myChartRef = useRef<ECharts>();\n  const [hideZeroDay, setHideZeroDay] = useState(true);\n  const [currentday, setCurrentDay] = useState<string>();\n\n  // 获取数据，并写入缓存。\n  const getData = useMemo(() => {\n    let getData: any;\n    getData = memoize((isHideZeroDay: boolean) => {\n      if (!isHideZeroDay) {\n        const countByDay = getData(true);\n        // 如果中间日期需要显示\n        const getDay = (data: any) => (Array.isArray(data) ? data[0] : data.value[0]);\n        // 获取最开始一天和最后一天中间的日期\n        const dateList = getDateInfo(\n          getDay(countByDay[0]),\n          getDay(countByDay[countByDay.length - 1]),\n        ).map((day: string) => [day, 0]);\n        let j = 0;\n        for (let i = 0; i < countByDay.length; i++) {\n          const day = getDay(countByDay[i]);\n          while (day !== dateList[j][0]) {\n            j++;\n            if (j >= dateList.length) break;\n          }\n          dateList[j] = countByDay[i];\n        }\n        return dateList;\n      }\n      return calculateData(onGetData(SHOW_DATA_ALL_KEY));\n    });\n    return getData;\n  }, []);\n  useEffect(() => {\n    let myChart: ECharts;\n    if (echartsWrapper.current) {\n      myChart = echarts.init(echartsWrapper.current);\n      const options = {\n        tooltip: {\n          trigger: 'axis',\n          position: function (pt: any) {\n            return [pt[0], '10%'];\n          },\n        },\n        title: {\n          left: 'center',\n          text: '抽卡数据总览',\n        },\n        toolbox: {\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: false,\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 100,\n          },\n          {\n            start: 0,\n            end: 100,\n          },\n        ],\n        series: [\n          {\n            name: '当日抽卡次数',\n            type: 'bar',\n            data: getData(true),\n          },\n        ],\n      };\n      options && myChart.setOption(options);\n      myChart.on('click', function (params: any) {\n        setCurrentDay(params.name);\n      });\n      myChartRef.current = myChart;\n    }\n\n    return () => {\n      myChart && myChart.dispose();\n    };\n  }, []);\n  useEffect(() => {\n    if (myChartRef.current) {\n      myChartRef.current.setOption({\n        title: {\n          text: `抽卡数据总览(共${onGetData(SHOW_DATA_ALL_KEY).length}抽)`,\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n        },\n        series: [\n          {\n            name: '当日抽卡次数',\n            type: 'bar',\n            data: getData(hideZeroDay),\n          },\n        ],\n      });\n    }\n  }, [hideZeroDay]);\n  const handleChangeSwitch = useCallback((checked: boolean) => {\n    setHideZeroDay(!checked);\n  }, []);\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        position: absolute;\n      `}\n    >\n      <div\n        css={css`\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          background: #e6f7ff;\n          margin: 0 0 20px;\n          .ant-alert {\n            background: #e6f7ff;\n          }\n        `}\n      >\n        <Alert\n          message={<div>点击图中数据可以查看当天的抽卡记录</div>}\n          type='info'\n          banner\n          showIcon\n        />\n      </div>\n      <div>\n        显示没有抽卡的日期: <Switch checked={!hideZeroDay} onChange={handleChangeSwitch} />\n      </div>\n      <div\n        ref={echartsWrapper}\n        css={css`\n          width: 100%;\n          height: 500px;\n        `}\n      ></div>\n      {currentday && <CollapseWorkSheet onGetData={onGetData} day={currentday} />}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/achievement_achieved.49d0cc2e.png\";","export default __webpack_public_path__ + \"static/media/achievement_show.b270d366.png\";","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport UnAchievedPng from 'resource/achievement_unachieve.png';\nimport AchievedPng from 'resource/achievement_achieved.png';\nimport ShowPng from 'resource/achievement_show.png';\n\nexport type AchievementCardProps = {\n  title: string;\n  info: string;\n  value?: string | number;\n  achievedTime?: string;\n};\n\nexport const AchievementCard: FC<AchievementCardProps> = function ({\n  title,\n  info,\n  value,\n  achievedTime,\n}) {\n  const isAchieved = !!achievedTime;\n  return (\n    <div\n      style={{\n        // backgroundColor: isAchieved ? '#ebe2d8' : '#f5f1eb',\n        backgroundColor: '#ebe2d8',\n      }}\n      css={css`\n        width: 100%;\n        max-width: 800px;\n        min-height: 119px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border: 2px solid #e0d6cb;\n        color: #bca895;\n        color: #a0907c;\n        font-size: 16px;\n        font-weight: 600;\n        margin: 4px auto;\n      `}\n    >\n      <img\n        src={/* isAchieved ? AchievedPng : UnAchievedPng */ AchievedPng}\n        css={css`\n          margin: 0 16px;\n          flex: 0 1;\n        `}\n      />\n      <div\n        css={css`\n          flex: 1 1;\n          padding: 12px 0;\n          p {\n            margin-bottom: 4px;\n          }\n        `}\n      >\n        <p\n          css={css`\n            color: #585757;\n            font-weight: bold;\n            font-size: 20px;\n          `}\n        >\n          {title}\n        </p>\n        <p>{info}</p>\n      </div>\n      {isAchieved ? (\n        <div\n          css={css`\n            width: 147px;\n            margin-left: 13px;\n            height: 119px;\n            flex: none;\n            background-image: url(${ShowPng});\n            display: flex;\n            flex-direction: column;\n            justify-content: flex-end;\n            align-items: center;\n          `}\n        >\n          <span\n            css={css`\n              font-size: 18px;\n            `}\n          >\n            {value === undefined ? '达成' : value}\n          </span>\n          <span\n            css={css`\n              padding: 12px 0 6px;\n              font-size: 18px;\n            `}\n          >\n            {(achievedTime as string).slice(0, 10).replaceAll('-', '/')}\n          </span>\n        </div>\n      ) : (\n        <div\n          css={css`\n            width: 160px;\n            height: 120px;\n            background-color: #ebe2d8;\n            text-align: center;\n          `}\n        >\n          <span\n            css={css`\n              line-height: 120px;\n              height: 120px;\n              font-size: 18px;\n            `}\n          >\n            {value}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Data, DataItem, Source } from 'types';\nimport maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport max from 'lodash/max';\nimport { AchievementCardProps } from 'components/AchievementCard';\n\n/*\n\nTODO: 是否是歪了up池，各个up池的持续时间 \n\n*/\nfunction toPercent(point: number) {\n  return Number(point * 100).toFixed(2) + '%';\n}\nconst defaultFormatter = (name: string, count: number) =>\n  `「${name}」` + (count === 1 ? '' : `×${count}`);\nfunction formatByName(data: Data, format = defaultFormatter) {\n  const cache: any = {};\n  data.forEach((item) => {\n    if (item.名称 in cache) cache[item.名称] += 1;\n    else cache[item.名称] = 1;\n  });\n  return Object.keys(cache).map((key) => format(key, cache[key]));\n}\nconst formatTime = (str: string) => str.slice(0, 10).replaceAll('-', '/');\nconst calculateTime = (t: number) => {\n  var d = Math.floor(t / 1000 / 60 / 60 / 24);\n  var h = Math.floor((t / 1000 / 60 / 60) % 24);\n  return d + ' 天' + h + ' 时';\n};\nexport const achievements: Array<(data: Source) => AchievementCardProps | false | void> = [\n  function maxGacha({ all }: Source) {\n    const name = maxBy(Object.keys(all[5]), (cur) => {\n      const items = all[5][cur].data;\n      return (maxBy(items, (item) => item.保底内) as DataItem).保底内;\n    });\n    if (!name) return false;\n    const item = maxBy(all[5][name].data, (item) => item.保底内);\n    if (!item) return false;\n    return {\n      title: '「原来非酋竟是我自己」',\n      info: `抽了 ${item.保底内} 次才最终抽到了「${item.名称}」`,\n      achievedTime: item.时间,\n      value: item.保底内,\n    };\n  },\n  function minGacha({ all }: Source) {\n    const name = minBy(Object.keys(all[5]), (cur) => {\n      const items = all[5][cur].data;\n      return (minBy(items, (item) => item.保底内) as DataItem).保底内;\n    });\n    if (!name) return false;\n    const item = minBy(all[5][name].data, (item) => item.保底内);\n    if (!item) return false;\n    return {\n      title: '「欧皇在世」',\n      info: `只抽了 ${item.保底内} 次就抽到了「${item.名称}」`,\n      achievedTime: item.时间,\n      value: item.保底内,\n    };\n  },\n  function maxGachaDay({ day, data }) {\n    const _day = maxBy(Object.values(day), (today) => today.data.length);\n    if (!_day) return false;\n    const percent = _day.data.length / data.length;\n    const result = _day.data.filter((item) => item.星级 === 5);\n    const resultStr =\n      result.length === 0 ? '' : `在抽到${formatByName(result).join('、')}时，你有没有很开心呢？`;\n    return {\n      title: '「豪掷千金」',\n      info: `在${formatTime(_day.data[0].时间)}这一天，你共抽取了 ${\n        _day.data.length\n      } 次，占总抽取次数的${toPercent(percent)}。${resultStr}`,\n      achievedTime: _day.data[0].时间,\n      value: _day.data.length,\n    };\n  },\n  function CangshuExpert({ data }) {\n    const waitTime = data.slice(1).map((v, index) => v.date - data[index].date);\n    if (waitTime.length === 0) return;\n    const maxWaitTime = max(waitTime as Array<number>);\n    if (!maxWaitTime) return;\n    const index = waitTime.indexOf(maxWaitTime);\n    const fromTime = data[index].时间,\n      endTime = data[index + 1].时间;\n    return {\n      title: '「仓鼠专家」',\n      info: `从${formatTime(fromTime)}到${formatTime(endTime)}, 你没有进行抽卡。`,\n      value: calculateTime(maxWaitTime),\n      achievedTime: endTime,\n    };\n  },\n  function oneGachaGetFiveStar({ gacha }) {\n    const gacha10Count = Object.values(gacha[10]).reduce((acc, cur) => {\n      return acc + cur.data.filter((v) => v.星级 === 5).length;\n    }, 0);\n    const gacha1Count = gacha[1].filter((v) => v.星级 === 5).length;\n    return {\n      title: '「单抽出奇迹？」',\n      info: `通过单抽获取的五星数目为${gacha1Count}, 通过十连获取的五星数目为${gacha10Count}。`,\n      value: `${gacha1Count}/${gacha1Count + gacha10Count}`,\n    };\n  },\n  function gacha10Data({ gacha }) {\n    const maxGacha = maxBy(gacha[10], (item) => {\n      return item.data.filter((v) => v.星级 === 5).length;\n    });\n    if (!maxGacha) return;\n    const count = maxGacha.data.filter((v) => v.星级 === 5).length;\n    return {\n      title: '「双黄蛋？」',\n      info: `一次十连中，你最多抽取到的五星数量为 ${count} 只`,\n      value: count,\n      achievedTime: maxGacha.data[0].时间,\n    };\n  },\n  function maxFiveStarCharacter({ character }) {\n    const sortedData = Object.values(character[5]).sort((b, a) => a.data.length - b.data.length);\n    const maxNum = sortedData[0].data.length;\n    const endIndex = sortedData.findIndex((v) => v.data.length !== maxNum);\n    const names = sortedData\n      .slice(0, endIndex)\n      .map((item) => defaultFormatter(item.data[0].名称, item.data.length));\n    return {\n      title: '「情有独钟(五星角色)」',\n      info: `你共抽取了 ${names.join('、')}，这是上天对你的眷顾还是你对${\n        names.length === 1 ? 'ta' : 'ta们'\n      }的情有独钟呢？`,\n    };\n  },\n  function maxFourStarCharacter({ character }) {\n    const sortedData = Object.values(character[4]).sort((b, a) => a.data.length - b.data.length);\n    const maxNum = sortedData[0].data.length;\n    const endIndex = sortedData.findIndex((v) => v.data.length !== maxNum);\n    const names = sortedData\n      .slice(0, endIndex)\n      .map((item) => defaultFormatter(item.data[0].名称, item.data.length));\n    return {\n      title: '「情有独钟(四星角色)」',\n      info: `你共抽取了 ${names.join('、')}，这是上天对你的眷顾还是你对${\n        names.length === 1 ? 'ta' : 'ta们'\n      }的情有独钟呢？`,\n    };\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { AchievementCard, AchievementCardProps } from 'components/AchievementCard';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport React, { FC, useMemo } from 'react';\nimport { Data, DataItem, StarCacheType, GachaCacheType, DayCacheType } from 'types';\nimport { achievements } from './achievements';\n\ntype AchievementsProps = {\n  onGetData: (key: string) => Data;\n};\n\nexport const Achievements: FC<AchievementsProps> = function ({ onGetData }) {\n  const allData = onGetData(SHOW_DATA_ALL_KEY);\n  const allAchievements = useMemo(() => {\n    const character: StarCacheType = {\n      '5': {},\n      '4': {},\n    };\n    const all: StarCacheType = {\n      '5': {},\n      '4': {},\n      '3': {},\n    };\n    const weapon: StarCacheType = {\n      '5': {},\n      '4': {},\n      '3': {},\n    };\n    const day: DayCacheType = {};\n    const gacha: GachaCacheType = {\n      10: [],\n      1: [],\n    };\n    const walk = (item: DataItem) => {\n      let cache = item.类别 === '角色' ? character : weapon;\n      all[item.星级][item.名称] = {\n        data: [item],\n      };\n      const currentDay = item.时间.slice(0, 10);\n      if (currentDay in day) {\n        day[currentDay].data.push(item);\n      } else {\n        day[currentDay] = { data: [item] };\n      }\n      if (!(item.名称 in cache[item.星级])) {\n        cache[item.星级][item.名称] = {\n          data: [item],\n        };\n      } else cache[item.星级][item.名称].data.push(item);\n    };\n    for (let i = 0, len = allData.length; i < len; ) {\n      const current = allData[i];\n      if (i < len - 1 && allData[i + 1].date === current.date) {\n        const temp = allData.slice(i, i + 10);\n        temp.forEach(walk);\n        gacha[10].push({\n          data: temp,\n        });\n        i = i + 10;\n      } else {\n        walk(current);\n        gacha[1].push(current);\n        i++;\n      }\n    }\n    return achievements\n      .map((func) =>\n        func({\n          all,\n          character,\n          weapon,\n          data: allData,\n          gacha,\n          day,\n        }),\n      )\n      .filter((v) => typeof v === 'object') as Array<AchievementCardProps>;\n  }, []);\n  return (\n    <div\n      css={css`\n        background: #f0eae2;\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        position: absolute;\n      `}\n    >\n      {allAchievements.map((props) => (\n        <AchievementCard {...props} />\n      ))}\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Menu, Layout } from 'antd';\nimport XLSX, { WorkSheet as WorkSheetType } from 'xlsx';\nimport GlobalContext from 'context/GlobalContext';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { ShowData } from './ShowData';\nimport { Timeline } from './Timeline';\nimport { Data, DataItem } from 'types';\nimport { Achievements } from './Achievements';\n\ntype ShowPageProps = {};\nconst { Content, Sider } = Layout;\n\nexport const ShowPage: FC<ShowPageProps> = function () {\n  const { workbook } = useContext(GlobalContext);\n  const sheetNames = (workbook as any).SheetNames;\n  const getJson = useMemo(() => {\n    const cache = Object.create(null);\n    function getJson(key: string) {\n      if (key in cache) return cache[key];\n      let data: Data;\n      if (key === SHOW_DATA_ALL_KEY) {\n        data = sheetNames.reduce((acc: Array<any>, cur: string) => acc.concat(getJson(cur)), []);\n        data.sort((a, b) => (a.date === b.date ? a.总次数 - b.总次数 : a.date - b.date));\n      } else {\n        const sheet = (workbook as any).Sheets[key] as WorkSheetType;\n        data = XLSX.utils.sheet_to_json(sheet);\n        data.forEach((info: DataItem) => {\n          info.pool = key;\n          info.date = +new Date(info.时间);\n        });\n      }\n      return (cache.key = data);\n    }\n    return getJson;\n  }, [workbook]);\n  const [activeMenu, setActiveMenu] = useState('rawData');\n  const handleMenuChange = useCallback(({ key }: any) => {\n    setActiveMenu(key);\n  }, []);\n  const renderContent = useCallback((key) => {\n    if (key === 'rawData') return <ShowData onGetData={getJson} tabs={sheetNames} />;\n    else if (key === 'timeline') return <Timeline onGetData={getJson} />;\n    else if (key === 'achievements') return <Achievements onGetData={getJson} />;\n    else return <div>暂无</div>;\n  }, []);\n  return (\n    <Layout\n      css={css`\n        overflow: hidden;\n      `}\n    >\n      <Sider\n        theme='light'\n        width='20%'\n        style={{\n          height: '100vh',\n        }}\n      >\n        <div className='logo' />\n        <Menu\n          mode='inline'\n          defaultSelectedKeys={['rawData']}\n          onSelect={handleMenuChange}\n          css={css`\n            margin-top: 60px;\n            .ant-menu-item {\n              height: 60px;\n              line-height: 60px;\n            }\n          `}\n        >\n          <Menu.Item key='timeline'>时间轴</Menu.Item>\n          <Menu.Item key='rawData'>原数据</Menu.Item>\n          <Menu.Item key='achievements'>成就表</Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Content\n          css={css`\n            margin: 0;\n            position: relative;\n          `}\n        >\n          {renderContent(activeMenu)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { useContext, useState } from 'react';\nimport GlobalContext from './context/GlobalContext';\nimport { LoadPage } from './pages/LoadPage';\nimport { ShowPage } from './pages/ShowPage';\n\nimport './App.css';\nimport { WorkBook } from 'xlsx/types';\n\nfunction App() {\n  const { workbook } = useContext(GlobalContext);\n  return workbook === null ? <LoadPage /> : <ShowPage />;\n}\nfunction WrappedApp() {\n  const [workbook, setWorkbook] = useState<WorkBook | null>(null);\n  return (\n    <GlobalContext.Provider\n      value={{\n        workbook: workbook,\n        updateWorkbook: setWorkbook,\n      }}\n    >\n      <App />\n    </GlobalContext.Provider>\n  );\n}\nexport default WrappedApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'canvas-datagrid';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}