{"version":3,"sources":["context/GlobalContext.ts","pages/LoadPage.tsx","const.ts","components/CanvasDataGrid.tsx","components/WorkSheet.tsx","pages/ShowPage/ShowData/index.tsx","pages/ShowPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalContext","React","createContext","workbook","updateWorkbook","Dragger","Upload","LoadPage","onLoad","useState","loading","setLoading","errorMessage","setErrorMessage","useContext","handleUpload","useCallback","file","name","endsWith","reader","FileReader","onload","e","data","Uint8Array","target","result","XLSX","read","type","onerror","readAsArrayBuffer","css","className","href","message","showIcon","banner","accept","multiple","beforeUpload","showUploadList","tip","InboxOutlined","SHOW_DATA_ALL_KEY","CanvasDataGrid","schema","attributes","onCreate","props","divEl","useRef","gridRef","useEffect","current","grid","canvasDataGrid","parentNode","style","scrollBarBoxWidth","scrollBarWidth","remove","window","removeEventListener","resize","ref","WorkSheet","useMemo","editable","allowColumnResize","allowRowResize","orderBy","handleCreate","node","filters","number","value","filterFor","oldStringSorter","sorters","string","columnName","direction","sortTime","sortCount","l","r","info","addEventListener","star","row","ctx","fillStyle","height","margin","TabPane","Tabs","width","hidden","schemaAll","concat","title","ShowData","onGetData","tabs","activeKey","setActiveKey","handleChange","key","onChange","size","centered","map","tab","Content","Layout","Sider","ShowPage","sheetNames","SheetNames","getJson","cache","Object","create","reduce","acc","cur","sheet","Sheets","utils","sheet_to_json","forEach","pool","activeMenu","setActiveMenu","handleMenuChange","renderContent","theme","mode","defaultSelectedKeys","onSelect","Item","App","WrappedApp","setWorkbook","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.229572c9.chunk.js","sourcesContent":["import React from 'react';\nimport { WorkBook } from 'xlsx/types';\n\ntype GlobalContextType = {\n  workbook: WorkBook | null;\n  updateWorkbook: (workbook: WorkBook) => void;\n};\n\nconst GlobalContext = React.createContext<GlobalContextType>({\n  workbook: null,\n  updateWorkbook: (() => {}) as any,\n});\n\nexport default GlobalContext;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, useCallback, useContext, useState } from 'react';\nimport { Button, Upload, Alert, Spin } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { RcFile } from 'antd/lib/upload';\nimport XLSX from 'xlsx';\nimport GlobalContext from 'context/GlobalContext';\n\nconst { Dragger } = Upload;\ntype LoadPageProps = {\n  onLoad?: () => void;\n};\n\nexport const LoadPage: FC<LoadPageProps> = function ({ onLoad }) {\n  const [loading, setLoading] = useState<Boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<String | null>(null);\n  const { updateWorkbook } = useContext(GlobalContext);\n  const handleUpload = useCallback((file: RcFile) => {\n    if (!file.name.endsWith('.xlsx')) {\n      setErrorMessage('文件类型错误，请重新上传');\n      return false;\n    }\n    setLoading(true);\n    const reader = new FileReader();\n    reader.onload = function (e: ProgressEvent<FileReader>) {\n      const data = new Uint8Array((e.target as FileReader).result as any);\n      const workbook = XLSX.read(data, { type: 'array' });\n      updateWorkbook(workbook);\n    };\n    reader.onerror = function (e: ProgressEvent<FileReader>) {\n      setErrorMessage('解析文件失败');\n      setLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n    return false;\n  }, []);\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <div\n        className='ant-alert-info'\n        css={css`\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          border: none;\n          margin: 20px 0;\n        `}\n      >\n        <a href='https://ngabbs.com/read.php?tid=25004616' target='_blank'>\n          <Alert\n            message={\n              <div>\n                不知道如何获取文件？\n                <Button type='link'>请点击这里</Button>\n              </div>\n            }\n            type='info'\n            showIcon\n            banner\n          />\n        </a>\n      </div>\n      <Dragger\n        name='file'\n        accept='.xlsx'\n        multiple={false}\n        beforeUpload={handleUpload}\n        showUploadList={false}\n        css={css`\n          min-width: 600px;\n          padding: 40px;\n        `}\n      >\n        {errorMessage && <Alert message={errorMessage} type='error' />}\n        <p className='ant-upload-drag-icon'>\n          {loading ? <Spin tip='上传中...' /> : <InboxOutlined />}\n        </p>\n        <p className='ant-upload-text'>点击选择或者拖动文件来上传</p>\n      </Dragger>\n      <Alert\n        css={css`\n          margin: 20px 0;\n          width: 600px;\n        `}\n        message={\n          <div>\n            此网站是静态网站，你的文件不会被上传到网站后台，具体代码请查看\n            <Button\n              type='link'\n              href='https://github.com/voderl/genshin-gacha-analyzer'\n              target='_blank'\n            >\n              github链接\n            </Button>\n          </div>\n        }\n        type='warning'\n        showIcon\n      />\n    </div>\n  );\n};\n","export const SHOW_DATA_ALL_KEY = '总览';\n","/** @jsxImportSource @emotion/react */\nimport React, { FC, useEffect, useRef } from 'react';\n// @ts-ignore\nimport canvasDataGrid from 'canvas-datagrid';\n\ntype CanvasDataGridProps = {\n  onCreate?: (grid: any) => void; // 获取最初的参数\n  attributes?: {\n    [key: string]: any;\n  };\n  data: Array<any> | undefined;\n  schema?: Array<any>;\n};\nexport const CanvasDataGrid: FC<\n  CanvasDataGridProps & React.HTMLAttributes<HTMLDivElement>\n> = function ({ data, schema, attributes, onCreate, ...props }) {\n  const divEl = useRef(null);\n  const gridRef = useRef(null);\n  // TODO: ADD go_to_top_button and bottom button\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).schema = schema;\n    }\n  }, [schema]);\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).data = data;\n    }\n  }, [data]);\n  useEffect(() => {\n    const grid = canvasDataGrid({\n      parentNode: divEl.current,\n      schema: schema,\n      data: data,\n      ...attributes,\n    });\n    grid.style.scrollBarBoxWidth = 10;\n    grid.style.scrollBarWidth = 13;\n    onCreate && onCreate(grid);\n    gridRef.current = grid;\n    return () => {\n      grid.remove();\n      window.removeEventListener('resize', grid.resize);\n    };\n  }, []);\n  return <div ref={divEl} {...props} />;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { CanvasDataGrid } from './CanvasDataGrid';\n\ntype WorkSheetProps = {\n  data: Array<any>;\n  schema: SchemaType;\n};\n\ntype SchemaType = Array<{\n  name?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  hidden?: boolean;\n  filter?: (e: any) => boolean;\n  formatter?: (e: any) => any;\n  defaultValue?: any;\n}>;\n\nexport const WorkSheet: FC<WorkSheetProps> = function ({ data, schema }) {\n  const attributes = useMemo(() => {\n    return {\n      editable: false,\n      allowColumnResize: false,\n      allowRowResize: false,\n      orderBy: '时间',\n    };\n  }, []);\n  const handleCreate = useCallback((node: any) => {\n    (window as any).node = node;\n    // fix filter number:\n    node.filters.number = function (value: any, filterFor: any) {\n      if (!filterFor) {\n        return true;\n      }\n      return value == filterFor;\n    };\n    const oldStringSorter = node.sorters.string;\n    // sortBy 时间\n    node.sorters.string = function (columnName: string, direction: string) {\n      if (columnName === '时间') {\n        const sortTime = oldStringSorter(columnName, direction);\n        const sortCount = node.sorters.number('总次数', direction);\n        return (l: any, r: any) => {\n          const info = sortTime(l, r);\n          return info === 0 ? sortCount(l, r) : info;\n        };\n      } else return oldStringSorter(columnName, direction);\n    };\n    // render color:\n    node.addEventListener('rendertext', function (e: any) {\n      const star = e.row['星级'];\n      if (star === 4) {\n        e.ctx.fillStyle = '#A256E1';\n      } else if (star === 5) {\n        e.ctx.fillStyle = '#BD6932';\n      }\n    });\n    node.style.height = '100%';\n    node.style.margin = '0 auto';\n  }, []);\n  return (\n    <CanvasDataGrid\n      css={css`\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow-y: hidden;\n        overflow-x: auto;\n        margin-bottom: 20px;\n        border-bottom: 2px dotted thistle;\n      `}\n      onCreate={handleCreate}\n      data={data}\n      schema={schema}\n      attributes={attributes}\n    />\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { Tabs } from 'antd';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { WorkSheet } from 'components/WorkSheet';\n\ntype ShowDataProps = {\n  onGetData: (key: string) => any;\n  tabs: Array<string>;\n};\nconst { TabPane } = Tabs;\n\nconst schema = [\n  { name: '时间', type: 'string', width: 180 },\n  { name: '编号', type: 'number', hidden: true, width: 120 },\n  { name: '名称', type: 'string', width: 130 },\n  { name: '类别', type: 'string', width: 50 },\n  { name: '星级', type: 'number', width: 50 },\n  { name: '总次数', type: 'number', hidden: true, width: 100 },\n  { name: '保底内', type: 'number', width: 80 },\n];\nconst schemaAll = (schema as any).concat({\n  name: 'pool',\n  title: '池子名称',\n  type: 'string',\n  width: 120,\n});\nexport const ShowData: FC<ShowDataProps> = function ({ onGetData, tabs }) {\n  const [activeKey, setActiveKey] = useState(tabs[0]);\n  const handleChange = useCallback((key) => {\n    setActiveKey(key);\n  }, []);\n  return (\n    <div\n      css={css`\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n      `}\n    >\n      <Tabs\n        activeKey={activeKey}\n        onChange={handleChange}\n        size='large'\n        centered\n        css={css`\n          .ant-tabs-nav {\n            background: #fff;\n            height: 64px;\n          }\n        `}\n      >\n        {tabs.map((name: string) => (\n          <TabPane tab={name} key={name} />\n        ))}\n        <TabPane tab={SHOW_DATA_ALL_KEY} key={SHOW_DATA_ALL_KEY} />\n      </Tabs>\n      <WorkSheet\n        data={onGetData(activeKey)}\n        schema={activeKey === SHOW_DATA_ALL_KEY ? schemaAll : schema}\n      />\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Menu, Layout } from 'antd';\nimport XLSX, { WorkSheet as WorkSheetType } from 'xlsx';\nimport GlobalContext from 'context/GlobalContext';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { ShowData } from './ShowData';\n\ntype ShowPageProps = {};\nconst { Content, Sider } = Layout;\n\nexport const ShowPage: FC<ShowPageProps> = function () {\n  const { workbook } = useContext(GlobalContext);\n  const sheetNames = (workbook as any).SheetNames;\n  const getJson = useMemo(() => {\n    const cache = Object.create(null);\n    function getJson(key: string) {\n      if (key in cache) return cache[key];\n      let data;\n      if (key === SHOW_DATA_ALL_KEY) {\n        data = sheetNames.reduce((acc: Array<any>, cur: string) => acc.concat(getJson(cur)), []);\n      } else {\n        const sheet = (workbook as any).Sheets[key] as WorkSheetType;\n        data = XLSX.utils.sheet_to_json(sheet);\n        data.forEach((info: any) => {\n          info.pool = key;\n        });\n      }\n      return (cache.key = data);\n    }\n    return getJson;\n  }, [workbook]);\n  const [activeMenu, setActiveMenu] = useState('rawData');\n  const handleMenuChange = useCallback(({ key }: any) => {\n    setActiveMenu(key);\n  }, []);\n  const renderContent = useCallback((key) => {\n    if (key === 'rawData') return <ShowData onGetData={getJson} tabs={sheetNames} />;\n    else return <div>暂无</div>;\n  }, []);\n  return (\n    <Layout\n      css={css`\n        overflow: hidden;\n      `}\n    >\n      <Sider\n        theme='light'\n        width='20%'\n        style={{\n          height: '100vh',\n        }}\n      >\n        <div className='logo' />\n        <Menu\n          mode='inline'\n          defaultSelectedKeys={['rawData']}\n          onSelect={handleMenuChange}\n          css={css`\n            margin-top: 60px;\n            .ant-menu-item {\n              height: 60px;\n              line-height: 60px;\n            }\n          `}\n        >\n          <Menu.Item key='timeline'>时间轴</Menu.Item>\n          <Menu.Item key='rawData'>原数据</Menu.Item>\n          <Menu.Item key='achievements'>成就表</Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Content\n          css={css`\n            margin: 0;\n            position: relative;\n          `}\n        >\n          {renderContent(activeMenu)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { useContext, useState } from 'react';\nimport GlobalContext from './context/GlobalContext';\nimport { LoadPage } from './pages/LoadPage';\nimport { ShowPage } from './pages/ShowPage';\n\nimport './App.css';\nimport { WorkBook } from 'xlsx/types';\n\nfunction App() {\n  const { workbook } = useContext(GlobalContext);\n  return workbook === null ? <LoadPage /> : <ShowPage />;\n}\nfunction WrappedApp() {\n  const [workbook, setWorkbook] = useState<WorkBook | null>(null);\n  return (\n    <GlobalContext.Provider\n      value={{\n        workbook: workbook,\n        updateWorkbook: setWorkbook,\n      }}\n    >\n      <App />\n    </GlobalContext.Provider>\n  );\n}\nexport default WrappedApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'canvas-datagrid';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}