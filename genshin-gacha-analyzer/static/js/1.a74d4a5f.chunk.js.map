{"version":3,"sources":["../../lib/defaults.js","../../lib/component.js","../../lib/draw.js","../../node_modules/is-printable-key-event/dist/index.js","../../lib/events.js","../../lib/touch.js","../../lib/intf.js","../../lib/contextMenu.js","../../lib/dom.js","../../lib/publicMethods.js","../../lib/main.js","../node_modules/rc-util/es/hooks/useMergedState.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["self","defaults","attributes","styles","typeMap","component","prop","replace","nextLetterCap","p","Array","prototype","forEach","call","char","toUpperCase","cust","toLowerCase","supressChangeAndDrawEvents","intf","isComponent","cStyle","window","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","hyphenateProperty","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","data","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","test","string","str","getObservableAttributes","i","attrs","attr","push","disconnectedCallback","connected","connectedCallback","this","parentDOMNode","innerHTML","appendChild","observe","applyComponentStyle","adoptedCallback","attributeChangedCallback","attrName","oldVal","newVal","tfn","dataType","item","filter","addEventListener","Function","name","observer","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","parentNode","addedNodes","length","type","characterData","childList","subtree","document","querySelectorAll","el","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","Object","keys","html","draw","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","mode","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","strokeHandle","stroke","addBorderLine","c","pos","t","l","internal","isChildGrid","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","my","mx","xHover","yHover","drawCorner","en","m","d","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getColummnWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touch","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","debugPerfChartTextColor","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","indexOf","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","nodeType","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","showRowNumbers","childGrids","saveAppearance","createGrid","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","measure","splice","originText","stepLength","direction","substr","vPos","hPos","stringify","pw","idx","idx_ord","map","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","moveOffset","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","module","exports","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","hasOwnProperty","concat","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","wheeling","stopPropagation","fn","events","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","args","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","contextMenu","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","selectRow","selectionBounds","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","undefined","sb","getSelectedData","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","isPrintableKeyEvent","beginEditAt","selectNone","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","selectedData","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","isSupportedHtmlTable","htmlString","substring","match","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","originalData","affectedCells","refresh","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","event","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addHeaders","setData","htmlSafe","headers","useHtml","hVal","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","ctor","treeGridAttributes","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","orderings","add","sortFunction","col","sort","filters","currentFilter","sorters","parsers","schemaHashes","changes","componentL1Events","eventNames","expandToRow","viewDataLength","orderedIndex","boundRowIndexMap","has","visibility","localStorage","setItem","tempSchema","createColumnOrders","applyDefaultValue","defaultValue","createNewRowData","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","getHeaderByName","currentFilterFunction","cellValue","entries","sortFn","rowA","rowB","getBestGuessDataType","drawChildGrids","gridKey","setTimer","validateColumn","setDefaults","obj1","obj2","setAttributes","setStyle","findColumnMaxTextLength","dispose","removeChild","eventParent","contextmenu","disconnect","tryLoadStoredSettings","reloadStoredValues","storedSettings","_typeof","getDomRoot","shadowRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","dehyphenateProperty","getItem","message","init","initialized","publicStyleKeyIntf","initScrollBox","setDom","ie","navigator","userAgent","edge","webKit","moz","blankValues","cursorGrab","cursorGrabing","cursorGrabbing","appendTo","getVisibleCellByIndex","clearChangeLog","gotoCell","gotoRow","findColumnScrollLeft","findRowScrollTop","isCellVisible","isRowVisible","isColumnVisible","clipElement","getSchemaFromData","setFilter","expandTree","collapseTree","insertRow","deleteRow","addRow","insertColumn","deleteColumn","addColumn","getClippingRect","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","assertPxColor","clearPxColorAssertions","integerToAlpha","addStyleKeyIfNoneExists","DOMStyles","set","valueObject","filterFor","blanksText","String","trim","filterRegExp","pattern","exec","flags","flagLength","invalidFilterRegEx","RegExp","toLocaleUpperCase","innerText","textContent","blur","TypeError","currentCursor","find","eventName","RangeError","isArray","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","loc","container","createElement","upArrow","downArrow","children","selectedIndex","checkArrowVisibility","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","position","contextMenuArrowColor","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","count","blanksItem","autoCompleteItems","maxAutoCompleteItems","disposeAutocomplete","onclick","filterOptionText","contextFilterButtonHTML","cf","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","scrollingElement","borderWidth","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","aborted","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","onblur","parentIsCanvas","getContext","textBaseline","ordA","charCodeAt","len","fromCharCode","offsetX","offsetY","targetX","targetY","sbh","isColumnSelected","colIsSelected","shift","supressEvent","addCol","st","de","ri","dragObject","childGrid","trArgs","treeGridHeight","dontSetStorageData","sorter","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","webComponent","modules","dom","publicMethods","Grid","eval","attachShadow","canvasDatagrid","tKeys","customElements","argKey","tKey","sKey","HTMLElement","observedAttributes","define","require","useControlledState","defaultStateValue","_ref","onChange","postState","_React$useState","React","_React$useState2","_slicedToArray","innerValue","setInnerValue","mergedValue","firstRenderRef","current","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable"],"mappings":"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","file":"static/js/1.a74d4a5f.chunk.js","sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\nexport default function (self) {\n  self.defaults = {\n    attributes: [\n      ['allowColumnReordering', true],\n      ['allowColumnResize', true],\n      ['allowColumnResizeFromCell', false],\n      ['allowFreezingRows', false],\n      ['allowFreezingColumns', false],\n      ['allowMovingSelection', true],\n      ['allowRowHeaderResize', true],\n      ['allowRowReordering', false],\n      ['allowRowResize', true],\n      ['allowRowResizeFromCell', false],\n      ['allowSorting', true],\n      ['autoGenerateSchema', false],\n      ['autoResizeColumns', false],\n      ['autoResizeRows', false],\n      ['blanksText', '(Blanks)'],\n      ['borderDragBehavior', 'none'],\n      ['borderResizeZone', 10],\n      ['clearSettingsOptionText', 'Clear saved settings'],\n      ['columnHeaderClickBehavior', 'sort'],\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\n      ['columnSelectorText', 'Add/Remove columns'],\n      ['columnSelectorVisibleText', '\\u2713'],\n      ['contextHoverScrollAmount', 2],\n      ['contextHoverScrollRateMs', 5],\n      ['copyHeadersOnSelectAll', true],\n      ['copyText', 'Copy'],\n      ['debug', false],\n      ['editable', true],\n      ['ellipsisText', '...'],\n      ['filterOptionText', 'Filter %s'],\n      ['filterTextPrefix', '(filtered) '],\n      ['globalRowResize', false],\n      ['hideColumnText', 'Hide %s'],\n      ['maxAutoCompleteItems', 200],\n      ['multiLine', false],\n      ['name', ''],\n      ['pageUpDownOverlap', 1],\n      ['pasteText', 'Paste'],\n      ['persistantSelectionMode', false],\n      ['removeFilterOptionText', 'Remove filter on %s'],\n      ['reorderDeadZone', 3],\n      ['resizeScrollZone', 20],\n      ['rowGrabZoneSize', 5],\n      ['saveAppearance', true],\n      ['scrollAnimationPPSThreshold', 0.75],\n      ['scrollPointerLock', false],\n      ['scrollRepeatRate', 75],\n      ['selectionFollowsActiveCell', false],\n      ['selectionHandleBehavior', 'none'],\n      ['selectionMode', 'cell'],\n      ['selectionScrollIncrement', 20],\n      ['selectionScrollZone', 20],\n      ['showClearSettingsOption', true],\n      ['showColumnHeaders', true],\n      ['showColumnSelector', true],\n      ['showCopy', false],\n      ['showFilter', true],\n      ['showNewRow', false],\n      ['showOrderByOption', true],\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\n      ['showPaste', false],\n      ['showPerformance', false],\n      ['showRowHeaders', true],\n      ['showRowNumbers', true],\n      ['singleSelectionMode', false],\n      ['snapToRow', false],\n      ['touchContextMenuTimeMs', 800],\n      ['touchDeadZone', 3],\n      ['touchEasingMethod', 'easeOutQuad'],\n      ['touchReleaseAcceleration', 1000],\n      ['touchReleaseAnimationDurationMs', 2000],\n      ['touchScrollZone', 20],\n      ['touchSelectHandleZone', 20],\n      ['touchZoomSensitivity', 0.005],\n      ['touchZoomMin', 0.5],\n      ['touchZoomMax', 1.75],\n      ['maxPixelRatio', 2],\n      ['tree', false],\n      ['treeHorizontalScroll', false],\n    ],\n    styles: [\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['activeCellBorderWidth', 1],\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellFont', '16px sans-serif'],\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellHorizontalAlignment', 'left'],\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['activeCellOverlayBorderWidth', 1],\n      ['activeCellPaddingBottom', 5],\n      ['activeCellPaddingLeft', 5],\n      ['activeCellPaddingRight', 5],\n      ['activeCellPaddingTop', 5],\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellVerticalAlignment', 'center'],\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['autocompleteBottomMargin', 60],\n      ['autosizeHeaderCellPadding', 8],\n      ['autosizePadding', 5],\n      ['cellAutoResizePadding', 13],\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['cellBorderWidth', 1],\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\n      ['cellFont', '16px sans-serif'],\n      ['cellGridHeight', 250],\n      ['cellHeight', 24],\n      ['cellHeightWithChildGrid', 150],\n      ['cellHorizontalAlignment', 'left'],\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['cellPaddingBottom', 5],\n      ['cellPaddingLeft', 5],\n      ['cellPaddingRight', 5],\n      ['cellPaddingTop', 5],\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['cellVerticalAlignment', 'center'],\n      ['cellWidth', 250],\n      ['cellWidthWithChildGrid', 250],\n      ['cellWhiteSpace', 'nowrap'],\n      ['cellLineHeight', 1],\n      ['cellLineSpacing', 3],\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['childContextMenuArrowHTML', '&#x25BA;'],\n      ['childContextMenuMarginLeft', -11],\n      ['childContextMenuMarginTop', -6],\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellBorderWidth', 1],\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellCapBorderWidth', 1],\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['columnHeaderCellFont', '16px sans-serif'],\n      ['columnHeaderCellHeight', 25],\n      ['columnHeaderCellHorizontalAlignment', 'left'],\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['columnHeaderCellPaddingBottom', 5],\n      ['columnHeaderCellPaddingLeft', 5],\n      ['columnHeaderCellPaddingRight', 5],\n      ['columnHeaderCellPaddingTop', 5],\n      ['columnHeaderCellVerticalAlignment', 'center'],\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['columnHeaderOrderByArrowBorderWidth', 1],\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['columnHeaderOrderByArrowHeight', 8],\n      ['columnHeaderOrderByArrowMarginLeft', 0],\n      ['columnHeaderOrderByArrowMarginRight', 5],\n      ['columnHeaderOrderByArrowMarginTop', 6],\n      ['columnHeaderOrderByArrowWidth', 13],\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterButtonBorderRadius', '3px'],\n      ['contextFilterButtonHTML', '&#x25BC;'],\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterInputBorderRadius', '0'],\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\n      ['contextFilterInputFontFamily', 'sans-serif'],\n      ['contextFilterInputFontSize', '14px'],\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextMenuBorderRadius', '3px'],\n      ['contextMenuChildArrowFontSize', '12px'],\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuCursor', 'default'],\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\n      ['contextMenuFilterButtonFontSize', '10px'],\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\n      ['contextMenuFontFamily', 'sans-serif'],\n      ['contextMenuFontSize', '16px'],\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\n      ['contextMenuItemBorderRadius', '3px'],\n      ['contextMenuItemMargin', '2px'],\n      ['contextMenuLabelDisplay', 'inline-block'],\n      ['contextMenuLabelMargin', '0 3px 0 0'],\n      ['contextMenuLabelMaxWidth', '700px'],\n      ['contextMenuLabelMinWidth', '75px'],\n      ['contextMenuMarginLeft', 3],\n      ['contextMenuMarginTop', -3],\n      ['contextMenuOpacity', '0.98'],\n      ['contextMenuPadding', '2px'],\n      ['contextMenuWindowMargin', 30],\n      ['contextMenuZIndex', 10000],\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\n      ['debugFont', '11px sans-serif'],\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\n      ['display', 'inline-block'],\n      ['editCellBackgroundColor', 'white'],\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\n      ['editCellColor', 'black'],\n      ['editCellFontFamily', 'sans-serif'],\n      ['editCellFontSize', '16px'],\n      ['editCellPaddingLeft', 4],\n      ['editCellZIndex', 10000],\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\n      ['frozenMarkerBorderWidth', 1],\n      ['frozenMarkerWidth', 2],\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['gridBorderCollapse', 'collapse'],\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['gridBorderWidth', 1],\n      ['height', 'auto'],\n      ['maxHeight', 'inherit'],\n      ['maxWidth', 'inherit'],\n      ['minColumnWidth', 45],\n      ['minHeight', 'inherit'],\n      ['minRowHeight', 24],\n      ['minWidth', 'inherit'],\n      ['mobileContextMenuMargin', 10],\n      ['mobileEditInputHeight', 30],\n      ['mobileEditFontFamily', 'sans-serif'],\n      ['mobileEditFontSize', '16px'],\n      ['moveOverlayBorderWidth', 1],\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['moveOverlayBorderSegments', '12, 7'],\n      ['name', 'default'],\n      ['overflowY', 'auto'],\n      ['overflowX', 'auto'],\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\n      ['reorderMarkerBorderWidth', 1.25],\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['reorderMarkerIndexBorderWidth', 2.75],\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\n      ['rowHeaderCellBorderWidth', 1],\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellFont', '16px sans-serif'],\n      ['rowHeaderCellHeight', 25],\n      ['rowHeaderCellHorizontalAlignment', 'left'],\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['rowHeaderCellPaddingBottom', 5],\n      ['rowHeaderCellPaddingLeft', 5],\n      ['rowHeaderCellPaddingRight', 5],\n      ['rowHeaderCellPaddingTop', 5],\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellVerticalAlignment', 'center'],\n      ['rowHeaderCellWidth', 57],\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarBorderWidth', 0.5],\n      ['scrollBarBoxBorderRadius', 4.125],\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\n      ['scrollBarBoxMargin', 2],\n      ['scrollBarBoxMinSize', 15],\n      ['scrollBarBoxWidth', 8],\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarWidth', 11],\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\n      ['selectionHandleBorderWidth', 1.5],\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionHandleSize', 8],\n      ['selectionHandleType', 'square'],\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionOverlayBorderWidth', 1],\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['treeArrowBorderWidth', 1],\n      ['treeArrowClickRadius', 5],\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['treeArrowHeight', 8],\n      ['treeArrowMarginLeft', 0],\n      ['treeArrowMarginRight', 5],\n      ['treeArrowMarginTop', 6],\n      ['treeArrowWidth', 13],\n      ['treeGridHeight', 250],\n      ['width', 'auto'],\n    ],\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport defaults from './defaults';\n\nexport default function () {\n  var typeMap,\n    component = {};\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\n    prop = prop.replace('--cdg-', '');\n    var p = '',\n      nextLetterCap;\n    Array.prototype.forEach.call(prop, function (char) {\n      if (nextLetterCap) {\n        nextLetterCap = false;\n        p += char.toUpperCase();\n        return;\n      }\n      if (char === '-') {\n        nextLetterCap = true;\n        return;\n      }\n      p += char;\n    });\n    return p;\n  };\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\n    var p = '';\n    Array.prototype.forEach.call(prop, function (char) {\n      if (char === char.toUpperCase()) {\n        p += '-' + char.toLowerCase();\n        return;\n      }\n      p += char;\n    });\n    return (cust ? '--cdg-' : '') + p;\n  };\n  function getDefaultItem(base, item) {\n    var i = {},\n      r;\n    defaults(i);\n    r = i.defaults[base].filter(function (i) {\n      return (\n        i[0].toLowerCase() === item.toLowerCase() ||\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\n      );\n    })[0];\n    return r;\n  }\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\n    if (!intf.isComponent) {\n      return;\n    }\n    var cStyle = window.getComputedStyle(\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\n        null,\n      ),\n      defs = {};\n    intf.computedStyle = cStyle;\n    defaults(defs);\n    defs = defs.defaults.styles;\n    defs.forEach(function (def) {\n      var val;\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\n      if (val === '') {\n        val = cStyle.getPropertyValue(\n          component.hyphenateProperty(def[0], false),\n        );\n      }\n      if (val !== '' && typeof val === 'string') {\n        intf.setStyleProperty(\n          def[0],\n          typeMap[typeof def[1]](\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\n            def[1],\n          ),\n          true,\n        );\n      }\n    });\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\n      requestAnimationFrame(function () {\n        intf.resize(true);\n      });\n      intf.dispatchEvent('stylechanged', intf.style);\n    }\n  };\n  typeMap = {\n    data: function (strData) {\n      try {\n        return JSON.parse(strData);\n      } catch (e) {\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\n      }\n    },\n    schema: function (strSchema) {\n      try {\n        return JSON.parse(strSchema);\n      } catch (e) {\n        throw new Error(\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\n        );\n      }\n    },\n    number: function (strNum, def) {\n      var n = parseInt(strNum, 10);\n      return isNaN(n) ? def : n;\n    },\n    boolean: function (strBool) {\n      return /true/i.test(strBool);\n    },\n    string: function (str) {\n      return str;\n    },\n  };\n  component.getObservableAttributes = function () {\n    var i = {},\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\n    defaults(i);\n    i.defaults.attributes.forEach(function (attr) {\n      attrs.push(attr[0].toLowerCase());\n    });\n    return attrs;\n  };\n  component.disconnectedCallback = function () {\n    this.connected = false;\n  };\n  component.connectedCallback = function () {\n    var intf = this;\n    intf.parentDOMNode.innerHTML = '';\n    intf.parentDOMNode.appendChild(intf.canvas);\n    intf.connected = true;\n    component.observe(intf);\n    component.applyComponentStyle(true, intf);\n    intf.resize(true);\n  };\n  component.adoptedCallback = function () {\n    this.resize();\n  };\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\n    var tfn,\n      intf = this,\n      def;\n    if (attrName === 'style') {\n      component.applyComponentStyle(false, intf);\n      return;\n    }\n    if (attrName === 'data') {\n      if (intf.dataType === 'application/x-canvas-datagrid') {\n        intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      intf.data = newVal;\n      return;\n    }\n    if (attrName === 'schema') {\n      intf.schema = typeMap.schema(newVal);\n      return;\n    }\n    if (attrName === 'name') {\n      intf.name = newVal;\n      return;\n    }\n    if (attrName === 'class' || attrName === 'className') {\n      return;\n    }\n    def = getDefaultItem('attributes', attrName);\n    if (def) {\n      tfn = typeMap[typeof def[1]];\n      intf.attributes[def[0]] = tfn(newVal);\n      return;\n    }\n    if (/^on/.test(attrName)) {\n      intf.addEventListener('on' + attrName, Function('e', newVal));\n    }\n    return;\n  };\n  component.observe = function (intf) {\n    var observer;\n    if (!window.MutationObserver) {\n      return;\n    }\n    intf.applyComponentStyle = function () {\n      component.applyComponentStyle(false, intf);\n      intf.resize();\n    };\n    /**\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\n     * @memberof canvasDatagrid\n     * @name applyComponentStyle\n     * @method\n     */\n    observer = new window.MutationObserver(function (mutations) {\n      var checkInnerHTML, checkStyle;\n      Array.prototype.forEach.call(mutations, function (mutation) {\n        if (\n          mutation.attributeName === 'class' ||\n          mutation.attributeName === 'style'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (mutation.target.nodeName === 'STYLE') {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target.parentNode &&\n          mutation.target.parentNode.nodeName === 'STYLE'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target === intf &&\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\n        ) {\n          checkInnerHTML = true;\n        }\n      });\n      if (checkStyle) {\n        intf.applyComponentStyle(false, intf);\n      }\n      if (checkInnerHTML) {\n        if (intf.dataType === 'application/x-canvas-datagrid') {\n          intf.dataType = 'application/json+x-canvas-datagrid';\n        }\n        intf.data = intf.innerHTML;\n      }\n    });\n    observer.observe(intf, {\n      characterData: true,\n      childList: true,\n      attributes: true,\n      subtree: true,\n    });\n    Array.prototype.forEach.call(\n      document.querySelectorAll('style'),\n      function (el) {\n        observer.observe(el, {\n          characterData: true,\n          childList: true,\n          attributes: true,\n          subtree: true,\n        });\n      },\n    );\n  };\n  return component;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var measure = self.ctx.measureText(word + splitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + splitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        words.splice(x, 1, word.split('-')[0] + '-', word.split('-')[1]);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + splitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColummnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      schema,\n      rowIndex,\n      rowData,\n      aCell,\n      viewData = self.viewData || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = viewData.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (viewData.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === schema.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            self.hovers.columnIndex === columnOrderIndex,\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = rowData ? rowData[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: rowData,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: rowData,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n\n          viewRowIndex: rowOrderIndex,\n          viewColumnIndex: columnOrderIndex,\n\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\n          boundColumnIndex: columnOrderIndex,\n\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n\n        // When filtering we'd like to display the actual row numbers,\n        // as it is in the unfiltered data, instead of simply the viewed\n        // row index + 1:\n        const filteredRowNumber =\n          self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1;\n\n        const rowHeaderValue = self.hasActiveFilters()\n          ? filteredRowNumber\n          : rowIndex + 1;\n\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\n        const headerDescription = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: rowHeaderValue,\n          index: -1,\n        };\n        rowOpen = self.openChildren[rowIndex];\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\n          headerDescription,\n          -1,\n          -1,\n        );\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = schema.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = schema[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: schema.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(rowOrderIndex, rowIndex) {\n      var headerIndex,\n        treeHeight,\n        rowSansTreeHeight,\n        columnOrderIndex,\n        g = schema.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rowData = viewData[rowOrderIndex];\n      rowOpen = self.openChildren[rowOrderIndex];\n      rowSansTreeHeight =\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (\n        columnOrderIndex = self.scrollIndexLeft;\n        columnOrderIndex < g;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          self.scrollIndexRight = columnOrderIndex;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (\n        columnOrderIndex = 0;\n        columnOrderIndex < self.frozenColumn;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[rowOrderIndex];\n      if (rowOrderIndex !== viewData.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: rowOrderIndex,\n        };\n        self.visibleCells.unshift({\n          rowIndex: rowOrderIndex,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[rowOrderIndex];\n      }\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      schema = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var rowOrderIndex,\n        ln = Math.min(viewData.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var columnOrderIndex,\n        rowOrderIndex,\n        headerIndex,\n        g = schema.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (\n        rowIndex = self.frozenRow + self.scrollIndexTop;\n        rowIndex < l;\n        rowIndex += 1\n      ) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        self.scrollIndexBottom = rowIndex;\n        self.scrollPixelBottom = y;\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (\n          columnOrderIndex = self.scrollIndexLeft;\n          columnOrderIndex < g;\n          columnOrderIndex += 1\n        ) {\n          headerIndex = self.orders.columns[columnOrderIndex];\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\n            schema[headerIndex],\n            headerIndex,\n            columnOrderIndex,\n          );\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([\n          self.newRow,\n          viewData.length,\n          viewData.length,\n          y,\n          rowHeight,\n        ]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < schema.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.viewData || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponent) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColummnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.viewData || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.viewData.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColummnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.viewData || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.viewData[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      o = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: o, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (o && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== o.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== o.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = o;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = o;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (!self.draggingItem && o && self.scrollModes.indexOf(o.context) === -1) {\n      self.dragItem = o;\n      self.dragMode = o.dragContext;\n      self.cursor = o.context;\n      if (o.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = { rowIndex: o.rowIndex, columnIndex: o.columnIndex };\n      }\n      if ((self.selecting || self.reorderObject) && o.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, o.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, o.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, o.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, o.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, o.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, o.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== o.rowIndex ||\n          self.dragStartObject.columnIndex !== o.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(o.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && o.rowIndex !== undefined) {\n              if (\n                self.selections[o.rowIndex] &&\n                self.selections[o.rowIndex].indexOf(o.columnIndex) !== -1\n              ) {\n                self.selections[o.rowIndex].splice(\n                  self.selections[o.rowIndex].indexOf(o.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[o.rowIndex] = self.selections[o.rowIndex] || [];\n              if (self.selections[o.rowIndex].indexOf(o.columnIndex) === -1) {\n                self.selections[o.rowIndex].push(o.columnIndex);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.viewData.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selectNone();\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.viewData.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        // strip table beginning and ending off, then split at rows\n        var cleanedHtmlData = data\n          .substring(\n            data.indexOf('<table><tr>') + 11,\n            data.indexOf('</tr></table>'),\n          )\n          .split('</tr><tr>')\n          .filter(\n            // ditch any headers on the table\n            (row) => !/^<th>|^<thead>/.test(row),\n          )\n          .map(\n            // split row into individual cells\n            (row) =>\n              row\n                .match(/<td>[^<]+/g)\n                .map((match) => match.replace(/^<td>/, '')),\n          );\n\n        return cleanedHtmlData;\n      }\n\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      return data.split('\\n').map((value) => [value]);\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        data[rowIndex][colName] = cellData;\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.viewData[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName];\n            continue;\n          }\n\n          selections[realRowIndex].push(startColIndex + colIndex);\n\n          newRowData[columnName] = cellData;\n        }\n\n        self.originalData[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n    });\n\n    // Because originalData has been updated, we must refresh\n    // viewData to ensure the new cell values are rendered\n    self.refresh();\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : ',');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row);\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var touchTimerMs = 50,\n    debounceTouchMove,\n    touchMoving,\n    touchScrollTimeout;\n  self.scrollAnimation = {};\n  self.touchDelta = {};\n  self.touchAnimateTo = {};\n  self.animationFrames = 0;\n  self.getTouchPos = function (e, touchIndex) {\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\n      rect = self.canvas.getBoundingClientRect(),\n      pos;\n    if (!t) {\n      return;\n    }\n    pos = {\n      x: t.clientX - rect.left,\n      y: t.clientY - rect.top,\n    };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\n  self.easingFunctions = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return t * (2 - t);\n    },\n    easeInOutQuad: function (t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return --t * t * t + 1;\n    },\n    easeInOutCubic: function (t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return 1 - --t * t * t * t;\n    },\n    easeInOutQuart: function (t) {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    easeInQuint: function (t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 + --t * t * t * t * t;\n    },\n    easeInOutQuint: function (t) {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  self.easing = function (t, b, c, d) {\n    return (\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\n    );\n  };\n  self.calculatePPSTimed = function () {\n    self.xPPST = -(\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.yPPST = -(\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.touchSigmaTimed = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.calculatePPS = function () {\n    self.xPPS = -(\n      (self.touchDelta.x - self.touchSigma.x) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.yPPS = -(\n      (self.touchDelta.y - self.touchSigma.y) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.touchSigma = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.touchEndAnimation = function () {\n    if (!self.canvas || !self.scrollBox.scrollTo) {\n      return requestAnimationFrame(self.touchEndAnimation);\n    }\n    var n = performance.now(),\n      d = self.attributes.touchReleaseAnimationDurationMs,\n      t;\n    t = n - self.touchDelta.t;\n    self.animationFrames += 1;\n    self.scrollAnimation.x = self.easing(\n      t,\n      self.touchDelta.scrollLeft,\n      self.touchAnimateTo.x,\n      d,\n    );\n    self.scrollAnimation.y = self.easing(\n      t,\n      self.touchDelta.scrollTop,\n      self.touchAnimateTo.y,\n      d,\n    );\n    if (\n      t > d ||\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\n      self.stopAnimation\n    ) {\n      return;\n    }\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\n    requestAnimationFrame(self.touchEndAnimation);\n  };\n  self.touchEditCell = function (cell) {\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\n  };\n  self.touchCell = function (e) {\n    return function () {\n      clearInterval(self.calculatePPSTimer);\n      var i,\n        pos = self.getTouchPos(e);\n      if (\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n        self.attributes.touchDeadZone\n      ) {\n        i = self.getCellAt(pos.x, pos.y);\n        if (!i) {\n          return;\n        }\n        if (\n          self.touchingCell &&\n          self.touchingCell.rowIndex === i.rowIndex &&\n          self.touchingCell.columnIndex === i.columnIndex\n        ) {\n          self.touchEditCell(i);\n          return;\n        }\n        if (self.input && self.input.editCell) {\n          self.endEdit();\n        }\n        self.touchingCell = i;\n        self.selectArea({\n          top: i.rowIndex,\n          bottom: i.rowIndex,\n          left: i.columnIndex,\n          right: i.columnIndex,\n        });\n        self.draw(true);\n      }\n    };\n  };\n  self.touchstart = function (e) {\n    if (e.changedTouches[0]) {\n      self.touchStart = self.getTouchPos(e);\n      self.startingCell = self.getCellAt(\n        self.touchStart.x,\n        self.touchStart.y,\n        true,\n      );\n    }\n    if (\n      self.dispatchEvent('touchstart', {\n        NativeEvent: e,\n        cell: self.startingCell,\n      })\n    ) {\n      return;\n    }\n    self.disposeContextMenu();\n    clearInterval(self.calculatePPSTimer);\n    clearTimeout(self.touchContextTimeout);\n    self.touchStartEvent = e;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    self.stopPropagation(e);\n    e.preventDefault();\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\n      self.touchLength = 1;\n      self.touchStart = self.touchStart || self.touchStart1;\n      self.touchScrollStart = {\n        x: self.scrollBox.scrollLeft,\n        y: self.scrollBox.scrollTop,\n        t: performance.now(),\n      };\n      self.touchDelta = {\n        x: 0,\n        y: 0,\n        scrollLeft: self.scrollBox.scrollLeft,\n        scrollTop: self.scrollBox.scrollTop,\n        t: self.touchScrollStart.t,\n      };\n      self.touchSigma = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchSigmaTimed = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchContextTimeout = setTimeout(function () {\n        self.contextmenuEvent(e, self.touchStart);\n      }, self.attributes.touchContextMenuTimeMs);\n      self.calculatePPSTimer = setInterval(\n        self.calculatePPSTimed,\n        touchTimerMs,\n      );\n      if (\n        self.startingCell &&\n        (self.startingCell.isGrid ||\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\n      ) {\n        self.hasFocus = false;\n        return;\n      }\n      self.hasFocus = true;\n      if (self.startingCell.isHeader) {\n        if (self.startingCell.isRowHeader) {\n          self.selectArea({\n            top: self.startingCell.rowIndex,\n            bottom: self.startingCell.rowIndex,\n            left: 0,\n            right: self.getVisibleSchema().length - 1,\n          });\n          self.draw(true);\n        } else if (self.startingCell.isColumnHeader) {\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\n            if (self.orderBy === self.startingCell.header.name) {\n              self.orderDirection =\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n              self.orderDirection = 'asc';\n            }\n            self.order(self.startingCell.header.name, self.orderDirection);\n          }\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\n            self.selectArea({\n              top: 0,\n              bottom: self.viewData.length - 1,\n              left: self.startingCell.columnIndex,\n              right: self.startingCell.columnIndex,\n            });\n            self.draw(true);\n          }\n        }\n        self.touchEndEvents(e);\n        return;\n      }\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    document.body.addEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.addEventListener('touchend', self.touchend, false);\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\n    self.draw(true);\n  };\n  self.touchSelect = function (cell, handleType) {\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\n      return;\n    }\n    self.touchSelecting = true;\n    var bounds = self.getSelectionBounds();\n    if (\n      handleType === 'selection-handle-bl' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tl' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tr' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-br' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    }\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\n      bounds.left = 0;\n      bounds.right = self.getSchema().length - 1;\n    } else {\n      bounds.left = Math.max(0, bounds.left);\n    }\n    self.selectArea(bounds);\n    self.draw(true);\n  };\n  function touchMove(e) {\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\n      return;\n    }\n    clearTimeout(touchScrollTimeout);\n    if (e.changedTouches[0]) {\n      self.touchPosition = self.getTouchPos(e);\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = self.getTouchPos(e, 1);\n    }\n    if (\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\n      self.attributes.touchDeadZone\n    ) {\n      clearTimeout(self.touchContextTimeout);\n    }\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\n      t1 = self.touchPosition.y;\n      t2 = self.touchPosition1.y;\n      if (!self.zoomDeltaStart) {\n        self.zoomDeltaStart = Math.abs(t1 - t2);\n        self.startScale = self.scale;\n      }\n      self.touchLength = 2;\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\n      self.scale =\n        self.startScale -\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\n      self.scale = Math.min(\n        Math.max(self.scale, self.attributes.touchZoomMin),\n        self.attributes.touchZoomMax,\n      );\n      self.zoomAltered = true;\n      self.resize(true);\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    self.touchLength = 1;\n    self.touchPosition = self.touchPosition || self.touchPosition1;\n    ch = self.getColumnHeaderCellHeight();\n    rw = self.getRowHeaderCellWidth();\n    rScrollZone =\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\n      self.attributes.selectionScrollZone;\n    lScrollZone =\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\n    bScrollZone =\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\n      self.attributes.selectionScrollZone;\n    tScrollZone =\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\n    sbw = self.style.scrollBarWidth;\n    function touchScroll() {\n      var x = self.scrollBox.scrollLeft,\n        y = self.scrollBox.scrollTop;\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      self.scrollBox.scrollTo(x, y);\n      touchScrollTimeout = setTimeout(\n        touchScroll,\n        self.attributes.scrollRepeatRate,\n      );\n    }\n    e.stopPropagation();\n    self.touchDelta = {\n      x: self.touchPosition.x - self.touchStart.x,\n      y: self.touchPosition.y - self.touchStart.y,\n      scrollLeft: self.scrollBox.scrollLeft,\n      scrollTop: self.scrollBox.scrollTop,\n      t: performance.now(),\n    };\n    self.currentCell = self.getCellAt(\n      self.touchPosition.x,\n      self.touchPosition.y,\n    );\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\n    self.calculatePPS();\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    if (\n      self.touchSelecting &&\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\n    ) {\n      touchScroll();\n    }\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollTop =\n        self.scrollBox.scrollHeight *\n        ((self.touchPosition.y - ch - sbw) /\n          (self.scrollBox.height - sbw - ch));\n      return;\n    }\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollLeft =\n        self.scrollBox.scrollWidth *\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\n      return;\n    }\n    if (/selection-handle-/.test(self.startingCell.style)) {\n      self.touchSelect(self.currentCell, self.startingCell.style);\n      return;\n    }\n    self.scrollBox.scrollTo(\n      self.touchScrollStart.x - self.touchDelta.x,\n      self.touchScrollStart.y - self.touchDelta.y,\n    );\n  }\n  self.touchmove = function (e) {\n    if (touchMoving) {\n      return;\n    }\n    requestAnimationFrame(function () {\n      touchMoving = true;\n      touchMove(e);\n      touchMoving = false;\n    });\n  };\n  self.touchEndEvents = function (e) {\n    self.zoomDeltaStart = undefined;\n    self.touchSelecting = false;\n    clearInterval(self.touchScrollTimeout);\n    clearInterval(self.touchContextTimeout);\n    clearInterval(self.calculatePPSTimer);\n    e.stopPropagation();\n    document.body.removeEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.removeEventListener('touchend', self.touchend, false);\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\n  };\n  self.touchend = function (e) {\n    if (\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    self.zoomDeltaStart = undefined;\n    if (e.changedTouches[0]) {\n      self.touchPosition = undefined;\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = undefined;\n    }\n    if (self.zoomAltered) {\n      if (e.touches.length === 0) {\n        self.zoomAltered = false;\n      }\n      return;\n    }\n    var dz =\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n      self.attributes.touchDeadZone;\n    if (isNaN(self.xPPS)) {\n      self.xPPS = 0;\n    }\n    if (isNaN(self.yPPS)) {\n      self.yPPS = 0;\n    }\n    if (isNaN(self.xPPST)) {\n      self.xPPST = 0;\n    }\n    if (isNaN(self.yPPST)) {\n      self.yPPST = 0;\n    }\n    self.touchAnimateTo.x =\n      self.xPPS * self.attributes.touchReleaseAcceleration;\n    self.touchAnimateTo.y =\n      self.yPPS * self.attributes.touchReleaseAcceleration;\n    self.calculatePPSTimed();\n    if (dz && !self.contextMenu) {\n      self.touchCell(self.touchStartEvent)();\n    } else if (\n      self.animationFrames === 0 &&\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\n      !/-scroll-/.test(self.startingCell.style) &&\n      !dz\n    ) {\n      self.stopAnimation = false;\n      self.touchEndAnimation();\n    }\n    self.touchEndEvents(e);\n  };\n  self.touchcancel = function (e) {\n    if (\n      self.dispatchEvent('touchcancel', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    self.touchEndEvents(e);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self, ctor) {\n  self.scale = 1;\n  self.orders = {\n    rows: [],\n    columns: [],\n  };\n  self.appliedInlineStyles = {};\n  self.cellGridAttributes = {};\n  self.treeGridAttributes = {};\n  self.visibleRowHeights = [];\n  self.hasFocus = false;\n  self.activeCell = {\n    columnIndex: 0,\n    rowIndex: 0,\n  };\n  self.innerHTML = '';\n  self.storageName = 'canvasDataGrid';\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\n  self.dataType = 'application/x-canvas-datagrid';\n  self.orderBy = null;\n  self.orderDirection = 'asc';\n  self.orderings = {\n    columns: [],\n    add: function (orderBy, orderDirection, sortFunction) {\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\n        return col.orderBy !== orderBy;\n      });\n      self.orderings.columns.push({\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        sortFunction: sortFunction,\n      });\n    },\n    sort: function () {\n      console.warn(\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\n      );\n\n      self.orderings.columns.forEach(function (col) {\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\n      });\n    },\n  };\n  self.columnFilters = {};\n  self.filters = {};\n  self.frozenRow = 0;\n  self.frozenColumn = 0;\n  self.ellipsisCache = {};\n  self.scrollCache = { x: [], y: [] };\n  self.scrollBox = {};\n  self.visibleRows = [];\n  self.visibleCells = [];\n  self.sizes = {\n    rows: {},\n    columns: {},\n    trees: {},\n  };\n  self.currentFilter = function () {\n    return true;\n  };\n  self.selections = [];\n  self.hovers = {};\n  self.attributes = {};\n  self.style = {};\n  self.formatters = {};\n  self.sorters = {};\n  self.parsers = {};\n  self.schemaHashes = {};\n  self.events = {};\n  self.changes = [];\n  self.scrollIndexTop = 0;\n  self.scrollPixelTop = 0;\n  self.scrollIndexLeft = 0;\n  self.scrollPixelLeft = 0;\n  self.childGrids = {};\n  self.openChildren = {};\n  self.scrollModes = [\n    'vertical-scroll-box',\n    'vertical-scroll-top',\n    'vertical-scroll-bottom',\n    'horizontal-scroll-box',\n    'horizontal-scroll-right',\n    'horizontal-scroll-left',\n  ];\n  self.componentL1Events = {};\n  self.eventNames = [\n    'afterdraw',\n    'afterrendercell',\n    'attributechanged',\n    'beforebeginedit',\n    'beforecreatecellgrid',\n    'beforedraw',\n    'beforeendedit',\n    'beforerendercell',\n    'beforerendercellgrid',\n    'beginedit',\n    'cellmouseout',\n    'cellmouseover',\n    'click',\n    'collapsetree',\n    'contextmenu',\n    'copy',\n    'datachanged',\n    'dblclick',\n    'endedit',\n    'expandtree',\n    'formatcellvalue',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'newrow',\n    'ordercolumn',\n    'rendercell',\n    'rendercellgrid',\n    'renderorderbyarrow',\n    'rendertext',\n    'rendertreearrow',\n    'reorder',\n    'reordering',\n    'resize',\n    'resizecolumn',\n    'resizerow',\n    'schemachanged',\n    'scroll',\n    'selectionchanged',\n    'stylechanged',\n    'touchcancel',\n    'touchend',\n    'touchmove',\n    'touchstart',\n    'wheel',\n  ];\n  self.mouse = { x: 0, y: 0 };\n  self.getSelectedData = function (expandToRow) {\n    const selectedData = [];\n    const schema = self.getSchema();\n    const viewDataLength = self.viewData.length;\n\n    if (viewDataLength === 0) {\n      return [];\n    }\n\n    // self.selections is a sparse array, so `viewRowIndex` here\n    // will equal the row index as where it's rendered,\n    // not as where it is in the original data array.\n    self.selections.forEach(function (row, viewRowIndex) {\n      if (!row) {\n        return;\n      }\n\n      if (viewRowIndex === viewDataLength) {\n        return;\n      }\n\n      if (row.length === 0) {\n        selectedData[viewRowIndex] = null;\n        return;\n      }\n\n      selectedData[viewRowIndex] = {};\n\n      row.forEach(function (col) {\n        if (col === -1 || !schema[col]) {\n          return;\n        }\n\n        const orderedIndex = self.orders.columns[col];\n\n        if (!expandToRow && schema[orderedIndex].hidden) {\n          return;\n        }\n\n        if (self.viewData[viewRowIndex]) {\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\n        }\n      });\n    });\n\n    return selectedData;\n  };\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\n      return self.boundRowIndexMap.get(viewRowIndex);\n    }\n\n    return undefined;\n  };\n  self.getColumnHeaderCellHeight = function () {\n    if (!self.attributes.showColumnHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\n    );\n  };\n  self.getRowHeaderCellWidth = function () {\n    if (!self.attributes.showRowHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\n    );\n  };\n  self.setStorageData = function () {\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\n      return;\n    }\n    var visibility = {};\n    self.getSchema().forEach(function (column) {\n      visibility[column.name] = !column.hidden;\n    });\n    localStorage.setItem(\n      self.storageName + '-' + self.attributes.name,\n      JSON.stringify({\n        sizes: {\n          rows: self.sizes.rows,\n          columns: self.sizes.columns,\n        },\n        orders: {\n          rows: self.orders.rows,\n          columns: self.orders.columns,\n        },\n        orderBy: self.orderBy,\n        orderDirection: self.orderDirection,\n        visibility: visibility,\n      }),\n    );\n  };\n  self.getSchema = function () {\n    return self.schema || self.tempSchema || [];\n  };\n  function fillArray(low, high) {\n    var i = [],\n      x;\n    for (x = low; x <= high; x += 1) {\n      i[x] = x;\n    }\n    return i;\n  }\n  self.createColumnOrders = function () {\n    var s = self.getSchema();\n    self.orders.columns = fillArray(0, s.length - 1);\n  };\n  self.createRowOrders = function () {\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\n  };\n  self.getVisibleSchema = function () {\n    return self.getSchema().filter(function (col) {\n      return !col.hidden;\n    });\n  };\n  self.applyDefaultValue = function (row, header) {\n    var d = header.defaultValue || '';\n    if (typeof d === 'function') {\n      d = d.apply(self.intf, [header]);\n    }\n    row[header.name] = d;\n  };\n  self.createNewRowData = function () {\n    self.newRow = {};\n    self.getSchema().forEach(function forEachHeader(header) {\n      self.applyDefaultValue(self.newRow, header);\n    });\n  };\n  self.getSchemaNameHash = function (key) {\n    var n = 0;\n    while (self.schemaHashes[key]) {\n      n += 1;\n      key = key + n;\n    }\n    return key;\n  };\n  self.filter = function (type) {\n    var f = self.filters[type];\n    if (!f && type !== undefined) {\n      console.warn(\n        'Cannot find filter for type %s, falling back to substring match.',\n        type,\n      );\n      f = self.filters.string;\n    }\n    return f;\n  };\n  self.hasActiveFilters = function () {\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\n  };\n  self.getFilteredAndSortedViewData = function (originalData) {\n    // We make a copy of originalData here in order be able to\n    // filter and sort rows without modifying the original array.\n    // Each row is turned into a (row, rowIndex) tuple\n    // so that when we apply filters, we can refer back to the\n    // row's original row number in originalData. This becomes\n    // useful when emitting cell events.\n    let newViewData = originalData.map((row, originalRowIndex) => [\n      row,\n      originalRowIndex,\n    ]);\n\n    // Apply filtering\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\n      const header = self.getHeaderByName(headerName);\n\n      if (!header) {\n        continue;\n      }\n\n      const currentFilterFunction =\n        header.filter || self.filter(header.type || 'string');\n\n      newViewData = newViewData.filter(function ([row]) {\n        const cellValue = row[headerName];\n        const shouldIncludeRow = currentFilterFunction(cellValue, filterText);\n\n        return shouldIncludeRow;\n      });\n    }\n\n    // Apply sorting\n    for (const column of self.orderings.columns) {\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\n\n      newViewData.sort(([rowA], [rowB]) => sortFn(rowA, rowB));\n    }\n\n    return {\n      viewData: newViewData.map(([row]) => row),\n      boundRowIndexMap: new Map(\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\n          viewRowIndex,\n          originalRowIndex,\n        ]),\n      ),\n    };\n  };\n  self.refresh = function () {\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\n      self.originalData,\n    );\n\n    self.viewData = viewData;\n    self.boundRowIndexMap = boundRowIndexMap;\n\n    self.resize();\n    self.draw(true);\n  };\n  self.getBestGuessDataType = function (columnName, data) {\n    var t,\n      x,\n      l = data.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        data[x] !== undefined &&\n        data[x] !== null &&\n        [null, undefined].indexOf(data[x][columnName]) !== -1\n      ) {\n        t = typeof data[x];\n        return t === 'object' ? 'string' : t;\n      }\n    }\n    return 'string';\n  };\n  self.drawChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].draw();\n    });\n  };\n  self.resizeChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].resize();\n    });\n  };\n  self.autoScrollZone = function (e, x, y, ctrl) {\n    var setTimer,\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\n    if (y !== -1) {\n      if (\n        x > self.width - self.attributes.selectionScrollZone &&\n        x < self.width\n      ) {\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (y !== -1) {\n      if (\n        y > self.height - self.attributes.selectionScrollZone &&\n        y < self.height\n      ) {\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\n        0\n      ) {\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (\n      setTimer &&\n      !ctrl &&\n      self.currentCell &&\n      self.currentCell.columnIndex !== -1\n    ) {\n      self.scrollTimer = setTimeout(\n        self.mousemove,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.validateColumn = function (c, s) {\n    if (!c.name) {\n      throw new Error('A column must contain at least a name.');\n    }\n    if (\n      s.filter(function (i) {\n        return i.name === c.name;\n      }).length > 0\n    ) {\n      throw new Error(\n        'A column with the name ' +\n          c.name +\n          ' already exists and cannot be added again.',\n      );\n    }\n    return true;\n  };\n  self.setDefaults = function (obj1, obj2, key, def) {\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\n  };\n  self.setAttributes = function () {\n    self.defaults.attributes.forEach(function eachAttribute(i) {\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\n    });\n  };\n  self.setStyle = function () {\n    self.defaults.styles.forEach(function eachStyle(i) {\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\n    });\n  };\n  self.autosize = function (colName) {\n    self.getVisibleSchema().forEach(function (col, colIndex) {\n      if (col.name === colName || colName === undefined) {\n        self.sizes.columns[colIndex] = Math.max(\n          self.findColumnMaxTextLength(col.name),\n          self.style.minColumnWidth,\n        );\n      }\n    });\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\n  };\n  self.dispose = function () {\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\n      self.canvas.parentNode.removeChild(self.canvas);\n    }\n    if (!self.isChildGrid) {\n      document.body.removeChild(self.controlInput);\n    }\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\n    self.eventParent.removeEventListener('click', self.click, false);\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\n    self.canvas.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('cut', self.cut);\n    self.controlInput.removeEventListener('paste', self.paste);\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\n    window.removeEventListener('resize', self.resize);\n    if (self.observer && self.observer.disconnect) {\n      self.observer.disconnect();\n    }\n  };\n  self.tryLoadStoredSettings = function () {\n    var s;\n    self.reloadStoredValues();\n    if (\n      self.storedSettings &&\n      typeof self.storedSettings.orders === 'object' &&\n      self.storedSettings.orders !== null\n    ) {\n      if (\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\n      ) {\n        self.orders.rows = self.storedSettings.orders.rows;\n      }\n      s = self.getSchema();\n      if (self.storedSettings.orders.columns.length === s.length) {\n        self.orders.columns = self.storedSettings.orders.columns;\n      }\n      self.orderBy =\n        self.storedSettings.orderBy === undefined\n          ? s[0].name\n          : self.storedSettings.orderBy;\n      self.orderDirection =\n        self.storedSettings.orderDirection === undefined\n          ? 'asc'\n          : self.storedSettings.orderDirection;\n      if (\n        self.storedSettings.orderBy !== undefined &&\n        self.getHeaderByName(self.orderBy) &&\n        self.orderDirection\n      ) {\n        self.order(self.orderBy, self.orderDirection);\n      }\n    }\n  };\n  self.getDomRoot = function () {\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\n  };\n  self.getFontName = function (fontStyle) {\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\n  };\n  self.getFontHeight = function (fontStyle) {\n    return parseFloat(fontStyle, 10);\n  };\n  self.parseStyleValue = function (key) {\n    if (/Font/.test(key)) {\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\n      return;\n    }\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\n    if (\n      key === 'moveOverlayBorderSegments' &&\n      typeof self.style[key] === 'string'\n    ) {\n      self.style[key] = self.style[key].split(',').map(function (i) {\n        return parseInt(i, 10);\n      });\n    }\n  };\n  self.initProp = function (propName) {\n    if (!self.args[propName]) {\n      return;\n    }\n    Object.keys(self.args[propName]).forEach(function (key) {\n      self[propName][key] = self.args[propName][key];\n    });\n  };\n  self.getStyleProperty = function (key) {\n    if (self.styleKeys.indexOf(key) === -1) {\n      return self.parentNodeStyle[key];\n    }\n    return self.style[key];\n  };\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\n    var isDim =\n      [\n        'height',\n        'width',\n        'minHeight',\n        'minWidth',\n        'maxHeight',\n        'maxWidth',\n      ].indexOf(key) !== -1;\n    if (self.styleKeys.indexOf(key) === -1) {\n      self.parentNodeStyle[key] = value;\n    } else {\n      if (/-/.test(key)) {\n        key = self.dehyphenateProperty(key);\n      }\n      self.style[key] = value;\n      self.parseStyleValue(key);\n    }\n    if (isDim) {\n      self.resize();\n    }\n    if (!supressDrawAndEvent) {\n      self.draw(true);\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\n    }\n  };\n  self.reloadStoredValues = function () {\n    if (self.attributes.name && self.attributes.saveAppearance) {\n      try {\n        self.storedSettings = localStorage.getItem(\n          self.storageName + '-' + self.attributes.name,\n        );\n      } catch (e) {\n        console.warn('Error loading stored values. ' + e.message);\n        self.storedSettings = undefined;\n      }\n      if (self.storedSettings) {\n        try {\n          self.storedSettings = JSON.parse(self.storedSettings);\n        } catch (e) {\n          console.warn('could not read settings from localStore', e);\n          self.storedSettings = undefined;\n        }\n      }\n      if (self.storedSettings) {\n        if (\n          typeof self.storedSettings.sizes === 'object' &&\n          self.storedSettings.sizes !== null\n        ) {\n          self.sizes.rows = self.storedSettings.sizes.rows;\n          self.sizes.columns = self.storedSettings.sizes.columns;\n          ['trees', 'columns', 'rows'].forEach(function (i) {\n            if (!self.sizes[i]) {\n              self.sizes[i] = {};\n            }\n          });\n        }\n        if (typeof self.storedSettings.visibility === 'object') {\n          self.getSchema().forEach(function (column) {\n            if (\n              self.storedSettings.visibility &&\n              self.storedSettings.visibility[column.name] !== undefined\n            ) {\n              column.hidden = !self.storedSettings.visibility[column.name];\n            }\n          });\n        }\n      }\n    }\n  };\n  self.init = function () {\n    if (self.initialized) {\n      return;\n    }\n    function addStyleKeyIfNoneExists(key) {\n      if (self.styleKeys.indexOf(key) === -1) {\n        self.styleKeys.push(key);\n      }\n    }\n    var publicStyleKeyIntf = {};\n    self.setAttributes();\n    self.setStyle();\n    self.initScrollBox();\n    self.setDom();\n    self.nodeType = 'canvas-datagrid';\n    self.ie = /Trident/.test(window.navigator.userAgent);\n    self.edge = /Edge/.test(window.navigator.userAgent);\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\n    self.moz = /Gecko/.test(window.navigator.userAgent);\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\n    self.blankValues = [undefined, null, ''];\n    self.cursorGrab = 'grab';\n    self.cursorGrabing = 'grabbing';\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\n    self.pointerLockPosition = { x: 0, y: 0 };\n    Object.keys(self.style).forEach(self.parseStyleValue);\n    self.intf.moveSelection = self.moveSelection;\n    self.intf.moveTo = self.moveTo;\n    self.intf.addEventListener = self.addEventListener;\n    self.intf.removeEventListener = self.removeEventListener;\n    self.intf.dispatchEvent = self.dispatchEvent;\n    /**\n     * Releases grid resources and removes grid elements.\n     * @memberof canvasDatagrid\n     * @name dispose\n     * @method\n     */\n    self.intf.dispose = self.dispose;\n    /**\n     * Appends the grid to another element later.  Not implemented.\n     * @memberof canvasDatagrid\n     * @name appendTo\n     * @method\n     * @param {number} el The element to append the grid to.\n     */\n    self.intf.appendTo = self.appendTo;\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\n    self.intf.filters = self.filters;\n    self.intf.sorters = self.sorters;\n    self.intf.autosize = self.autosize;\n    self.intf.beginEditAt = self.beginEditAt;\n    self.intf.endEdit = self.endEdit;\n    self.intf.setActiveCell = self.setActiveCell;\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\n    self.intf.scrollIntoView = self.scrollIntoView;\n    self.intf.clearChangeLog = self.clearChangeLog;\n    self.intf.gotoCell = self.gotoCell;\n    self.intf.gotoRow = self.gotoRow;\n    self.intf.getHeaderByName = self.getHeaderByName;\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\n    self.intf.findRowScrollTop = self.findRowScrollTop;\n    self.intf.fitColumnToValues = self.fitColumnToValues;\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\n    self.intf.disposeContextMenu = self.disposeContextMenu;\n    self.intf.getCellAt = self.getCellAt;\n    self.intf.isCellVisible = self.isCellVisible;\n    self.intf.isRowVisible = self.isRowVisible;\n    self.intf.isColumnVisible = self.isColumnVisible;\n    self.intf.order = self.order;\n    self.intf.draw = self.draw;\n    self.intf.refresh = self.refresh;\n    self.intf.isComponent = self.isComponent;\n    self.intf.selectArea = self.selectArea;\n    self.intf.clipElement = self.clipElement;\n    self.intf.getSchemaFromData = self.getSchemaFromData;\n    self.intf.setFilter = self.setFilter;\n    self.intf.selectRow = self.selectRow;\n    self.intf.parentGrid = self.parentGrid;\n    self.intf.toggleTree = self.toggleTree;\n    self.intf.expandTree = self.expandTree;\n    self.intf.collapseTree = self.collapseTree;\n    self.intf.canvas = self.canvas;\n    self.intf.context = self.ctx;\n    self.intf.insertRow = self.insertRow;\n    self.intf.deleteRow = self.deleteRow;\n    self.intf.addRow = self.addRow;\n    self.intf.insertColumn = self.insertColumn;\n    self.intf.deleteColumn = self.deleteColumn;\n    self.intf.addColumn = self.addColumn;\n    self.intf.getClippingRect = self.getClippingRect;\n    self.intf.setRowHeight = self.setRowHeight;\n    self.intf.setColumnWidth = self.setColumnWidth;\n    self.intf.resetColumnWidths = self.resetColumnWidths;\n    self.intf.resetRowHeights = self.resetRowHeights;\n    self.intf.resize = self.resize;\n    self.intf.selectColumn = self.selectColumn;\n    self.intf.selectRow = self.selectRow;\n    self.intf.selectAll = self.selectAll;\n    self.intf.selectNone = self.selectNone;\n    self.intf.drawChildGrids = self.drawChildGrids;\n    self.intf.assertPxColor = self.assertPxColor;\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\n    self.intf.integerToAlpha = self.integerToAlpha;\n    self.intf.copy = self.copy;\n    self.intf.paste = self.paste;\n    self.intf.setStyleProperty = self.setStyleProperty;\n    Object.defineProperty(self.intf, 'defaults', {\n      get: function () {\n        return {\n          styles: self.defaults.styles.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n          attributes: self.defaults.attributes.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n        };\n      },\n    });\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, false);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, true);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.DOMStyles = window.getComputedStyle(document.body, null);\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\n      // unless this line is here, Object.keys() will not work on <instance>.style\n      publicStyleKeyIntf[key] = undefined;\n      Object.defineProperty(publicStyleKeyIntf, key, {\n        get: function () {\n          return self.getStyleProperty(key);\n        },\n        set: function (value) {\n          if (self.initialized) {\n            self.appliedInlineStyles[key] = value;\n          }\n          self.setStyleProperty(key, value);\n        },\n      });\n    });\n    Object.defineProperty(self.intf, 'shadowRoot', {\n      get: function () {\n        return self.shadowRoot;\n      },\n    });\n    Object.defineProperty(self.intf, 'activeCell', {\n      get: function () {\n        return self.activeCell;\n      },\n    });\n    Object.defineProperty(self.intf, 'hasFocus', {\n      get: function () {\n        return self.hasFocus;\n      },\n    });\n    /**\n     * Indicates whether grid has filters active\n     * @memberof canvasDatagrid\n     * @name hasActiveFilters\n     * @returns {boolean} When true, grid data is being filtered\n     */\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\n      get: function () {\n        return self.hasActiveFilters();\n      },\n    });\n    Object.defineProperty(self.intf, 'style', {\n      get: function () {\n        return publicStyleKeyIntf;\n      },\n      set: function (valueObject) {\n        Object.keys(valueObject).forEach(function (key) {\n          self.setStyleProperty(key, valueObject[key], true);\n        });\n        self.draw(true);\n        self.dispatchEvent('stylechanged', {\n          name: 'style',\n          value: valueObject,\n        });\n      },\n    });\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\n    Object.keys(self.attributes).forEach(function (key) {\n      Object.defineProperty(self.intf.attributes, key, {\n        get: function () {\n          return self.attributes[key];\n        },\n        set: function (value) {\n          self.attributes[key] = value;\n          if (key === 'name') {\n            self.tryLoadStoredSettings();\n          }\n          self.draw(true);\n          self.dispatchEvent('attributechanged', {\n            name: key,\n            value: value[key],\n          });\n        },\n      });\n    });\n    self.filters.string = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      value = String(value);\n      var filterRegExp,\n        regEnd = /\\/(i|g|m)*$/,\n        pattern = regEnd.exec(filterFor),\n        flags = pattern ? pattern[0].substring(1) : '',\n        flagLength = flags.length;\n      self.invalidFilterRegEx = undefined;\n      if (filterFor.substring(0, 1) === '/' && pattern) {\n        try {\n          filterRegExp = new RegExp(\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\n            flags,\n          );\n        } catch (e) {\n          self.invalidFilterRegEx = e;\n          return;\n        }\n        return filterRegExp.test(value);\n      }\n      return value.toString\n        ? value\n            .toString()\n            .toLocaleUpperCase()\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\n        : false;\n    };\n    self.filters.number = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      if (!filterFor) {\n        return true;\n      }\n      return value === filterFor;\n    };\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\n    self.applyComponentStyle(false, self.intf);\n    self.reloadStoredValues();\n    if (self.args.data) {\n      self.intf.data = self.args.data;\n    }\n    if (self.intf.innerText || self.intf.textContent) {\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      self.intf.data = self.intf.innerText || self.intf.textContent;\n    }\n    if (self.args.schema) {\n      self.intf.schema = self.args.schema;\n    }\n    if (self.isChildGrid || !self.isComponent) {\n      requestAnimationFrame(function () {\n        self.resize(true);\n      });\n    } else {\n      self.resize(true);\n    }\n    self.initialized = true;\n    return self;\n  };\n  /**\n   * Removes focus from the grid.\n   * @memberof canvasDatagrid\n   * @name blur\n   * @method\n   */\n  self.intf.blur = function (e) {\n    self.hasFocus = false;\n  };\n  /**\n   * Focuses on the grid.\n   * @memberof canvasDatagrid\n   * @name focus\n   * @method\n   */\n  self.intf.focus = function () {\n    self.hasFocus = true;\n    self.controlInput.focus();\n  };\n  if (self.shadowRoot || self.isChildGrid) {\n    Object.defineProperty(self.intf, 'height', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.height;\n        }\n        return self.parentNode.height;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.height = value;\n        } else {\n          self.parentNode.height = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'width', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.width;\n        }\n        return self.parentNode.width;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.width = value;\n        } else {\n          self.parentNode.width = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'parentNode', {\n      get: function () {\n        return self.parentNode;\n      },\n      set: function (value) {\n        if (!self.isChildGrid) {\n          throw new TypeError(\n            'Cannot set property parentNode which has only a getter',\n          );\n        }\n        self.parentNode = value;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\n    get: function () {\n      return self.visibleRowHeights;\n    },\n  });\n  Object.defineProperty(self.intf, 'openChildren', {\n    get: function () {\n      return self.openChildren;\n    },\n  });\n  Object.defineProperty(self.intf, 'childGrids', {\n    get: function () {\n      return Object.keys(self.childGrids).map(function (gridId) {\n        return self.childGrids[gridId];\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'isChildGrid', {\n    get: function () {\n      return self.isChildGrid;\n    },\n  });\n  Object.defineProperty(self, 'cursor', {\n    get: function () {\n      return self.parentNodeStyle.cursor;\n    },\n    set: function (value) {\n      if (value === 'cell') {\n        value = 'default';\n      }\n      if (self.currentCursor !== value) {\n        self.parentNodeStyle.cursor = value;\n        self.currentCursor = value;\n      }\n    },\n  });\n  Object.defineProperty(self.intf, 'orderDirection', {\n    get: function () {\n      return self.orderDirection;\n    },\n    set: function (value) {\n      if (value !== 'desc') {\n        value = 'asc';\n      }\n      self.orderDirection = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  Object.defineProperty(self.intf, 'orderBy', {\n    get: function () {\n      return self.orderBy;\n    },\n    set: function (value) {\n      if (\n        self.getSchema().find(function (col) {\n          return col.name === value;\n        }) === undefined\n      ) {\n        throw new Error('Cannot sort by unknown column name.');\n      }\n      self.orderBy = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  if (self.isComponent) {\n    Object.defineProperty(self.intf, 'offsetHeight', {\n      get: function () {\n        return self.canvas.offsetHeight;\n      },\n    });\n    Object.defineProperty(self.intf, 'offsetWidth', {\n      get: function () {\n        return self.canvas.offsetWidth;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'scrollHeight', {\n    get: function () {\n      return self.scrollBox.scrollHeight;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollWidth', {\n    get: function () {\n      return self.scrollBox.scrollWidth;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollTop', {\n    get: function () {\n      return self.scrollBox.scrollTop;\n    },\n    set: function (value) {\n      self.scrollBox.scrollTop = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollLeft', {\n    get: function () {\n      return self.scrollBox.scrollLeft;\n    },\n    set: function (value) {\n      self.scrollBox.scrollLeft = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'sizes', {\n    get: function () {\n      return self.sizes;\n    },\n  });\n  Object.defineProperty(self.intf, 'parentDOMNode', {\n    get: function () {\n      return self.parentDOMNode;\n    },\n  });\n  Object.defineProperty(self.intf, 'input', {\n    get: function () {\n      return self.input;\n    },\n  });\n  Object.defineProperty(self.intf, 'controlInput', {\n    get: function () {\n      return self.controlInput;\n    },\n  });\n  Object.defineProperty(self.intf, 'currentCell', {\n    get: function () {\n      return self.currentCell;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleCells', {\n    get: function () {\n      return self.visibleCells;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleRows', {\n    get: function () {\n      return self.visibleRows;\n    },\n  });\n  Object.defineProperty(self.intf, 'selections', {\n    get: function () {\n      return self.selections;\n    },\n  });\n  Object.defineProperty(self.intf, 'dragMode', {\n    get: function () {\n      return self.dragMode;\n    },\n  });\n  Object.defineProperty(self.intf, 'changes', {\n    get: function () {\n      return self.changes;\n    },\n  });\n  self.intf.formatters = self.formatters;\n  Object.defineProperty(self.intf, 'dataType', {\n    get: function () {\n      return self.dataType;\n    },\n    set: function (value) {\n      if (!self.parsers[value]) {\n        throw new Error('No parser for MIME type ' + value);\n      }\n      self.dataType = value;\n    },\n  });\n  self.eventNames.forEach(function (eventName) {\n    Object.defineProperty(self.intf, 'on' + eventName, {\n      get: function () {\n        return self.componentL1Events[eventName];\n      },\n      set: function (value) {\n        self.events[eventName] = [];\n        self.componentL1Events[eventName] = value;\n        if (!value) {\n          return;\n        }\n        self.addEventListener(eventName, value);\n      },\n    });\n  });\n  Object.defineProperty(self.intf, 'frozenRow', {\n    get: function () {\n      return self.frozenRow;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.visibleRows.length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible rows.',\n        );\n      }\n      self.frozenRow = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'frozenColumn', {\n    get: function () {\n      return self.frozenColumn;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.getVisibleSchema().length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible columns.',\n        );\n      }\n      self.frozenColumn = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\n    get: function () {\n      return {\n        top: self.scrollIndexTop,\n        right: self.scrollIndexRight,\n        bottom: self.scrollIndexBottom,\n        left: self.scrollIndexLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\n    get: function () {\n      return {\n        top: self.scrollPixelTop,\n        right: self.scrollPixelRight,\n        bottom: self.scrollPixelBottom,\n        left: self.scrollPixelLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'rowOrder', {\n    get: function () {\n      return self.orders.rows;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (!self.originalData || val.length < self.originalData.length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of rows.',\n        );\n      }\n      self.orders.rows = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'columnOrder', {\n    get: function () {\n      return self.orders.columns;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (val.length < self.getSchema().length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of columns.',\n        );\n      }\n      self.orders.columns = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'selectionBounds', {\n    get: function () {\n      return self.getSelectionBounds();\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedRows', {\n    get: function () {\n      return self.getSelectedData(true);\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedCells', {\n    get: function () {\n      return self.getSelectedData();\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleSchema', {\n    get: function () {\n      return self.getVisibleSchema().map(function eachDataRow(col) {\n        return col;\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\n    get: function () {\n      return self.treeGridAttributes;\n    },\n    set: function setTreeGridAttributes(value) {\n      self.treeGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\n    get: function () {\n      return self.cellGridAttributes;\n    },\n    set: function setCellGridAttributes(value) {\n      self.cellGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'ctx', {\n    get: function () {\n      return self.ctx;\n    },\n  });\n  Object.defineProperty(self.intf, 'schema', {\n    get: function schemaGetter() {\n      return self.getSchema();\n    },\n    set: function schemaSetter(value) {\n      if (value === undefined) {\n        // Issue #89 - allow schema to be set to initialized state\n        self.schema = undefined;\n        self.tempSchema = undefined;\n        self.dispatchEvent('schemachanged', { schema: undefined });\n        return;\n      }\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\n        throw new Error('Schema must be an array of objects.');\n      }\n      if (value[0].name === undefined) {\n        throw new Error(\n          'Expected schema to contain an object with at least a name property.',\n        );\n      }\n      self.schema = value.map(function eachSchemaColumn(column, index) {\n        column.width = column.width || self.style.cellWidth;\n        column.filter = column.filter || self.filter(column.type);\n        column.type = column.type || 'string';\n        column.index = index;\n        column.columnIndex = index;\n        column.rowIndex = -1;\n        return column;\n      });\n      self.tempSchema = undefined;\n      self.createNewRowData();\n      self.createColumnOrders();\n      self.tryLoadStoredSettings();\n      if (\n        self.storedSettings &&\n        typeof self.storedSettings.visibility === 'object'\n      ) {\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\n          if (\n            self.storedSettings &&\n            self.storedSettings.visibility[column.name] !== undefined\n          ) {\n            column.hidden = !self.storedSettings.visibility[column.name];\n          }\n        });\n      }\n      self.resize(true);\n      self.dispatchEvent('schemachanged', { schema: self.schema });\n    },\n  });\n  /**\n   * Gets an array of currently registered MIME types.\n   * @memberof canvasDatagrid\n   * @name getDataTypes\n   * @method\n   */\n  self.intf.getTypes = function () {\n    return Object.keys(self.parsers);\n  };\n  self.parseInnerHtml = function (data) {\n    if (!data || /^ +$/.test(data)) {\n      return [];\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.warn(\n        Error(\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\n            e.message +\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\n            'Use the canvas-datagrid.data property to set object data.',\n        ),\n      );\n    }\n    return data;\n  };\n  self.parsers['application/json+x-canvas-datagrid'] = function (\n    data,\n    callback,\n  ) {\n    self.parsers['application/x-canvas-datagrid'](\n      self.parseInnerHtml(data),\n      function (data, schema) {\n        return callback(data, schema);\n      },\n    );\n  };\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\n    return callback(data);\n  };\n  self.intf.parsers = self.parsers;\n  // send to dataType ETL function to extract from input data\n  // and transform into native [{}, {}] format\n  self.etl = function (data, callback) {\n    if (!self.intf.parsers[self.dataType]) {\n      throw new Error('Unsupported data type.');\n    }\n    self.intf.parsers[self.dataType](data, function (data, schema) {\n      // set the unfiltered/sorted data array\n      self.originalData = data;\n      self.viewData = Array.from(self.originalData);\n\n      if (Array.isArray(schema)) {\n        self.schema = schema;\n      }\n      // Issue #89 - allow schema to be auto-created every time data is set\n      if (self.attributes.autoGenerateSchema) {\n        self.schema = self.getSchemaFromData(data);\n      }\n      if (!self.schema) {\n        self.tempSchema = self.getSchemaFromData(data);\n      }\n      if (self.getSchema()) {\n        self.createColumnOrders();\n      }\n      // apply filter, sort, etc to incoming dataset, set viewData:\n      self.refresh();\n      // empty data was set\n      if (!self.schema && (self.originalData || []).length === 0) {\n        self.tempSchema = [{ name: '' }];\n      }\n      self.fitColumnToValues('cornerCell', true);\n      if (\n        (self.tempSchema && !self.schema) ||\n        self.attributes.autoGenerateSchema\n      ) {\n        self.createColumnOrders();\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\n      }\n      callback();\n    });\n  };\n  Object.defineProperty(self.intf, 'viewData', {\n    get: function () {\n      return self.viewData;\n    },\n  });\n  Object.defineProperty(self.intf, 'boundData', {\n    get: function () {\n      return self.originalData;\n    },\n  });\n  Object.defineProperty(self.intf, 'data', {\n    get: function dataGetter() {\n      return self.originalData;\n    },\n    set: function dataSetter(value) {\n      self.etl(value, function () {\n        self.changes = [];\n        self.createNewRowData();\n        if (\n          self.attributes.autoResizeColumns &&\n          self.originalData.length > 0 &&\n          self.storedSettings === undefined\n        ) {\n          self.autosize();\n        }\n        // set the header column to fit the numbers in it\n        self.fitColumnToValues('cornerCell', true);\n        self.createRowOrders();\n        self.tryLoadStoredSettings();\n        self.dispatchEvent('datachanged', { data: self.originalData });\n        self.resize(true);\n      });\n    },\n  });\n  self.initScrollBox = function () {\n    var sHeight = 0,\n      sWidth = 0,\n      scrollTop = 0,\n      scrollLeft = 0,\n      scrollHeight = 0,\n      scrollWidth = 0,\n      scrollBoxHeight = 20,\n      scrollBoxWidth = 20;\n    function setScrollTop(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollTop value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollHeight) {\n        value = scrollHeight;\n      }\n      if (scrollHeight < 0) {\n        value = 0;\n      }\n      scrollTop = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    function setScrollLeft(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollLeft value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollWidth) {\n        value = scrollWidth;\n      }\n      if (scrollWidth < 0) {\n        value = 0;\n      }\n      scrollLeft = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    self.scrollBox.toString = function () {\n      return (\n        '{\"width\": ' +\n        scrollWidth.toFixed(2) +\n        ', \"height\": ' +\n        scrollHeight.toFixed(2) +\n        ', \"left\": ' +\n        scrollLeft.toFixed(2) +\n        ', \"top\": ' +\n        scrollTop.toFixed(2) +\n        ', \"widthRatio\": ' +\n        self.scrollBox.widthBoxRatio.toFixed(5) +\n        ', \"heightRatio\": ' +\n        self.scrollBox.heightBoxRatio.toFixed(5) +\n        '}'\n      );\n    };\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\n      setScrollLeft(x, true);\n      setScrollTop(y, supressDrawEvent);\n    };\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\n      get: function () {\n        return scrollBoxHeight;\n      },\n      set: function (value) {\n        scrollBoxHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\n      get: function () {\n        return scrollBoxWidth;\n      },\n      set: function (value) {\n        scrollBoxWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'height', {\n      get: function () {\n        return sHeight;\n      },\n      set: function (value) {\n        sHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'width', {\n      get: function () {\n        return sWidth;\n      },\n      set: function (value) {\n        sWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\n      get: function () {\n        return scrollTop;\n      },\n      set: setScrollTop,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\n      get: function () {\n        return scrollLeft;\n      },\n      set: setScrollLeft,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\n      get: function () {\n        return scrollHeight;\n      },\n      set: function (value) {\n        if (scrollTop > value) {\n          scrollTop = Math.max(value, 0);\n        }\n        scrollHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\n      get: function () {\n        return scrollWidth;\n      },\n      set: function (value) {\n        if (scrollLeft > value) {\n          scrollLeft = Math.max(value, 0);\n        }\n        scrollWidth = value;\n      },\n    });\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\n'use strict';\n\nexport default function (self) {\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\n  function applyContextItemStyle(contextItemContainer) {\n    self.createInlineStyle(\n      contextItemContainer,\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\n    );\n    contextItemContainer.addEventListener('mouseover', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item:hover',\n      );\n    });\n    contextItemContainer.addEventListener('mouseout', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item',\n      );\n    });\n  }\n  function createContextMenu(ev, pos, items, parentContextMenu) {\n    var container = document.createElement('div'),\n      upArrow = document.createElement('div'),\n      downArrow = document.createElement('div'),\n      children = [],\n      selectedIndex = -1,\n      intf = {},\n      rect;\n    if (!Array.isArray(items)) {\n      throw new Error('createContextMenu expects an array.');\n    }\n    function createItems() {\n      items.forEach(function (item) {\n        var contextItemContainer = document.createElement('div'),\n          childMenuArrow;\n        function removeChildContext(e) {\n          if (\n            e.relatedTarget === container ||\n            item.contextMenu.container === e.relatedTarget ||\n            childMenuArrow === e.relatedTarget ||\n            contextItemContainer === e.relatedTarget ||\n            item.contextMenu.container.contains(e.relatedTarget)\n          ) {\n            return;\n          }\n          item.contextMenu.dispose();\n          children.splice(children.indexOf(item.contextMenu), 1);\n          item.contextMenu = undefined;\n          contextItemContainer.removeEventListener(\n            'mouseout',\n            removeChildContext,\n          );\n          container.removeEventListener('mouseout', removeChildContext);\n          contextItemContainer.setAttribute('contextOpen', '0');\n          contextItemContainer.setAttribute('opening', '0');\n        }\n        function contextAddCallback(items) {\n          // check yet again if the user hasn't moved off\n          if (\n            contextItemContainer.getAttribute('opening') !== '1' ||\n            contextItemContainer.getAttribute('contextOpen') === '1'\n          ) {\n            return;\n          }\n          var cPos = contextItemContainer.getBoundingClientRect();\n          cPos = {\n            left:\n              cPos.left +\n              self.style.childContextMenuMarginLeft +\n              container.offsetWidth,\n            top: cPos.top + self.style.childContextMenuMarginTop,\n            bottom: cPos.bottom,\n            right: cPos.right,\n          };\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\n          contextItemContainer.setAttribute('contextOpen', '1');\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\n          container.addEventListener('mouseout', removeChildContext);\n          children.push(item.contextMenu);\n        }\n        function createChildContext() {\n          var i;\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\n            return;\n          }\n          contextItemContainer.setAttribute('opening', '1');\n          if (typeof item.items === 'function') {\n            i = item.items.apply(intf, [\n              function (items) {\n                contextAddCallback(items);\n              },\n            ]);\n            if (i !== undefined && Array.isArray(i)) {\n              contextAddCallback(i);\n            }\n            return;\n          }\n          contextAddCallback(item.items);\n        }\n        function addItem(item) {\n          function addContent(content) {\n            if (content === null) {\n              return;\n            }\n            if (typeof content === 'function') {\n              return addContent(content(ev));\n            }\n            if (typeof content === 'object') {\n              contextItemContainer.appendChild(content);\n              return;\n            }\n            applyContextItemStyle(contextItemContainer);\n            contextItemContainer.innerHTML = content;\n            return;\n          }\n          addContent(item.title);\n          item.contextItemContainer = contextItemContainer;\n          if (\n            (item.items && item.items.length > 0) ||\n            typeof item.items === 'function'\n          ) {\n            childMenuArrow = document.createElement('div');\n            self.createInlineStyle(\n              childMenuArrow,\n              'canvas-datagrid-context-child-arrow',\n            );\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\n            contextItemContainer.appendChild(childMenuArrow);\n            contextItemContainer.addEventListener(\n              'mouseover',\n              createChildContext,\n            );\n            contextItemContainer.addEventListener('mouseout', function () {\n              contextItemContainer.setAttribute('opening', '0');\n            });\n          }\n          if (item.click) {\n            contextItemContainer.addEventListener('click', function (ev) {\n              item.click.apply(self, [ev]);\n            });\n          }\n        }\n        addItem(item);\n        container.appendChild(contextItemContainer);\n      });\n    }\n    function clickIndex(idx) {\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\n    }\n    function checkArrowVisibility() {\n      if (container.scrollTop > 0) {\n        self.parentDOMNode.appendChild(upArrow);\n      } else if (upArrow.parentNode) {\n        upArrow.parentNode.removeChild(upArrow);\n      }\n      if (\n        container.scrollTop >=\n          container.scrollHeight - container.offsetHeight &&\n        downArrow.parentNode\n      ) {\n        downArrow.parentNode.removeChild(downArrow);\n      } else if (\n        container.scrollHeight - container.offsetHeight > 0 &&\n        !(\n          container.scrollTop >=\n          container.scrollHeight - container.offsetHeight\n        )\n      ) {\n        self.parentDOMNode.appendChild(downArrow);\n      }\n    }\n    function startHoverScroll(type) {\n      return function t() {\n        var a = self.attributes.contextHoverScrollAmount;\n        if (type === 'up' && container.scrollTop === 0) {\n          return;\n        }\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\n          return;\n        }\n        container.scrollTop += type === 'up' ? -a : a;\n        hoverScrollTimeout = setTimeout(\n          t,\n          self.attributes.contextHoverScrollRateMs,\n          type,\n        );\n      };\n    }\n    function endHoverScroll(type) {\n      return function () {\n        clearTimeout(hoverScrollTimeout);\n      };\n    }\n    function init() {\n      var loc = {},\n        s = self.scrollOffset(self.canvas);\n      if (zIndexTop === undefined) {\n        zIndexTop = self.style.contextMenuZIndex;\n      }\n      createItems();\n      self.createInlineStyle(\n        container,\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\n      );\n      loc.x = pos.left - s.left;\n      loc.y = pos.top - s.top;\n      loc.height = 0;\n      zIndexTop += 1;\n      container.style.position = 'absolute';\n      upArrow.style.color = self.style.contextMenuArrowColor;\n      downArrow.style.color = self.style.contextMenuArrowColor;\n      [upArrow, downArrow].forEach(function (el) {\n        el.style.textAlign = 'center';\n        el.style.position = 'absolute';\n        el.style.zIndex = zIndexTop + 1;\n      });\n      container.style.zIndex = zIndexTop;\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\n        container.style.maxHeight =\n          window.innerHeight -\n          loc.y -\n          self.style.autocompleteBottomMargin +\n          'px';\n        container.style.minWidth = pos.width + 'px';\n        loc.y += pos.height;\n      }\n      if (self.mobile) {\n        container.style.width = pos.width + 'px';\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      container.addEventListener('scroll', checkArrowVisibility);\n      container.addEventListener('wheel', function (e) {\n        if (self.hasFocus) {\n          container.scrollTop += e.deltaY;\n          container.scrollLeft += e.deltaX;\n        }\n        checkArrowVisibility();\n      });\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\n      container.appendChild(upArrow);\n      document.body.appendChild(downArrow);\n      document.body.appendChild(container);\n      rect = container.getBoundingClientRect();\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\n      if (rect.bottom > window.innerHeight) {\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\n          loc.y -=\n            rect.bottom +\n            self.style.contextMenuWindowMargin -\n            window.innerHeight;\n        }\n        if (loc.y < 0) {\n          loc.y = self.style.contextMenuWindowMargin;\n        }\n        if (\n          container.offsetHeight >\n          window.innerHeight - self.style.contextMenuWindowMargin\n        ) {\n          container.style.height =\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\n        }\n      }\n      if (rect.right > window.innerWidth) {\n        loc.x -=\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\n      }\n      if (loc.x < 0) {\n        loc.x = self.style.contextMenuWindowMargin;\n      }\n      if (loc.y < 0) {\n        loc.y = self.style.contextMenuWindowMargin;\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      rect = container.getBoundingClientRect();\n      upArrow.style.top = rect.top + 'px';\n      downArrow.style.top =\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\n      upArrow.style.left = rect.left + 'px';\n      downArrow.style.left = rect.left + 'px';\n      downArrow.style.width = container.offsetWidth + 'px';\n      upArrow.style.width = container.offsetWidth + 'px';\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\n      checkArrowVisibility();\n    }\n    intf.parentGrid = self.intf;\n    intf.parentContextMenu = parentContextMenu;\n    intf.container = container;\n    init();\n    intf.clickIndex = clickIndex;\n    intf.rect = rect;\n    intf.items = items;\n    intf.upArrow = upArrow;\n    intf.downArrow = downArrow;\n    intf.dispose = function () {\n      clearTimeout(hoverScrollTimeout);\n      children.forEach(function (c) {\n        c.dispose();\n      });\n      [downArrow, upArrow, container].forEach(function (el) {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n      });\n    };\n    Object.defineProperty(intf, 'selectedIndex', {\n      get: function () {\n        return selectedIndex;\n      },\n      set: function (value) {\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\n          throw new Error('Context menu selected index must be a sane number.');\n        }\n        selectedIndex = value;\n        if (selectedIndex > items.length - 1) {\n          selectedIndex = items.length - 1;\n        }\n        if (selectedIndex < 0) {\n          selectedIndex = 0;\n        }\n        items.forEach(function (item, index) {\n          if (index === selectedIndex) {\n            return self.createInlineStyle(\n              item.contextItemContainer,\n              'canvas-datagrid-context-menu-item:hover',\n            );\n          }\n          self.createInlineStyle(\n            item.contextItemContainer,\n            'canvas-datagrid-context-menu-item',\n          );\n        });\n      },\n    });\n    return intf;\n  }\n  function createFilterContextMenuItems(e) {\n    var filterContainer = document.createElement('div'),\n      filterLabel = document.createElement('div'),\n      filterAutoCompleteButton = document.createElement('button'),\n      filterInput = document.createElement('input'),\n      n =\n        e.cell && e.cell.header\n          ? e.cell.header.title || e.cell.header.name\n          : '',\n      iRect;\n    function checkRegExpErrorState() {\n      filterInput.style.background = self.style.contextFilterInputBackground;\n      filterInput.style.color = self.style.contextFilterInputColor;\n      if (self.invalidFilterRegEx) {\n        filterInput.style.background =\n          self.style.contextFilterInvalidRegExpBackground;\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\n      }\n    }\n    function fillAutoComplete() {\n      var count = 0;\n      var items = {};\n      var blanksItem = [];\n\n      self.viewData.forEach(function (row) {\n        var cellValue =\n          row[e.cell.header.name] == null\n            ? row[e.cell.header.name]\n            : String(row[e.cell.header.name]).trim();\n        var value = self.blankValues.includes(cellValue)\n          ? self.attributes.blanksText\n          : cellValue;\n\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\n          return;\n        }\n        count += 1;\n        items[value] = {\n          title: self.formatters[e.cell.header.type || 'string']({\n            cell: { value: value },\n          }),\n          click: function (e) {\n            filterInput.value = value;\n            e.stopPropagation();\n            filterInput.dispatchEvent(new Event('keyup'));\n            self.disposeAutocomplete();\n            return;\n          },\n        };\n      });\n\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\n        blanksItem.push(items[self.attributes.blanksText]);\n        delete items[self.attributes.blanksText];\n      }\n\n      return blanksItem.concat(\n        Object.keys(items).map(function (key) {\n          return items[key];\n        }),\n      );\n    }\n\n    function createAutoCompleteContext(ev) {\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\n        return;\n      }\n\n      var autoCompleteItems = fillAutoComplete();\n\n      iRect = filterInput.getBoundingClientRect();\n      if (autoCompleteContext) {\n        autoCompleteContext.dispose();\n        autoCompleteContext = undefined;\n      }\n      autoCompleteContext = createContextMenu(\n        e,\n        {\n          left: iRect.left,\n          top: iRect.top,\n          right: iRect.right,\n          bottom: iRect.bottom,\n          height: iRect.height,\n          width: iRect.width,\n        },\n        autoCompleteItems,\n        { inputDropdown: true },\n      );\n      autoCompleteContext.selectedIndex = 0;\n    }\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\n    self.createInlineStyle(\n      filterAutoCompleteButton,\n      'canvas-datagrid-context-menu-filter-button',\n    );\n    self.createInlineStyle(\n      filterInput,\n      'canvas-datagrid-context-menu-filter-input',\n    );\n    checkRegExpErrorState();\n    filterInput.onclick = self.disposeAutocomplete;\n    filterInput.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowDown') {\n        autoCompleteContext.selectedIndex += 1;\n      }\n\n      if (e.key === 'ArrowUp') {\n        autoCompleteContext.selectedIndex -= 1;\n      }\n\n      if (e.key === 'Enter') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        self.disposeContextMenu();\n      }\n\n      if (e.key === 'Tab') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        e.preventDefault();\n      }\n\n      if (e.key === 'Escape') {\n        self.disposeContextMenu();\n      }\n    });\n    filterInput.addEventListener('keyup', function () {\n      self.setFilter(e.cell.header.name, filterInput.value);\n    });\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\n      filterInput.addEventListener(en, checkRegExpErrorState);\n    });\n    filterInput.value = e.cell.header\n      ? self.columnFilters[e.cell.header.name] || ''\n      : '';\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\n    filterAutoCompleteButton.onclick = function () {\n      if (autoCompleteContext) {\n        return self.disposeAutocomplete();\n      }\n      createAutoCompleteContext();\n    };\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\n    filterContainer.addEventListener('click', function (e) {\n      return e.stopPropagation();\n    });\n    filterContainer.appendChild(filterLabel);\n    filterContainer.appendChild(filterInput);\n    filterContainer.appendChild(filterAutoCompleteButton);\n    e.items.push({\n      title: filterContainer,\n    });\n    if (Object.keys(self.columnFilters).length) {\n      Object.keys(self.columnFilters).forEach(function (cf) {\n        var h = self.getHeaderByName(cf);\n        e.items.push({\n          title: self.attributes.removeFilterOptionText.replace(\n            /%s/g,\n            h.title || h.name,\n          ),\n          click: function removeFilterClick(e) {\n            e.preventDefault();\n            self.setFilter(cf, '');\n            self.controlInput.focus();\n          },\n        });\n      });\n    }\n  }\n  function addDefaultContextMenuItem(e) {\n    var isNormalCell =\n      !(\n        e.cell.isBackground ||\n        e.cell.isColumnHeaderCellCap ||\n        e.cell.isScrollBar ||\n        e.cell.isCorner ||\n        e.cell.isRowHeader\n      ) && e.cell.header;\n    if (self.attributes.showFilter && isNormalCell) {\n      createFilterContextMenuItems(e);\n    }\n    if (\n      self.attributes.showCopy &&\n      self.selections.reduce(function (p, r) {\n        return p + r.length;\n      }, 0) > 0\n    ) {\n      e.items.push({\n        title: self.attributes.copyText,\n        click: function () {\n          document.execCommand('copy');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (self.attributes.showPaste && self.clipBoardData) {\n      e.items.push({\n        title: self.attributes.pasteText,\n        click: function () {\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\n          self.draw();\n        },\n      });\n    }\n    if (self.attributes.showColumnSelector) {\n      e.items.push({\n        title: self.attributes.columnSelectorText,\n        items: function () {\n          var d = [];\n          self.getSchema().forEach(function (column) {\n            function toggleColumnVisibility(e) {\n              column.hidden = !column.hidden;\n              self.dispatchEvent('togglecolumn', {\n                column: column,\n                hidden: column.hidden,\n              });\n              e.preventDefault();\n              self.stopPropagation(e);\n              self.disposeContextMenu();\n              self.resize(true);\n              self.setStorageData();\n            }\n            var el = document.createElement('div');\n            applyContextItemStyle(el);\n            el.addEventListener('touchstart', toggleColumnVisibility);\n            el.addEventListener('click', toggleColumnVisibility);\n            el.innerHTML =\n              (column.hidden\n                ? self.attributes.columnSelectorHiddenText\n                : self.attributes.columnSelectorVisibleText) +\n              (column.title || column.name);\n            d.push({\n              title: el,\n            });\n          });\n          return d;\n        },\n      });\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\n        e.items.push({\n          title: self.attributes.hideColumnText.replace(\n            /%s/gi,\n            e.cell.header.title || e.cell.header.name,\n          ),\n          click: function (ev) {\n            self.getSchema()[e.cell.columnIndex].hidden = true;\n            ev.preventDefault();\n            self.stopPropagation(ev);\n            self.disposeContextMenu();\n            self.setStorageData();\n            setTimeout(function () {\n              self.resize(true);\n            }, 10);\n          },\n        });\n      }\n    }\n    if (\n      self.attributes.saveAppearance &&\n      self.attributes.showClearSettingsOption &&\n      (Object.keys(self.sizes.rows).length > 0 ||\n        Object.keys(self.sizes.columns).length > 0)\n    ) {\n      e.items.push({\n        title: self.attributes.clearSettingsOptionText,\n        click: function (e) {\n          e.preventDefault();\n          self.sizes.rows = {};\n          self.sizes.columns = {};\n          self.createRowOrders();\n          self.createColumnOrders();\n          self.storedSettings = undefined;\n          self.dispatchEvent('resizecolumn', {\n            columnWidth: self.style.cellWidth,\n          });\n          self.dispatchEvent('resizerow', {\n            cellHeight: self.style.cellHeight,\n          });\n          self.setStorageData();\n          self.resize(true);\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (\n      self.attributes.allowSorting &&\n      self.attributes.showOrderByOption &&\n      isNormalCell\n    ) {\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextAsc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'asc');\n          self.controlInput.focus();\n        },\n      });\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextDesc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'desc');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n  }\n  self.disposeAutocomplete = function () {\n    if (autoCompleteContext) {\n      autoCompleteContext.dispose();\n      autoCompleteContext = undefined;\n    }\n  };\n  self.disposeContextMenu = function () {\n    document.removeEventListener('click', self.disposeContextMenu);\n    zIndexTop = self.style.contextMenuZIndex;\n    self.disposeAutocomplete();\n    if (self.contextMenu) {\n      self.contextMenu.dispose();\n    }\n    self.contextMenu = undefined;\n  };\n  self.contextmenuEvent = function (e, overridePos) {\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    function createDiposeEvent() {\n      requestAnimationFrame(function () {\n        document.addEventListener('click', self.disposeContextMenu);\n        document.removeEventListener('mouseup', createDiposeEvent);\n      });\n    }\n    var contextPosition,\n      items = [],\n      pos = overridePos || self.getLayerPos(e),\n      ev = {\n        NativeEvent: e,\n        cell: self.getCellAt(pos.x, pos.y),\n        items: items,\n      };\n    if (!ev.cell.isGrid) {\n      addDefaultContextMenuItem(ev);\n    }\n    if (self.dispatchEvent('contextmenu', ev)) {\n      return;\n    }\n    if (!ev.cell.isGrid) {\n      if (self.contextMenu) {\n        self.disposeContextMenu();\n      }\n      contextPosition = {\n        left:\n          pos.x +\n          pos.rect.left +\n          self.style.contextMenuMarginLeft +\n          self.canvasOffsetLeft,\n        top:\n          pos.y +\n          pos.rect.top +\n          self.style.contextMenuMarginTop +\n          self.canvasOffsetTop,\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\n        height: ev.cell.height,\n        width: ev.cell.width,\n      };\n      if (self.mobile) {\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\n        contextPosition.width =\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\n      }\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\n      document.addEventListener('mouseup', createDiposeEvent);\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    if (\n      self.dispatchEvent('beforeendedit', {\n        cell: cell,\n        newValue: self.input.value,\n        oldValue: cell.value,\n        abort: abortEdit,\n        input: self.input,\n      })\n    ) {\n      return false;\n    }\n    if (self.input.value !== cell.value && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = self.input.value;\n      if (!cell.data) {\n        self.originalData[cell.boundRowIndex] = {};\n        cell.data = self.originalData[cell.boundRowIndex];\n      }\n      cell.data[cell.header.name] = self.input.value;\n      if (y === self.viewData.length) {\n        if (\n          self.dispatchEvent('newrow', {\n            value: self.input.value,\n            defaultValue: cell.value,\n            aborted: abort,\n            cell: cell,\n            input: self.input,\n          })\n        ) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    self.input.value = shouldClearCellValue ? '' : cell.value;\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.viewData.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.viewData.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.viewData.length - 1;\n        }\n        if (ny > self.viewData.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  /**\n   * Converts a integer into a letter A - ZZZZZ...\n   * @memberof canvasDatagrid\n   * @name integerToAlpha\n   * @method\n   * @param {column} n The number to convert.\n   */\n  self.integerToAlpha = function (n) {\n    var ordA = 'a'.charCodeAt(0),\n      ordZ = 'z'.charCodeAt(0),\n      len = ordZ - ordA + 1,\n      s = '';\n    while (n >= 0) {\n      s = String.fromCharCode((n % len) + ordA) + s;\n      n = Math.floor(n / len) - 1;\n    }\n    return s;\n  };\n  /**\n   * Inserts a new column before the specified index into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name insertColumn\n   * @method\n   * @param {column} c The column to insert into the schema.\n   * @param {number} index The index of the column to insert before.\n   */\n  self.insertColumn = function (c, index) {\n    var s = self.getSchema();\n    if (s.length < index) {\n      throw new Error('Index is beyond the length of the schema.');\n    }\n    self.validateColumn(c, s);\n    s.splice(index, 0, c);\n\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a column from the schema at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteColumn\n   * @tutorial schema\n   * @method\n   * @param {number} index The index of the column to delete.\n   */\n  self.deleteColumn = function (index) {\n    var schema = self.getSchema();\n\n    // remove data matching this column name from data\n    self.originalData.forEach(function (row) {\n      delete row[schema[index].name];\n    });\n\n    schema.splice(index, 1);\n    self.intf.schema = schema;\n\n    self.refresh();\n  };\n  /**\n   * Adds a new column into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name addColumn\n   * @method\n   * @param {column} c The column to add to the schema.\n   */\n  self.addColumn = function (c) {\n    var s = self.getSchema();\n    self.validateColumn(c, s);\n    s.push(c);\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a row from the dataset at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteRow\n   * @method\n   * @param {number} index The index of the row to delete.\n   */\n  self.deleteRow = function (index) {\n    self.originalData.splice(index, 1);\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Inserts a new row into the dataset before the specified index.\n   * @memberof canvasDatagrid\n   * @name insertRow\n   * @method\n   * @param {object} d data.\n   * @param {number} index The index of the row to insert before.\n   */\n  self.insertRow = function (d, index) {\n    if (self.originalData.length < index) {\n      throw new Error('Index is beyond the length of the dataset.');\n    }\n    self.originalData.splice(index, 0, d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(self.originalData[index], c);\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Adds a new row into the dataset.\n   * @memberof canvasDatagrid\n   * @name addRow\n   * @method\n   * @param {object} d data.\n   */\n  self.addRow = function (d) {\n    self.originalData.push(d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(\n          self.originalData[self.originalData.length - 1],\n          c,\n        );\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Sets the height of a given row by index number.\n   * @memberof canvasDatagrid\n   * @name setRowHeight\n   * @method\n   * @param {number} rowIndex The index of the row to set.\n   * @param {number} height Height to set the row to.\n   */\n  self.setRowHeight = function (rowIndex, height) {\n    self.sizes.rows[rowIndex] = height;\n    self.draw(true);\n  };\n  /**\n   * Sets the width of a given column by index number.\n   * @memberof canvasDatagrid\n   * @name setColumnWidth\n   * @method\n   * @param {number} colIndex The index of the column to set.\n   * @param {number} width Width to set the column to.\n   */\n  self.setColumnWidth = function (colIndex, width) {\n    self.sizes.columns[colIndex] = width;\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetColumnWidths\n   * @tutorial schema\n   * @method\n   */\n  self.resetColumnWidths = function () {\n    self.sizes.columns = {};\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetRowHeights\n   * @tutorial schema\n   * @method\n   */\n  self.resetRowHeights = function () {\n    self.sizes.rows = {};\n    self.draw(true);\n  };\n  /**\n   * Sets the value of the filter.\n   * @memberof canvasDatagrid\n   * @name setFilter\n   * @method\n   * @param {string} column Name of the column to filter.\n   * @param {string} value The value to filter for.\n   */\n  self.setFilter = function (column, value) {\n    if (column === undefined && value === undefined) {\n      self.columnFilters = {};\n    } else if (column && (value === '' || value === undefined)) {\n      delete self.columnFilters[column];\n    } else {\n      self.columnFilters[column] = value;\n    }\n    self.refresh();\n  };\n  /**\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\n   * @memberof canvasDatagrid\n   * @name findRowScrollTop\n   * @method\n   * @param {number} rowIndex The row index of the row to scroll find.\n   */\n  self.findRowScrollTop = function (rowIndex) {\n    if (self.scrollCache.y[rowIndex] === undefined) {\n      throw new RangeError(\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\n      );\n    }\n    return self.scrollCache.y[rowIndex];\n  };\n  /**\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\n   * @memberof canvasDatagrid\n   * @name findColumnScrollLeft\n   * @method\n   * @param {number} columnIndex The column index of the column to find.\n   */\n  self.findColumnScrollLeft = function (columnIndex) {\n    var i = Math.max(columnIndex - 1, 0);\n    if (self.scrollCache.x[i] === undefined) {\n      throw new Error('Column index out of range.');\n    }\n    return (\n      self.scrollCache.x[i] -\n      self.getColummnWidth(self.orders.columns[columnIndex])\n    );\n  };\n  /**\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\n   * @memberof canvasDatagrid\n   * @name gotoCell\n   * @method\n   * @param {number} x The column index of the cell to scroll to.\n   * @param {number} y The row index of the cell to scroll to.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.gotoCell = function (x, y, offsetX, offsetY) {\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\n      cell,\n      sbw =\n        self.scrollBox.width -\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\n      sbh =\n        self.scrollBox.height -\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\n    offsetX = offsetX === undefined ? 0 : offsetX;\n    offsetY = offsetY === undefined ? 0 : offsetY;\n    targetX -= sbw * offsetX;\n    targetY -= sbh * offsetY;\n    if (x !== undefined && y !== undefined) {\n      self.scrollBox.scrollTo(targetX, targetY);\n      requestAnimationFrame(function () {\n        cell = self.getVisibleCellByIndex(x, y);\n        // HACK: just don't offset if the target cell cannot be seen\n        // TODO: offset does not work on very small grids, not sure why\n        if (!cell) {\n          return;\n        }\n        targetX += cell.width * offsetX;\n        targetY += cell.height * offsetY;\n        self.scrollBox.scrollTo(targetX, targetY);\n      });\n    } else if (x !== undefined) {\n      self.scrollBox.scrollLeft = targetX;\n    } else if (y !== undefined) {\n      self.scrollBox.scrollTop = targetY;\n    }\n  };\n  /**\n   * Scrolls the row y.\n   * @memberof canvasDatagrid\n   * @name gotoRow\n   * @method\n   * @param {number} y The row index of the cell to scroll to.\n   */\n  self.gotoRow = function (y) {\n    self.gotoCell(0, y);\n  };\n  /**\n   * Scrolls the cell at cell x, row y into view if it is not already.\n   * @memberof canvasDatagrid\n   * @name scrollIntoView\n   * @method\n   * @param {number} x The column index of the cell to scroll into view.\n   * @param {number} y The row index of the cell to scroll into view.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\n    if (\n      self.visibleCells.filter(function (cell) {\n        return (\n          (cell.rowIndex === y || y === undefined) &&\n          (cell.columnIndex === x || x === undefined) &&\n          cell.x > 0 &&\n          cell.y > 0 &&\n          cell.x + cell.width < self.width &&\n          cell.y + cell.height < self.height\n        );\n      }).length === 0\n    ) {\n      self.gotoCell(x, y, offsetX, offsetY);\n    }\n  };\n  /**\n   * Sets the active cell. Requires redrawing.\n   * @memberof canvasDatagrid\n   * @name setActiveCell\n   * @method\n   * @param {number} x The column index of the cell to set active.\n   * @param {number} y The row index of the cell to set active.\n   */\n  self.setActiveCell = function (x, y) {\n    if (x < 0) {\n      x = 0;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    self.activeCell = {\n      rowIndex: y,\n      columnIndex: x,\n    };\n  };\n  /**\n   * Removes the selection.\n   * @memberof canvasDatagrid\n   * @name selectNone\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectNone = function (dontDraw) {\n    self.selections = [];\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Selects every visible cell.\n   * @memberof canvasDatagrid\n   * @name selectAll\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectAll = function (dontDraw) {\n    self.selectArea({\n      top: 0,\n      left: -1,\n      right: self.getSchema().length - 1,\n      bottom: self.viewData.length - 1,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Returns true if the selected columnIndex is selected on every row.\n   * @memberof canvasDatagrid\n   * @name isColumnSelected\n   * @method\n   * @param {number} columnIndex The column index to check.\n   */\n  self.isColumnSelected = function (columnIndex) {\n    var colIsSelected = true;\n    self.viewData.forEach(function (row, rowIndex) {\n      if (\n        !self.selections[rowIndex] ||\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\n          -1\n      ) {\n        colIsSelected = false;\n      }\n    });\n    return colIsSelected;\n  };\n  /**\n   * Runs the defined method on each selected cell.\n   * @memberof canvasDatagrid\n   * @name forEachSelectedCell\n   * @method\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\n   */\n  self.forEachSelectedCell = function (fn, expandToRow) {\n    var d = [],\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\n      l = self.viewData.length;\n    self.selections.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        fn(self.viewData, index, s[col].name);\n      });\n    });\n  };\n  /**\n   * Selects a column.\n   * @memberof canvasDatagrid\n   * @name selectColumn\n   * @method\n   * @param {number} columnIndex The column index to select.\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\n    var s, e, x;\n    function addCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) === -1) {\n          self.selections[rowIndex].push(i);\n        }\n      });\n    }\n    function removeCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\n          self.selections[rowIndex].splice(\n            self.selections[rowIndex].indexOf(i),\n            1,\n          );\n        }\n      });\n    }\n    if (shift) {\n      if (!self.activeCell) {\n        return;\n      }\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\n      for (x = s; e > x; x += 1) {\n        addCol(x);\n      }\n    }\n    if (!ctrl && !shift) {\n      self.selections = [];\n      self.activeCell.columnIndex = columnIndex;\n      self.activeCell.rowIndex = self.scrollIndexTop;\n    }\n    if (ctrl && self.isColumnSelected(columnIndex)) {\n      removeCol(columnIndex);\n    } else {\n      addCol(columnIndex);\n    }\n    if (supressEvent) {\n      return;\n    }\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.getSelectionBounds(),\n    });\n  };\n  /**\n   * Selects a row.\n   * @memberof canvasDatagrid\n   * @name selectRow\n   * @method\n   * @param {number} rowIndex The row index to select.\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\n    var x,\n      st,\n      en,\n      s = self.getVisibleSchema();\n    function de() {\n      if (supressEvent) {\n        return;\n      }\n      self.dispatchEvent('selectionchanged', {\n        selectedData: self.getSelectedData(),\n        selections: self.selections,\n        selectionBounds: self.selectionBounds,\n      });\n    }\n    function addRow(ri) {\n      self.selections[ri] = [];\n      self.selections[ri].push(-1);\n      s.forEach(function (col, index) {\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\n      });\n    }\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\n      if (\n        self.selections[rowIndex] &&\n        self.selections[rowIndex].length - 1 === s.length\n      ) {\n        if (ctrl) {\n          self.selections[rowIndex] = [];\n          de();\n          return;\n        }\n      }\n    }\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\n      if (shift && self.dragObject === undefined) {\n        if (!self.activeCell) {\n          return;\n        }\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\n        for (x = st; en >= x; x += 1) {\n          addRow(x);\n        }\n      } else {\n        addRow(rowIndex);\n      }\n    }\n    de();\n  };\n  /**\n   * Collapse a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name collapseTree\n   * @method\n   * @param {number} index The index of the row to collapse.\n   */\n  self.collapseTree = function (rowIndex) {\n    self.dispatchEvent('collapsetree', {\n      childGrid: self.childGrids[rowIndex],\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex].blur();\n    self.openChildren[rowIndex].dispose();\n    delete self.openChildren[rowIndex];\n    delete self.sizes.trees[rowIndex];\n    delete self.childGrids[rowIndex];\n    self.dispatchEvent('resizerow', {\n      cellHeight: self.style.cellHeight,\n    });\n    self.resize(true);\n    self.draw(true);\n  };\n  /**\n   * Expands a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name expandTree\n   * @method\n   * @param {number} index The index of the row to expand.\n   */\n  self.expandTree = function (rowIndex) {\n    var trArgs = self.args.treeGridAttributes || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth =\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\n      treeGrid;\n    if (!self.childGrids[rowIndex]) {\n      trArgs.debug = self.attributes.debug;\n      trArgs.name = self.attributes.saveAppearance\n        ? self.attributes.name + 'tree' + rowIndex\n        : undefined;\n      trArgs.style = trArgs.style || self.style;\n      trArgs.parentNode = {\n        parentGrid: self.intf,\n        nodeType: 'canvas-datagrid-tree',\n        offsetHeight: h,\n        offsetWidth: self.width - rowHeaderCellWidth,\n        header: { width: self.width - rowHeaderCellWidth },\n        offsetLeft: rowHeaderCellWidth,\n        offsetTop: columnHeaderCellHeight,\n        offsetParent: self.intf.parentNode,\n        parentNode: self.intf.parentNode,\n        style: 'tree',\n        data: self.viewData[rowIndex],\n      };\n      treeGrid = self.createGrid(trArgs);\n      self.childGrids[rowIndex] = treeGrid;\n    }\n    treeGrid = self.childGrids[rowIndex];\n    treeGrid.visible = true;\n    self.dispatchEvent('expandtree', {\n      treeGrid: treeGrid,\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex] = treeGrid;\n    self.sizes.trees[rowIndex] = h;\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\n    self.resize(true);\n  };\n  /**\n   * Toggles tree grid open and close by row index.\n   * @memberof canvasDatagrid\n   * @name toggleTree\n   * @method\n   * @param {number} index The index of the row to toggle.\n   */\n  self.toggleTree = function (rowIndex) {\n    var i = self.openChildren[rowIndex];\n    if (i) {\n      return self.collapseTree(rowIndex);\n    }\n    self.expandTree(rowIndex);\n  };\n  /**\n   * Returns a header from the schema by name.\n   * @memberof canvasDatagrid\n   * @name getHeaderByName\n   * @tutorial schema\n   * @method\n   * @returns {header} header with the selected name, or undefined.\n   * @param {string} name The name of the column to resize.\n   */\n  self.getHeaderByName = function (name) {\n    var x,\n      i = self.getSchema();\n    for (x = 0; x < i.length; x += 1) {\n      if (i[x].name === name) {\n        return i[x];\n      }\n    }\n  };\n  /**\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\n   * @memberof canvasDatagrid\n   * @name fitColumnToValues\n   * @method\n   * @param {string} name The name of the column to resize.\n   */\n  self.fitColumnToValues = function (name, internal) {\n    if (!self.canvas) {\n      return;\n    }\n    self.sizes.columns[\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\n    if (!internal) {\n      self.resize();\n      self.draw(true);\n    }\n  };\n  /**\n   * Checks if a cell is currently visible.\n   * @memberof canvasDatagrid\n   * @name isCellVisible\n   * @overload\n   * @method\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\n   * @param {number} columnIndex The column index of the cell to check.\n   * @param {number} rowIndex The row index of the cell to check.\n   */\n  self.isCellVisible = function (cell, rowIndex) {\n    // overload\n    if (rowIndex !== undefined) {\n      return (\n        self.visibleCells.filter(function (c) {\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\n        }).length > 0\n      );\n    }\n    var x,\n      l = self.visibleCells.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        cell.x === self.visibleCells[x].x &&\n        cell.y === self.visibleCells[x].y\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Sets the order of the data.\n   * @memberof canvasDatagrid\n   * @name order\n   * @method\n   * @param {number} columnName Name of the column to be sorted.\n   * @param {string} direction `asc` for ascending or `desc` for descending.\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\n   */\n  self.order = function (\n    columnName,\n    direction,\n    sortFunction,\n    dontSetStorageData,\n  ) {\n    var f,\n      c = self.getSchema().filter(function (col) {\n        return col.name === columnName;\n      });\n    if (\n      self.dispatchEvent('beforesortcolumn', {\n        name: columnName,\n        direction: direction,\n      })\n    ) {\n      return;\n    }\n    self.orderBy = columnName;\n    self.orderDirection = direction;\n    if (!self.viewData || self.viewData.length === 0) {\n      return;\n    }\n    if (c.length === 0) {\n      throw new Error('Cannot sort.  No such column name');\n    }\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\n    if (!f && c[0].type !== undefined) {\n      console.warn(\n        'Cannot sort type \"%s\" falling back to string sort.',\n        c[0].type,\n      );\n    }\n    self.orderings.add(\n      columnName,\n      direction,\n      typeof f === 'function' ? f : self.sorters.string,\n    );\n    self.refresh();\n    self.dispatchEvent('sortcolumn', {\n      name: columnName,\n      direction: direction,\n    });\n\n    if (dontSetStorageData) {\n      return;\n    }\n    self.setStorageData();\n  };\n  self.isInGrid = function (e) {\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\n   * @memberof canvasDatagrid\n   * @name moveSelection\n   * @method\n   * @param {number} offsetX The number of columns to offset the selection.\n   * @param {number} offsetY The number of rows to offset the selection.\n   */\n  self.moveSelection = function (offsetX, offsetY) {\n    var sel = [];\n    self.selections.forEach(function (row, rowIndex) {\n      sel[rowIndex + offsetY] = [];\n      row.forEach(function (colIndex) {\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\n      });\n    });\n    self.selections = sel;\n  };\n  /**\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\n   * @memberof canvasDatagrid\n   * @name moveTo\n   * @method\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\n   * @param {number} x The column index to start inserting the selection at.\n   * @param {number} y The row index to start inserting the selection at.\n   */\n  self.moveTo = function (sel, x, y) {\n    var selectedData = self.getSelectedData(),\n      visibleSchema = self.getVisibleSchema(),\n      selectionLength = sel.length,\n      xi,\n      maxRowLength = -Infinity,\n      minXi = Infinity,\n      yi = y - 1;\n\n    sel.forEach(function (row, rowIndex) {\n      if (rowIndex === selectionLength) {\n        return;\n      }\n      if (row.length === 0) {\n        return;\n      }\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\n      maxRowLength = Math.max(maxRowLength, row.length);\n      row.forEach(function (colIndex) {\n        // intentional redef of colIndex\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (!visibleSchema[colIndex]) {\n          return;\n        }\n        // TODO:\n        if (!self.data[rowIndex]) {\n          self.data[rowIndex] = {};\n        }\n        // TODO:\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\n      });\n    });\n\n    sel.forEach(function (row, index) {\n      var lastSourceIndex;\n      yi += 1;\n      xi = self.getVisibleColumnIndexOf(x);\n      row.forEach(function (colIndex, cidx) {\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (cidx > 0) {\n          // this confusing bit of nonsense figures out\n          // if the selection has skipped cells\n          xi += colIndex - lastSourceIndex;\n        }\n        lastSourceIndex = colIndex;\n        if (\n          colIndex === -1 ||\n          !visibleSchema[xi] ||\n          !visibleSchema[colIndex] ||\n          // TODO:\n          self.data.length - 1 < yi ||\n          yi < 0\n        ) {\n          return;\n        }\n        // TODO:\n        if (!self.data[yi]) {\n          self.data[yi] = {};\n        }\n        // TODO:\n        self.data[yi][visibleSchema[xi].name] =\n          selectedData[index][visibleSchema[colIndex].name];\n      });\n    });\n  };\n  /**\n   * Checks if a given column is visible.\n   * @memberof canvasDatagrid\n   * @name isColumnVisible\n   * @method\n   * @returns {boolean} When true, the column is visible.\n   * @param {number} columnIndex Column index.\n   */\n  self.isColumnVisible = function (columnIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.columnIndex === columnIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Checks if a given row is visible.\n   * @memberof canvasDatagrid\n   * @name isRowVisible\n   * @method\n   * @returns {boolean} When true, the row is visible.\n   * @param {number} rowIndex Row index.\n   */\n  self.isRowVisible = function (rowIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.rowIndex === rowIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Gets the cell at columnIndex and rowIndex.\n   * @memberof canvasDatagrid\n   * @name getVisibleCellByIndex\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Column index.\n   * @param {number} y Row index.\n   */\n  self.getVisibleCellByIndex = function (x, y) {\n    return self.visibleCells.filter(function (c) {\n      return c.columnIndex === x && c.rowIndex === y;\n    })[0];\n  };\n  /**\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\n   * @memberof canvasDatagrid\n   * @name getCellAt\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Number of pixels from the left.\n   * @param {number} y Number of pixels from the top.\n   */\n  self.getCellAt = function (x, y, useTouchScrollZones) {\n    function getBorder(entitiy) {\n      if (\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\n          x &&\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'r';\n      }\n      if (\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'l';\n      }\n      if (\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\n          y &&\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 'b';\n      }\n      if (\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 't';\n      }\n    }\n    if (!self.visibleCells) {\n      return;\n    }\n    var border,\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\n      moveMode = self.attributes.borderDragBehavior === 'move',\n      i,\n      l = self.visibleCells.length,\n      moveBorder,\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\n      cell,\n      entitiy;\n    if (!self.visibleCells || !self.visibleCells.length) {\n      return;\n    }\n    self.hasFocus = true;\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\n      self.hasFocus = false;\n      return {\n        dragContext: 'inherit',\n        context: 'inherit',\n      };\n    }\n    for (i = 0; i < l; i += 1) {\n      cell = self.visibleCells[i];\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\n      entitiy = {\n        x: cell.x,\n        y: cell.y,\n        height: cell.height,\n        width: cell.width,\n      };\n      if (\n        useTouchScrollZones &&\n        /(vertical|horizontal)-scroll-/.test(cell.style)\n      ) {\n        entitiy.x -= tsz;\n        entitiy.y -= tsz;\n        entitiy.height += tsz;\n        entitiy.width += tsz;\n      }\n      if (\n        entitiy.x - self.style.cellBorderWidth < x &&\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\n        entitiy.y - self.style.cellBorderWidth < y &&\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\n      ) {\n        if (/frozen-row-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'row-resize';\n          return cell;\n        }\n        if (/frozen-column-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'col-resize';\n          return cell;\n        }\n        if (/selection-handle-/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'crosshair';\n          return cell;\n        }\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'vertical-scroll-box';\n          cell.context = 'vertical-scroll-box';\n          cell.isScrollBar = true;\n          cell.isVerticalScrollBar = true;\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\n            cell.dragContext = 'vertical-scroll-bottom';\n            cell.context = 'vertical-scroll-bottom';\n          } else if (y < self.scrollBox.box.v.y) {\n            cell.dragContext = 'vertical-scroll-top';\n            cell.context = 'vertical-scroll-top';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'horizontal-scroll-box';\n          cell.context = 'horizontal-scroll-box';\n          cell.isScrollBar = true;\n          cell.isHorizontalScrollBar = true;\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\n            cell.dragContext = 'horizontal-scroll-right';\n            cell.context = 'horizontal-scroll-right';\n          } else if (x < self.scrollBox.box.h.x) {\n            cell.dragContext = 'horizontal-scroll-left';\n            cell.context = 'horizontal-scroll-left';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        border = getBorder(entitiy);\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\n        moveBorder =\n          moveMode &&\n          cell.selectionBorder &&\n          cell.selectionBorder.indexOf(border) !== -1;\n        if (\n          ['l', 'r'].indexOf(border) !== -1 &&\n          (self.attributes.allowColumnResize || moveBorder) &&\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          ((self.attributes.allowRowHeaderResize &&\n            (cell.isRowHeader || cell.isCorner)) ||\n            !(cell.isRowHeader && cell.isCorner))\n        ) {\n          if (\n            (cell.isColumnHeader ||\n              cell.isCorner ||\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\n            border === 'r'\n          ) {\n            cell.context = 'ew-resize';\n            cell.dragContext = 'ew-resize';\n            return cell;\n          }\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\n            cell.context = xBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (\n          ['t', 'b'].indexOf(border) !== -1 &&\n          cell.rowIndex > -1 &&\n          (self.attributes.allowRowResize || moveBorder) &&\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          !cell.isColumnHeader\n        ) {\n          if (\n            (cell.isRowHeader ||\n              cell.isCorner ||\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\n            border === 'b'\n          ) {\n            cell.context = 'ns-resize';\n            cell.dragContext = 'ns-resize';\n            return cell;\n          }\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\n            cell.context = yBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (cell.style === 'columnHeaderCell') {\n          cell.context = 'cell';\n          cell.dragContext = 'column-reorder';\n          return cell;\n        }\n        if (cell.style === 'rowHeaderCell') {\n          if (\n            self.attributes.rowGrabZoneSize +\n              (cell.y - self.style.cellBorderWidth) <\n              y ||\n            !self.attributes.allowRowReordering\n          ) {\n            cell.dragContext = 'cell';\n            cell.context = 'cell';\n          } else {\n            cell.context = self.cursorGrab;\n            cell.dragContext = 'row-reorder';\n          }\n          return cell;\n        }\n        if (cell.isGrid) {\n          self.hasFocus = false;\n          cell.dragContext = 'cell-grid';\n          cell.context = 'cell-grid';\n          return cell;\n        }\n        if (cell.style === 'tree-grid') {\n          self.hasFocus = false;\n          cell.dragContext = 'tree';\n          cell.context = 'tree';\n          return cell;\n        }\n        cell.dragContext = 'cell';\n        cell.context = 'cell';\n        return cell;\n      }\n    }\n    self.hasFocus = true;\n    self.cursor = 'default';\n    return {\n      dragContext: 'background',\n      context: 'background',\n      style: 'background',\n      isBackground: true,\n    };\n  };\n  /**\n   * Gets the bounds of current selection.\n   * @returns {rect} selection.\n   * @memberof canvasDatagrid\n   * @name getSelectionBounds\n   * @method\n   */\n  self.getSelectionBounds = function () {\n    var low = { x: Infinity, y: Infinity },\n      high = { x: -Infinity, y: -Infinity };\n    self.selections.forEach(function (row, rowIndex) {\n      var maxCol, minCol;\n      low.y = rowIndex < low.y ? rowIndex : low.y;\n      high.y = rowIndex > high.y ? rowIndex : high.y;\n      maxCol = Math.max.apply(null, row);\n      minCol = Math.min.apply(null, row);\n      low.x = minCol < low.x ? minCol : low.x;\n      high.x = maxCol > high.x ? maxCol : high.x;\n    });\n    return {\n      top: low.y,\n      left: low.x,\n      bottom: high.y,\n      right: high.x,\n    };\n  };\n  /**\n   * Returns an auto generated schema based on data structure.\n   * @memberof canvasDatagrid\n   * @name getSchemaFromData\n   * @method\n   * @tutorial schema\n   * @returns {schema} schema A schema based on the first item in the data array.\n   */\n  self.getSchemaFromData = function (d) {\n    d = d || self.originalData;\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\n      key,\n      index,\n    ) {\n      var type = self.getBestGuessDataType(key, d),\n        i = {\n          name: key,\n          title: isNaN(parseInt(key, 10))\n            ? key\n            : self.integerToAlpha(key).toUpperCase(),\n          index: index,\n          columnIndex: index,\n          type: type,\n          filter: self.filter(type),\n        };\n      if (\n        self.storedSettings &&\n        self.storedSettings.visibility &&\n        self.storedSettings.visibility[i.name] !== undefined\n      ) {\n        i.hidden = !self.storedSettings.visibility[i.name];\n      }\n      return i;\n    });\n  };\n  /**\n   * Clears the change log grid.changes that keeps track of changes to the data set.\n   * This does not undo changes or alter data it is simply a convince array to keep\n   * track of changes made to the data since last this method was called.\n   * @memberof canvasDatagrid\n   * @name clearChangeLog\n   * @method\n   */\n  self.clearChangeLog = function () {\n    self.changes = [];\n  };\n  /**\n   * Selects an area of the grid.\n   * @memberof canvasDatagrid\n   * @name selectArea\n   * @method\n   * @param {rect} bounds A rect object representing the selected values.\n   */\n  self.selectArea = function (bounds, ctrl) {\n    self.selectionBounds = bounds || self.selectionBounds;\n    var ev,\n      x,\n      y,\n      s = self.getSchema();\n    if (!ctrl) {\n      self.selections = [];\n    }\n    if (\n      self.selectionBounds.top < -1 ||\n      self.selectionBounds.bottom > self.viewData.length ||\n      self.selectionBounds.left < -1 ||\n      self.selectionBounds.right > s.length\n    ) {\n      throw new Error('Impossible selection area');\n    }\n    for (\n      x = self.selectionBounds.top;\n      x <= self.selectionBounds.bottom;\n      x += 1\n    ) {\n      self.selections[x] = [];\n      for (\n        y = self.selectionBounds.left;\n        y <= self.selectionBounds.right;\n        y += 1\n      ) {\n        if (self.selections[x].indexOf(y) === -1) {\n          self.selections[x].push(y);\n        }\n      }\n    }\n    ev = {\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    };\n    Object.defineProperty(ev, 'selectedData', {\n      get: function () {\n        return self.getSelectedData();\n      },\n    });\n    self.dispatchEvent('selectionchanged', ev);\n  };\n  /**\n   * Returns the maximum text width for a given column by column name.\n   * @memberof canvasDatagrid\n   * @name findColumnMaxTextLength\n   * @method\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\n   * @param {string} name The name of the column to calculate the value's width of.\n   */\n  self.findColumnMaxTextLength = function (name) {\n    var m = -Infinity;\n    if (name === 'cornerCell') {\n      self.ctx.font = self.style.rowHeaderCellFont;\n      return (\n        self.ctx.measureText(\n          (\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\n          ).toString(),\n        ).width +\n        self.style.autosizePadding +\n        self.style.autosizeHeaderCellPadding +\n        self.style.rowHeaderCellPaddingRight +\n        self.style.rowHeaderCellPaddingLeft +\n        (self.attributes.tree\n          ? self.style.treeArrowWidth +\n            self.style.treeArrowMarginLeft +\n            self.style.treeArrowMarginRight\n          : 0)\n      );\n    }\n    var formatter = null;\n    self.getSchema().forEach(function (col) {\n      if (col.name !== name) {\n        return;\n      }\n      self.ctx.font = self.style.columnHeaderCellFont;\n      var t =\n        self.ctx.measureText(col.title || col.name).width +\n        self.style.headerCellPaddingRight +\n        self.style.headerCellPaddingLeft;\n      m = t > m ? t : m;\n      formatter = self.formatters[col.type];\n    });\n    self.viewData.forEach(function (row) {\n      var text = row[name];\n      if (formatter) {\n        text = formatter({ cell: { value: text } });\n      }\n      self.ctx.font = self.style.cellFont;\n      var t =\n        self.ctx.measureText(text).width +\n        self.style.cellPaddingRight +\n        self.style.cellPaddingLeft +\n        self.style.cellAutoResizePadding;\n      m = t > m ? t : m;\n    });\n    return m;\n  };\n  /**\n   * Gets the total width of all header columns.\n   * @memberof canvasDatagrid\n   * @name getHeaderWidth\n   * @method\n   */\n  self.getHeaderWidth = function () {\n    return self.getVisibleSchema().reduce(function (total, header) {\n      return total + parseInt(header.width || self.style.cellWidth, 10);\n    }, 0);\n  };\n  /**\n   * Gets the height of a row by index.\n   * @memberof canvasDatagrid\n   * @name getRowHeight\n   * @method\n   * @param {number} rowIndex The row index to lookup.\n   */\n  self.getRowHeight = function (rowIndex) {\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\n  };\n  /**\n   * Gets the width of a column by index.\n   * @memberof canvasDatagrid\n   * @name getColummnWidth\n   * @method\n   * @param {number} columnIndex The column index to lookup.\n   */\n  self.getColummnWidth = function (columnIndex) {\n    return (\n      (self.sizes.columns[columnIndex] ||\n        self.getSchema()[columnIndex].width ||\n        self.style.cellWidth) * self.scale\n    );\n  };\n  self.formatters.string = function cellFormatterString(e) {\n    return e.cell.value !== undefined ? e.cell.value : '';\n  };\n  self.formatters.rowHeaderCell = self.formatters.string;\n  self.formatters.headerCell = self.formatters.string;\n  self.formatters.number = self.formatters.string;\n  self.formatters.int = self.formatters.string;\n  self.formatters.html = self.formatters.string;\n  self.sorters.string = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (a[columnName] === undefined || a[columnName] === null) {\n        return 1;\n      }\n      if (b[columnName] === undefined || b[columnName] === null) {\n        return 0;\n      }\n      if (asc) {\n        if (!a[columnName].localeCompare) {\n          return 1;\n        }\n        return a[columnName].localeCompare(b[columnName]);\n      }\n      if (!b[columnName].localeCompare) {\n        return 1;\n      }\n      return b[columnName].localeCompare(a[columnName]);\n    };\n  };\n  self.sorters.number = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return a[columnName] - b[columnName];\n      }\n      return b[columnName] - a[columnName];\n    };\n  };\n  self.sorters.date = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return (\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\n        );\n      }\n      return (\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\n      );\n    };\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport component from './component';\nimport defaults from './defaults';\nimport draw from './draw';\nimport events from './events';\nimport touch from './touch';\nimport intf from './intf';\nimport contextMenu from './contextMenu';\nimport dom from './dom';\nimport publicMethods from './publicMethods';\n\nvar webComponent = component();\n\nvar modules = [\n  defaults,\n  draw,\n  events,\n  touch,\n  intf,\n  contextMenu,\n  dom,\n  publicMethods,\n];\n\nfunction Grid(args) {\n  args = args || {};\n  var self = {};\n  self.isComponent = args.component === undefined;\n  self.isChildGrid =\n    args.parentNode &&\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\n  if (self.isChildGrid) {\n    self.intf = {};\n  } else {\n    self.intf = self.isComponent\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\n      : document.createElement('canvas');\n  }\n  self.args = args;\n  self.intf.args = args;\n  self.applyComponentStyle = webComponent.applyComponentStyle;\n  self.hyphenateProperty = webComponent.hyphenateProperty;\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\n  self.createGrid = function grid(args) {\n    args.component = false;\n    return new Grid(args);\n  };\n\n  modules.forEach(function (module) {\n    module(self);\n  });\n\n  if (self.isChildGrid) {\n    self.shadowRoot = args.parentNode.shadowRoot;\n    self.parentNode = args.parentNode;\n  } else {\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\n    self.parentNode = self.shadowRoot;\n  }\n  self.init();\n  return self.intf;\n}\nif (window.HTMLElement) {\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\n}\n// export web component\nif (window.customElements) {\n  Grid.observedAttributes = webComponent.getObservableAttributes();\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\n  Grid.prototype.attributeChangedCallback =\n    webComponent.attributeChangedCallback;\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\n  window.customElements.define('canvas-datagrid', Grid);\n}\n\n// export global\nif (\n  window &&\n  !window.canvasDatagrid &&\n  !window.require &&\n  // Present to exclude global declarations from ES Module bundles\n  !window.EXCLUDE_GLOBAL\n) {\n  window.canvasDatagrid = function (args) {\n    return new Grid(args);\n  };\n}\n\n// export amd loader\nexport default function canvasDatagrid(args) {\n  args = args || {};\n  var i,\n    tKeys = [\n      'style',\n      'formatters',\n      'sorters',\n      'filters',\n      'treeGridAttributes',\n      'cellGridAttributes',\n      'data',\n      'schema',\n    ];\n  if (window.customElements) {\n    i = document.createElement('canvas-datagrid');\n    Object.keys(args).forEach(function (argKey) {\n      // set data and parentNode after everything else\n      if (argKey === 'data') {\n        return;\n      }\n      if (argKey === 'parentNode') {\n        return;\n      }\n      // top level keys in args\n      if (tKeys.indexOf(argKey) !== -1) {\n        tKeys.forEach(function (tKey) {\n          if (args[tKey] === undefined || tKey !== argKey) {\n            return;\n          }\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\n              Object.keys(args[tKey]).forEach(function (sKey) {\n                i[tKey][sKey] = args[tKey][sKey];\n              });\n            }\n          } else {\n            i[tKey] = args[tKey];\n          }\n        });\n        return;\n      }\n      // all others are attribute level keys\n      i.attributes[argKey] = args[argKey];\n    });\n    if (args.data) {\n      i.data = args.data;\n    }\n    // add to the dom very last to avoid redraws\n    if (args.parentNode) {\n      args.parentNode.appendChild(i);\n    }\n    return i;\n  }\n  args.component = false;\n  i = new Grid(args);\n  if (args.parentNode && args.parentNode.appendChild) {\n    args.parentNode.appendChild(i);\n  }\n  return i;\n}\n","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useControlledState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _React$useState = React.useState(function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerValue = _React$useState2[0],\n      setInnerValue = _React$useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  }\n\n  function triggerChange(newValue) {\n    setInnerValue(newValue);\n\n    if (mergedValue !== newValue && onChange) {\n      onChange(newValue, mergedValue);\n    }\n  } // Effect of reset value to `undefined`\n\n\n  var firstRenderRef = React.useRef(true);\n  React.useEffect(function () {\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n      return;\n    }\n\n    if (value === undefined) {\n      setInnerValue(value);\n    }\n  }, [value]);\n  return [mergedValue, triggerChange];\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}