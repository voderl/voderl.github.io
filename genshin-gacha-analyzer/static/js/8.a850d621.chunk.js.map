{"version":3,"sources":["components/CanvasDataGrid.tsx","components/WorkSheet.tsx","pages/ShowPage/Timeline/getDateInfo.ts","pages/ShowPage/Timeline/CollapseWorkSheet.tsx","pages/ShowPage/Timeline/index.tsx"],"names":["CanvasDataGrid","data","schema","attributes","onCreate","props","divEl","useRef","gridRef","useEffect","current","grid","canvasDataGrid","parentNode","style","scrollBarBoxWidth","scrollBarWidth","dispose","ref","editable","allowColumnResize","allowRowResize","orderBy","WorkSheet","handleCreate","useCallback","node","window","filters","number","value","filterFor","oldStringSorter","sorters","string","columnName","direction","sortTime","sortCount","l","r","info","addEventListener","e","star","row","ctx","fillStyle","height","margin","css","format","date","mouth","getMonth","day","getDate","getFullYear","Panel","Collapse","CollapseWorkSheet","onGetData","useState","isCollapsed","setCollapsed","handleCreateGrid","orderDirection","getData","endIndex","allData","SHOW_DATA_ALL_KEY","dayStart","Date","dayEnd","startIndex","findIndex","i","length","slice","handleChange","key","activeKey","onChange","header","SCHEMA_ALL","echarts","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","DataZoomComponent","CanvasRenderer","BarChart","Timeline","echartsWrapper","myChartRef","hideZeroDay","setHideZeroDay","currentday","setCurrentDay","useMemo","memoize","isHideZeroDay","countByDay","getDay","Array","isArray","dateList","begin","end","arr","str_b","split","str_e","date_b","setUTCFullYear","date_e","unixDb","getTime","unixDe","j","push","parseInt","getDateInfo","map","addToList","existFiveStar","count","itemStyle","color","len","时间","星级","calculateData","myChart","options","tooltip","trigger","position","pt","title","left","text","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","type","boundaryGap","yAxis","start","series","name","setOption","on","params","handleChangeSwitch","checked","message","banner","showIcon"],"mappings":"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","file":"static/js/8.a850d621.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { FC, useEffect, useRef } from 'react';\n// @ts-ignore\nimport canvasDataGrid from 'canvas-datagrid';\n\ntype CanvasDataGridProps = {\n  onCreate?: (grid: any) => void; // 获取最初的参数\n  attributes?: {\n    [key: string]: any;\n  };\n  data: Array<any> | undefined;\n  schema?: Array<any>;\n};\nexport const CanvasDataGrid: FC<\n  CanvasDataGridProps & React.HTMLAttributes<HTMLDivElement>\n> = function ({ data, schema, attributes, onCreate, ...props }) {\n  const divEl = useRef(null);\n  const gridRef = useRef(null);\n  // TODO: ADD go_to_top_button and bottom button\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).schema = schema;\n    }\n  }, [schema]);\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).data = data;\n    }\n  }, [data]);\n  useEffect(() => {\n    const grid = canvasDataGrid({\n      parentNode: divEl.current,\n      schema: schema,\n      data: data,\n      ...attributes,\n    });\n    grid.style.scrollBarBoxWidth = 10;\n    grid.style.scrollBarWidth = 13;\n    onCreate && onCreate(grid);\n    gridRef.current = grid;\n    return () => {\n      grid.dispose();\n    };\n  }, []);\n  return <div ref={divEl} {...props} />;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { CanvasDataGrid } from './CanvasDataGrid';\n\ntype WorkSheetProps = {\n  data: Array<any>;\n  schema: SchemaType;\n  onCreate?: (grid: any) => void;\n};\n\ntype SchemaType = Array<{\n  name?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  hidden?: boolean;\n  filter?: (e: any) => boolean;\n  formatter?: (e: any) => any;\n  defaultValue?: any;\n}>;\n\nconst attributes = {\n  editable: false,\n  allowColumnResize: false,\n  allowRowResize: false,\n  orderBy: '时间',\n};\nexport const WorkSheet: FC<WorkSheetProps> = function ({ data, schema, onCreate }) {\n  const handleCreate = useCallback((node: any) => {\n    (window as any).node = node;\n    // fix filter number:\n    node.filters.number = function (value: any, filterFor: any) {\n      if (!filterFor) {\n        return true;\n      }\n      return value == filterFor;\n    };\n    const oldStringSorter = node.sorters.string;\n    // sortBy 时间\n    node.sorters.string = function (columnName: string, direction: string) {\n      if (columnName === '时间') {\n        const sortTime = oldStringSorter(columnName, direction);\n        const sortCount = node.sorters.number('总次数', direction);\n        return (l: any, r: any) => {\n          const info = sortTime(l, r);\n          return info === 0 ? sortCount(l, r) : info;\n        };\n      } else return oldStringSorter(columnName, direction);\n    };\n    // render color:\n    node.addEventListener('rendertext', function (e: any) {\n      const star = e.row['星级'];\n      if (star === 4) {\n        e.ctx.fillStyle = '#A256E1';\n      } else if (star === 5) {\n        e.ctx.fillStyle = '#BD6932';\n      }\n    });\n    node.style.height = '100%';\n    node.style.margin = '0 auto';\n    onCreate && onCreate(node);\n  }, []);\n  return (\n    <CanvasDataGrid\n      css={css`\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow-y: hidden;\n        overflow-x: auto;\n        margin-bottom: 20px;\n        border-bottom: 2px dotted thistle;\n      `}\n      onCreate={handleCreate}\n      data={data}\n      schema={schema}\n      attributes={attributes}\n    />\n  );\n};\n","function format(date: Date) {\n  var mouth = date.getMonth() + 1 >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1);\n  var day = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate();\n  return date.getFullYear() + '-' + mouth + '-' + day; // 返回 “年-月-日”格式\n}\n\nexport function getDateInfo(begin: string, end: string) {\n  var arr = [];\n  var str_b = begin.split('-');\n  var str_e = end.split('-');\n  var date_b = new Date();\n  // @ts-ignore\n  date_b.setUTCFullYear(str_b[0], str_b[1] - 1, str_b[2]);\n  var date_e = new Date();\n  // @ts-ignore\n  date_e.setUTCFullYear(str_e[0], str_e[1] - 1, str_e[2]);\n  var unixDb = date_b.getTime();\n  var unixDe = date_e.getTime();\n  for (var j = unixDb; j <= unixDe; ) {\n    arr.push(format(new Date(parseInt(j as any))));\n    j = j + 24 * 60 * 60 * 1000;\n  }\n  return arr;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n// @ts-ignore\nimport { Collapse } from 'antd';\nimport { WorkSheet } from 'components/WorkSheet';\nimport { SCHEMA_ALL, SHOW_DATA_ALL_KEY } from 'const';\nimport { Data } from 'types';\n\nconst { Panel } = Collapse;\n\ntype CollapseWorkSheetProps = {\n  day: string;\n  onGetData: (key: string) => any;\n};\nexport const CollapseWorkSheet: FC<CollapseWorkSheetProps> = function ({ day, onGetData }) {\n  const [isCollapsed, setCollapsed] = useState(true);\n  const handleCreateGrid = useCallback((grid) => {\n    grid.orderBy = '星级';\n    grid.orderDirection = 'desc'; /// descending order;\n  }, []);\n  const getData = useCallback((day) => {\n    const allData: Data = onGetData(SHOW_DATA_ALL_KEY);\n    const dayStart = +new Date(`${day} 00:00:00`);\n    const dayEnd = dayStart + 3600 * 24 * 1000;\n    const startIndex = allData.findIndex((data) => data.date >= dayStart);\n    let endIndex;\n    for (let i = startIndex; i < allData.length; i++) {\n      if (allData[i].date >= dayEnd) {\n        endIndex = i;\n        break;\n      }\n    }\n    return allData.slice(startIndex, endIndex);\n  }, []);\n  const handleChange = useCallback((key: any) => {\n    if (key.length === 1) setCollapsed(false);\n    else setCollapsed(true);\n  }, []);\n  return (\n    <Collapse\n      activeKey={isCollapsed ? '' : '1'}\n      onChange={handleChange}\n      css={css`\n        margin-top: 12px;\n        .ant-collapse-content-box {\n          background: #f0f2f5;\n        }\n      `}\n    >\n      <Panel header={'点击展开 ' + day + ' 数据'} key='1'>\n        <div\n          css={css`\n            width: 100%;\n            height: 500px;\n          `}\n        >\n          {!isCollapsed && (\n            <WorkSheet data={getData(day)} schema={SCHEMA_ALL} onCreate={handleCreateGrid} />\n          )}\n        </div>\n      </Panel>\n    </Collapse>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n} from 'echarts/components';\nimport { BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ECharts } from 'echarts/core';\nimport { Data } from 'types';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { Alert, Switch } from 'antd';\nimport memoize from 'lodash/memoize';\nimport { getDateInfo } from './getDateInfo';\nimport { CollapseWorkSheet } from './CollapseWorkSheet';\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n  CanvasRenderer,\n  BarChart,\n]);\ntype TimelineProps = {\n  onGetData: (key: string) => Data;\n};\nfunction calculateData(data: Data) {\n  const countByDay: Array<any> = [];\n  function addToList(current: { count: number; day: string; existFiveStar: boolean }) {\n    if (current.existFiveStar) {\n      countByDay.push({\n        value: [current.day, current.count],\n        itemStyle: {\n          color: '#BD6932',\n        },\n      });\n    } else countByDay.push([current.day, current.count]);\n  }\n  const format = (index: number) => data[index].时间.slice(0, 10);\n  const initCurrent = () => ({\n    count: 0,\n    day: '',\n    existFiveStar: false,\n  });\n  let current = initCurrent();\n  for (let i = 0, len = data.length; i < len; i++) {\n    const day = format(i);\n    if (current.day === day) {\n      current.count += 1;\n    } else {\n      current.count && addToList(current);\n      current = initCurrent();\n      current.count += 1;\n      current.day = day;\n    }\n    if (!current.existFiveStar && data[i].星级 === 5) current.existFiveStar = true;\n  }\n  current.count && addToList(current);\n  return countByDay;\n}\nexport const Timeline: FC<TimelineProps> = function ({ onGetData }) {\n  const echartsWrapper = useRef<HTMLDivElement>(null);\n  const myChartRef = useRef<ECharts>();\n  const [hideZeroDay, setHideZeroDay] = useState(true);\n  const [currentday, setCurrentDay] = useState<string>();\n\n  // 获取数据，并写入缓存。\n  const getData = useMemo(() => {\n    let getData: any;\n    getData = memoize((isHideZeroDay: boolean) => {\n      if (!isHideZeroDay) {\n        const countByDay = getData(true);\n        // 如果中间日期需要显示\n        const getDay = (data: any) => (Array.isArray(data) ? data[0] : data.value[0]);\n        // 获取最开始一天和最后一天中间的日期\n        const dateList = getDateInfo(\n          getDay(countByDay[0]),\n          getDay(countByDay[countByDay.length - 1]),\n        ).map((day: string) => [day, 0]);\n        let j = 0;\n        for (let i = 0; i < countByDay.length; i++) {\n          const day = getDay(countByDay[i]);\n          while (day !== dateList[j][0]) {\n            j++;\n            if (j >= dateList.length) break;\n          }\n          dateList[j] = countByDay[i];\n        }\n        return dateList;\n      }\n      return calculateData(onGetData(SHOW_DATA_ALL_KEY));\n    });\n    return getData;\n  }, []);\n  useEffect(() => {\n    let myChart: ECharts;\n    if (echartsWrapper.current) {\n      myChart = echarts.init(echartsWrapper.current);\n      const options = {\n        tooltip: {\n          trigger: 'axis',\n          position: function (pt: any) {\n            return [pt[0], '10%'];\n          },\n        },\n        title: {\n          left: 'center',\n          text: '抽卡数据总览',\n        },\n        toolbox: {\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: false,\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 100,\n          },\n          {\n            start: 0,\n            end: 100,\n          },\n        ],\n        series: [\n          {\n            name: '当日抽卡次数',\n            type: 'bar',\n            data: getData(true),\n          },\n        ],\n      };\n      options && myChart.setOption(options);\n      myChart.on('click', function (params: any) {\n        setCurrentDay(params.name);\n      });\n      myChartRef.current = myChart;\n    }\n\n    return () => {\n      myChart && myChart.dispose();\n    };\n  }, []);\n  useEffect(() => {\n    if (myChartRef.current) {\n      myChartRef.current.setOption({\n        title: {\n          text: `抽卡数据总览(共${onGetData(SHOW_DATA_ALL_KEY).length}抽)`,\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n        },\n        series: [\n          {\n            name: '当日抽卡次数',\n            type: 'bar',\n            data: getData(hideZeroDay),\n          },\n        ],\n      });\n    }\n  }, [hideZeroDay]);\n  const handleChangeSwitch = useCallback((checked: boolean) => {\n    setHideZeroDay(!checked);\n  }, []);\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        position: absolute;\n      `}\n    >\n      <div\n        css={css`\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          background: #e6f7ff;\n          margin: 0 0 20px;\n          .ant-alert {\n            background: #e6f7ff;\n          }\n        `}\n      >\n        <Alert\n          message={<div>点击图中数据可以查看当天的抽卡记录</div>}\n          type='info'\n          banner\n          showIcon\n        />\n      </div>\n      <div>\n        显示没有抽卡的日期: <Switch checked={!hideZeroDay} onChange={handleChangeSwitch} />\n      </div>\n      <div\n        ref={echartsWrapper}\n        css={css`\n          width: 100%;\n          height: 500px;\n        `}\n      ></div>\n      {currentday && <CollapseWorkSheet onGetData={onGetData} day={currentday} />}\n    </div>\n  );\n};\n"],"sourceRoot":""}