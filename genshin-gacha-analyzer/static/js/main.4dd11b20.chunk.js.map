{"version":3,"sources":["context/GlobalContext.ts","pages/LoadPage.tsx","resource/achievement_achieved.png","resource/achievement_show.png","components/AchievementCard.tsx","pages/ShowPage/Achievements/achievements.ts","pages/ShowPage/Achievements/index.tsx","pages/ShowPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","const.ts"],"names":["GlobalContext","React","createContext","workbook","updateWorkbook","Dragger","Upload","LoadPage","onLoad","useState","loading","setLoading","errorMessage","setErrorMessage","loadingTip","setLoadingTip","useContext","handleUpload","useCallback","file","name","endsWith","reader","FileReader","onload","e","then","module","window","XLSX","data","Uint8Array","target","result","read","type","catch","onerror","readAsArrayBuffer","css","className","href","message","showIcon","banner","accept","multiple","beforeUpload","showUploadList","tip","AchievementCard","title","info","value","achievedTime","isAchieved","style","backgroundColor","src","AchievedPng","ShowPng","undefined","slice","replaceAll","defaultFormatter","count","formatTime","str","achievements","all","maxBy","Object","keys","cur","items","item","保底内","名称","时间","minBy","day","_day","values","today","length","point","percent","filter","星级","resultStr","format","cache","forEach","map","key","formatByName","join","Number","toFixed","waitTime","v","index","date","maxWaitTime","max","t","indexOf","fromTime","endTime","Math","floor","gacha","gacha10Count","reduce","acc","gacha1Count","maxGacha","character","sortedData","sort","b","a","maxNum","endIndex","findIndex","names","Achievements","allData","onGetData","SHOW_DATA_ALL_KEY","allAchievements","useMemo","weapon","10","1","walk","类别","currentDay","push","i","len","current","temp","func","props","Timeline","lazy","default","ShowData","Content","Layout","Sider","ShowPage","sheetNames","SheetNames","getJson","create","concat","总次数","sheet","Sheets","utils","sheet_to_json","pool","Date","activeMenu","setActiveMenu","handleMenuChange","renderContent","tabs","theme","width","height","mode","defaultSelectedKeys","onSelect","Item","fallback","size","App","WrappedApp","setWorkbook","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","SCHEMA","hidden","SCHEMA_ALL"],"mappings":"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","file":"static/js/main.4dd11b20.chunk.js","sourcesContent":["import React from 'react';\nimport { WorkBook } from 'xlsx/types';\n\ntype GlobalContextType = {\n  workbook: WorkBook | null;\n  updateWorkbook: (workbook: WorkBook) => void;\n};\n\nconst GlobalContext = React.createContext<GlobalContextType>({\n  workbook: null,\n  updateWorkbook: (() => {}) as any,\n});\n\nexport default GlobalContext;\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { FC, useCallback, useContext, useState } from 'react';\r\nimport { Button, Upload, Alert, Spin } from 'antd';\r\nimport InboxOutlined from '@ant-design/icons/InboxOutlined';\r\nimport { RcFile } from 'antd/lib/upload';\r\nimport GlobalContext from 'context/GlobalContext';\r\nimport XLSXNameSpace from 'xlsx/types';\r\n\r\nconst { Dragger } = Upload;\r\ntype LoadPageProps = {\r\n  onLoad?: () => void;\r\n};\r\n// 预加载\r\n// @ts-ignore\r\nimport('xlsx/dist/xlsx.full.min.js');\r\n\r\nexport const LoadPage: FC<LoadPageProps> = function ({ onLoad }) {\r\n  const [loading, setLoading] = useState<Boolean>(false);\r\n  const [errorMessage, setErrorMessage] = useState<String | null>(null);\r\n  const [loadingTip, setLoadingTip] = useState('加载中...');\r\n  const { updateWorkbook } = useContext(GlobalContext);\r\n  const handleUpload = useCallback((file: RcFile) => {\r\n    if (!file.name.endsWith('.xlsx')) {\r\n      setErrorMessage('文件类型错误，请上传xlsx文件');\r\n      return false;\r\n    }\r\n    setLoading(true);\r\n    const reader = new FileReader();\r\n    reader.onload = function (e: ProgressEvent<FileReader>) {\r\n      setLoadingTip('xlsx解析文件加载中...');\r\n      // @ts-ignore\r\n      import('xlsx/dist/xlsx.full.min.js')\r\n        .then((module) => {\r\n          (window as any).XLSX = module;\r\n          const XLSX: typeof XLSXNameSpace = module;\r\n          const data = new Uint8Array((e.target as FileReader).result as any);\r\n          const workbook = XLSX.read(data, { type: 'array' });\r\n          updateWorkbook(workbook);\r\n        })\r\n        .catch(() => {\r\n          setErrorMessage('XLSX解析文件加载失败，请重新上传');\r\n        });\r\n    };\r\n    reader.onerror = function (e: ProgressEvent<FileReader>) {\r\n      setErrorMessage('解析文件失败, 请重新上传');\r\n      setLoading(false);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n    return false;\r\n  }, []);\r\n  return (\r\n    <div\r\n      css={css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n      `}\r\n    >\r\n      <div\r\n        className='ant-alert-info'\r\n        css={css`\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n          border: none;\r\n          margin: 20px 0;\r\n        `}\r\n      >\r\n        <a href='https://ngabbs.com/read.php?tid=25004616' target='_blank'>\r\n          <Alert\r\n            message={\r\n              <div>\r\n                不知道如何获取xlsx文件？\r\n                <Button type='link'>请点击这里</Button>\r\n              </div>\r\n            }\r\n            type='info'\r\n            showIcon\r\n            banner\r\n          />\r\n        </a>\r\n      </div>\r\n      <Dragger\r\n        name='file'\r\n        accept='.xlsx'\r\n        multiple={false}\r\n        beforeUpload={handleUpload}\r\n        showUploadList={false}\r\n        css={css`\r\n          min-width: 600px;\r\n          padding: 40px;\r\n        `}\r\n      >\r\n        {errorMessage && <Alert message={errorMessage} type='error' />}\r\n        <p className='ant-upload-drag-icon'>\r\n          {loading ? <Spin tip={loadingTip} /> : <InboxOutlined />}\r\n        </p>\r\n        <p className='ant-upload-text'>点击选择文件或将文件拖拽到此区域</p>\r\n        <p className='ant-upload-text'>( 注：文件的后缀应为.xlsx )</p>\r\n      </Dragger>\r\n      <Alert\r\n        css={css`\r\n          margin: 20px 0;\r\n          width: 600px;\r\n        `}\r\n        message={\r\n          <div>\r\n            此网站是静态网站，你的文件不会被上传到网站后台，具体代码请查看\r\n            <Button\r\n              type='link'\r\n              href='https://github.com/voderl/genshin-gacha-analyzer'\r\n              target='_blank'\r\n            >\r\n              github链接\r\n            </Button>\r\n          </div>\r\n        }\r\n        type='warning'\r\n        showIcon\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/achievement_achieved.49d0cc2e.png\";","export default __webpack_public_path__ + \"static/media/achievement_show.b270d366.png\";","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport UnAchievedPng from 'resource/achievement_unachieve.png';\nimport AchievedPng from 'resource/achievement_achieved.png';\nimport ShowPng from 'resource/achievement_show.png';\n\nexport type AchievementCardProps = {\n  title: string;\n  info: string;\n  value?: string | number;\n  achievedTime?: string;\n};\n\nexport const AchievementCard: FC<AchievementCardProps> = function ({\n  title,\n  info,\n  value,\n  achievedTime,\n}) {\n  const isAchieved = !!achievedTime;\n  return (\n    <div\n      style={{\n        // backgroundColor: isAchieved ? '#ebe2d8' : '#f5f1eb',\n        backgroundColor: '#ebe2d8',\n      }}\n      css={css`\n        width: 100%;\n        max-width: 800px;\n        min-height: 119px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border: 2px solid #e0d6cb;\n        color: #bca895;\n        color: #a0907c;\n        font-size: 16px;\n        font-weight: 600;\n        margin: 4px auto;\n      `}\n    >\n      <img\n        src={/* isAchieved ? AchievedPng : UnAchievedPng */ AchievedPng}\n        css={css`\n          margin: 0 16px;\n          flex: 0 1;\n        `}\n      />\n      <div\n        css={css`\n          flex: 1 1;\n          padding: 12px 0;\n          p {\n            margin-bottom: 4px;\n          }\n        `}\n      >\n        <p\n          css={css`\n            color: #585757;\n            font-weight: bold;\n            font-size: 20px;\n          `}\n        >\n          {title}\n        </p>\n        <p>{info}</p>\n      </div>\n      {isAchieved ? (\n        <div\n          css={css`\n            width: 147px;\n            margin-left: 13px;\n            height: 119px;\n            flex: none;\n            background-image: url(${ShowPng});\n            display: flex;\n            flex-direction: column;\n            justify-content: flex-end;\n            align-items: center;\n          `}\n        >\n          <span\n            css={css`\n              font-size: 18px;\n            `}\n          >\n            {value === undefined ? '达成' : value}\n          </span>\n          <span\n            css={css`\n              padding: 12px 0 6px;\n              font-size: 18px;\n            `}\n          >\n            {(achievedTime as string).slice(0, 10).replaceAll('-', '/')}\n          </span>\n        </div>\n      ) : (\n        <div\n          css={css`\n            width: 160px;\n            height: 120px;\n            background-color: #ebe2d8;\n            text-align: center;\n          `}\n        >\n          <span\n            css={css`\n              line-height: 120px;\n              height: 120px;\n              font-size: 18px;\n            `}\n          >\n            {value}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Data, DataItem, Source } from 'types';\nimport maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport max from 'lodash/max';\nimport { AchievementCardProps } from 'components/AchievementCard';\n\n/*\n\nTODO: 是否是歪了up池，各个up池的持续时间 \n\n*/\nfunction toPercent(point: number) {\n  return Number(point * 100).toFixed(2) + '%';\n}\nconst defaultFormatter = (name: string, count: number) =>\n  `「${name}」` + (count === 1 ? '' : `×${count}`);\nfunction formatByName(data: Data, format = defaultFormatter) {\n  const cache: any = {};\n  data.forEach((item) => {\n    if (item.名称 in cache) cache[item.名称] += 1;\n    else cache[item.名称] = 1;\n  });\n  return Object.keys(cache).map((key) => format(key, cache[key]));\n}\nconst formatTime = (str: string) => str.slice(0, 10).replaceAll('-', '/');\nconst calculateTime = (t: number) => {\n  var d = Math.floor(t / 1000 / 60 / 60 / 24);\n  var h = Math.floor((t / 1000 / 60 / 60) % 24);\n  return d + ' 天' + h + ' 时';\n};\nexport const achievements: Array<(data: Source) => AchievementCardProps | false | void> = [\n  function maxGacha({ all }: Source) {\n    const name = maxBy(Object.keys(all[5]), (cur) => {\n      const items = all[5][cur].data;\n      return (maxBy(items, (item) => item.保底内) as DataItem).保底内;\n    });\n    if (!name) return false;\n    const item = maxBy(all[5][name].data, (item) => item.保底内);\n    if (!item) return false;\n    return {\n      title: '「原来非酋竟是我自己」',\n      info: `抽了 ${item.保底内} 次才最终抽到了「${item.名称}」`,\n      achievedTime: item.时间,\n      value: item.保底内,\n    };\n  },\n  function minGacha({ all }: Source) {\n    const name = minBy(Object.keys(all[5]), (cur) => {\n      const items = all[5][cur].data;\n      return (minBy(items, (item) => item.保底内) as DataItem).保底内;\n    });\n    if (!name) return false;\n    const item = minBy(all[5][name].data, (item) => item.保底内);\n    if (!item) return false;\n    return {\n      title: '「欧皇在世」',\n      info: `只抽了 ${item.保底内} 次就抽到了「${item.名称}」`,\n      achievedTime: item.时间,\n      value: item.保底内,\n    };\n  },\n  function maxGachaDay({ day, data }) {\n    const _day = maxBy(Object.values(day), (today) => today.data.length);\n    if (!_day) return false;\n    const percent = _day.data.length / data.length;\n    const result = _day.data.filter((item) => item.星级 === 5);\n    const resultStr =\n      result.length === 0 ? '' : `在抽到${formatByName(result).join('、')}时，你有没有很开心呢？`;\n    return {\n      title: '「豪掷千金」',\n      info: `在${formatTime(_day.data[0].时间)}这一天，你共抽取了 ${\n        _day.data.length\n      } 次，占总抽取次数的${toPercent(percent)}。${resultStr}`,\n      achievedTime: _day.data[0].时间,\n      value: _day.data.length,\n    };\n  },\n  function CangshuExpert({ data }) {\n    const waitTime = data.slice(1).map((v, index) => v.date - data[index].date);\n    if (waitTime.length === 0) return;\n    const maxWaitTime = max(waitTime as Array<number>);\n    if (!maxWaitTime) return;\n    const index = waitTime.indexOf(maxWaitTime);\n    const fromTime = data[index].时间,\n      endTime = data[index + 1].时间;\n    return {\n      title: '「仓鼠专家」',\n      info: `从${formatTime(fromTime)}到${formatTime(endTime)}, 你没有进行抽卡。`,\n      value: calculateTime(maxWaitTime),\n      achievedTime: endTime,\n    };\n  },\n  function oneGachaGetFiveStar({ gacha }) {\n    const gacha10Count = Object.values(gacha[10]).reduce((acc, cur) => {\n      return acc + cur.data.filter((v) => v.星级 === 5).length;\n    }, 0);\n    const gacha1Count = gacha[1].filter((v) => v.星级 === 5).length;\n    return {\n      title: '「单抽出奇迹？」',\n      info: `通过单抽获取的五星数目为${gacha1Count}, 通过十连获取的五星数目为${gacha10Count}。`,\n      value: `${gacha1Count}/${gacha1Count + gacha10Count}`,\n    };\n  },\n  function gacha10Data({ gacha }) {\n    const maxGacha = maxBy(gacha[10], (item) => {\n      return item.data.filter((v) => v.星级 === 5).length;\n    });\n    if (!maxGacha) return;\n    const count = maxGacha.data.filter((v) => v.星级 === 5).length;\n    return {\n      title: '「双黄蛋？」',\n      info: `一次十连中，你最多抽取到的五星数量为 ${count} 只`,\n      value: count,\n      achievedTime: maxGacha.data[0].时间,\n    };\n  },\n  function maxFiveStarCharacter({ character }) {\n    const sortedData = Object.values(character[5]).sort((b, a) => a.data.length - b.data.length);\n    const maxNum = sortedData[0].data.length;\n    const endIndex = sortedData.findIndex((v) => v.data.length !== maxNum);\n    const names = sortedData\n      .slice(0, endIndex)\n      .map((item) => defaultFormatter(item.data[0].名称, item.data.length));\n    return {\n      title: '「情有独钟(五星角色)」',\n      info: `你共抽取了 ${names.join('、')}，这是上天对你的眷顾还是你对${\n        names.length === 1 ? 'ta' : 'ta们'\n      }的情有独钟呢？`,\n    };\n  },\n  function maxFourStarCharacter({ character }) {\n    const sortedData = Object.values(character[4]).sort((b, a) => a.data.length - b.data.length);\n    const maxNum = sortedData[0].data.length;\n    const endIndex = sortedData.findIndex((v) => v.data.length !== maxNum);\n    const names = sortedData\n      .slice(0, endIndex)\n      .map((item) => defaultFormatter(item.data[0].名称, item.data.length));\n    return {\n      title: '「情有独钟(四星角色)」',\n      info: `你共抽取了 ${names.join('、')}，这是上天对你的眷顾还是你对${\n        names.length === 1 ? 'ta' : 'ta们'\n      }的情有独钟呢？`,\n    };\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { AchievementCard, AchievementCardProps } from 'components/AchievementCard';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport React, { FC, useMemo } from 'react';\nimport { Data, DataItem, StarCacheType, GachaCacheType, DayCacheType } from 'types';\nimport { achievements } from './achievements';\n\ntype AchievementsProps = {\n  onGetData: (key: string) => Data;\n};\n\nexport const Achievements: FC<AchievementsProps> = function ({ onGetData }) {\n  const allData = onGetData(SHOW_DATA_ALL_KEY);\n  const allAchievements = useMemo(() => {\n    const character: StarCacheType = {\n      '5': {},\n      '4': {},\n    };\n    const all: StarCacheType = {\n      '5': {},\n      '4': {},\n      '3': {},\n    };\n    const weapon: StarCacheType = {\n      '5': {},\n      '4': {},\n      '3': {},\n    };\n    const day: DayCacheType = {};\n    const gacha: GachaCacheType = {\n      10: [],\n      1: [],\n    };\n    const walk = (item: DataItem) => {\n      let cache = item.类别 === '角色' ? character : weapon;\n      all[item.星级][item.名称] = {\n        data: [item],\n      };\n      const currentDay = item.时间.slice(0, 10);\n      if (currentDay in day) {\n        day[currentDay].data.push(item);\n      } else {\n        day[currentDay] = { data: [item] };\n      }\n      if (!(item.名称 in cache[item.星级])) {\n        cache[item.星级][item.名称] = {\n          data: [item],\n        };\n      } else cache[item.星级][item.名称].data.push(item);\n    };\n    for (let i = 0, len = allData.length; i < len; ) {\n      const current = allData[i];\n      if (i < len - 1 && allData[i + 1].date === current.date) {\n        const temp = allData.slice(i, i + 10);\n        temp.forEach(walk);\n        gacha[10].push({\n          data: temp,\n        });\n        i = i + 10;\n      } else {\n        walk(current);\n        gacha[1].push(current);\n        i++;\n      }\n    }\n    return achievements\n      .map((func) =>\n        func({\n          all,\n          character,\n          weapon,\n          data: allData,\n          gacha,\n          day,\n        }),\n      )\n      .filter((v) => typeof v === 'object') as Array<AchievementCardProps>;\n  }, []);\n  return (\n    <div\n      css={css`\n        background: #f0eae2;\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        position: absolute;\n      `}\n    >\n      {allAchievements.map((props) => (\n        <AchievementCard {...props} />\n      ))}\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { FC, useCallback, useContext, useMemo, useRef, useState, Suspense, lazy } from 'react';\r\nimport { Menu, Layout, Spin } from 'antd';\r\n\r\nimport XLSXType, { WorkSheet as WorkSheetType } from 'xlsx/types';\r\nimport GlobalContext from 'context/GlobalContext';\r\nimport { SHOW_DATA_ALL_KEY } from 'const';\r\nimport { Data, DataItem } from 'types';\r\nimport { Achievements } from './Achievements';\r\nconst Timeline = lazy(() =>\r\n  import(/* webpackPrefetch: true */ './Timeline').then((module) => ({\r\n    default: module.Timeline,\r\n  })),\r\n);\r\nconst ShowData = lazy(() =>\r\n  import(/* webpackPrefetch: true */ './ShowData').then((module) => ({\r\n    default: module.ShowData,\r\n  })),\r\n);\r\n\r\ntype ShowPageProps = {};\r\nconst { Content, Sider } = Layout;\r\n\r\nexport const ShowPage: FC<ShowPageProps> = function () {\r\n  const { workbook } = useContext(GlobalContext);\r\n  const sheetNames = (workbook as any).SheetNames;\r\n  const getJson = useMemo(() => {\r\n    const cache = Object.create(null);\r\n    function getJson(key: string) {\r\n      const XLSX: typeof XLSXType = (window as any).XLSX;\r\n      if (key in cache) return cache[key];\r\n      let data: Data;\r\n      if (key === SHOW_DATA_ALL_KEY) {\r\n        data = sheetNames.reduce((acc: Array<any>, cur: string) => acc.concat(getJson(cur)), []);\r\n        data.sort((a, b) => (a.date === b.date ? a.总次数 - b.总次数 : a.date - b.date));\r\n      } else {\r\n        const sheet = (workbook as any).Sheets[key] as WorkSheetType;\r\n        data = XLSX.utils.sheet_to_json(sheet);\r\n        data.forEach((info: DataItem) => {\r\n          info.pool = key;\r\n          info.date = +new Date(info.时间);\r\n        });\r\n      }\r\n      return (cache.key = data);\r\n    }\r\n    return getJson;\r\n  }, [workbook]);\r\n  const [activeMenu, setActiveMenu] = useState('rawData');\r\n  const handleMenuChange = useCallback(({ key }: any) => {\r\n    setActiveMenu(key);\r\n  }, []);\r\n  const renderContent = useCallback((key) => {\r\n    if (key === 'rawData') return <ShowData onGetData={getJson} tabs={sheetNames} />;\r\n    else if (key === 'timeline') return <Timeline onGetData={getJson} />;\r\n    else if (key === 'achievements') return <Achievements onGetData={getJson} />;\r\n    else return <div>暂无</div>;\r\n  }, []);\r\n  return (\r\n    <Layout\r\n      css={css`\r\n        overflow: hidden;\r\n      `}\r\n    >\r\n      <Sider\r\n        theme='light'\r\n        width='20%'\r\n        style={{\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <div className='logo' />\r\n        <Menu\r\n          mode='inline'\r\n          defaultSelectedKeys={['rawData']}\r\n          onSelect={handleMenuChange}\r\n          css={css`\r\n            margin-top: 60px;\r\n            .ant-menu-item {\r\n              height: 60px;\r\n              line-height: 60px;\r\n            }\r\n          `}\r\n        >\r\n          <Menu.Item key='timeline'>时间轴</Menu.Item>\r\n          <Menu.Item key='rawData'>原数据</Menu.Item>\r\n          <Menu.Item key='achievements'>成就表</Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Content\r\n          css={css`\r\n            margin: 0;\r\n            position: relative;\r\n          `}\r\n        >\r\n          <Suspense\r\n            fallback={\r\n              <Spin\r\n                size='large'\r\n                tip='加载中...'\r\n                css={css`\r\n                  display: block;\r\n                  margin: 150px auto;\r\n                `}\r\n              />\r\n            }\r\n          >\r\n            {renderContent(activeMenu)}\r\n          </Suspense>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\nimport { useContext, useState } from 'react';\nimport GlobalContext from './context/GlobalContext';\nimport { LoadPage } from './pages/LoadPage';\nimport { ShowPage } from './pages/ShowPage';\n\nimport './App.css';\nimport { WorkBook } from 'xlsx/types';\n\nfunction App() {\n  const { workbook } = useContext(GlobalContext);\n  return workbook === null ? <LoadPage /> : <ShowPage />;\n}\nfunction WrappedApp() {\n  const [workbook, setWorkbook] = useState<WorkBook | null>(null);\n  return (\n    <GlobalContext.Provider\n      value={{\n        workbook: workbook,\n        updateWorkbook: setWorkbook,\n      }}\n    >\n      <App />\n    </GlobalContext.Provider>\n  );\n}\nexport default WrappedApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const SHOW_DATA_ALL_KEY = '总览';\n\nexport const SCHEMA = [\n  { name: '时间', type: 'string', width: 180 },\n  { name: '编号', type: 'number', hidden: true, width: 120 },\n  { name: '名称', type: 'string', width: 130 },\n  { name: '类别', type: 'string', width: 50 },\n  { name: '星级', type: 'number', width: 50 },\n  { name: '总次数', type: 'number', hidden: true, width: 100 },\n  { name: '保底内', type: 'number', width: 80 },\n];\nexport const SCHEMA_ALL = (SCHEMA as any).concat({\n  name: 'pool',\n  title: '池子名称',\n  type: 'string',\n  width: 120,\n});\n"],"sourceRoot":""}